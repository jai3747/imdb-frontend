{"ast":null,"code":"// // src/config/api.config.js\n// const API_CONFIG = {\n//   BASE_URL: 'http://localhost:5000/api',\n//   DIRECT_BASE_URL: 'http://localhost:5000',\n//   TIMEOUT: 10000,\n//   ENDPOINTS: {\n//     HEALTH: '/health',\n//     MOVIES: '/movies',\n//     ACTORS: '/actors',\n//     PRODUCERS: '/producers',\n//     METRICS_REPORT: '/metrics-report',\n//     // Fixed API_STATUS endpoints - these should be simple GET endpoints that return status\n//     API_STATUS: {\n//       ACTOR: '/actors',      // Just check if actors endpoint responds\n//       MOVIE: '/movies',      // Just check if movies endpoint responds  \n//       PRODUCER: '/producers' // Just check if producers endpoint responds\n//     }\n//   }\n// };\n\n// // Helper function to get direct base URL (without /api prefix)\n// const getDirectBaseURL = () => {\n//   return API_CONFIG.DIRECT_BASE_URL;\n// };\n\n// export { API_CONFIG, getDirectBaseURL };\n// src/config/api.config.js\nconst isDevelopment = process.env.NODE_ENV !== 'production';\nconst isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n\n// Determine the correct backend URL based on environment\nconst getBackendURL = () => {\n  if (isDevelopment || isLocal) {\n    return 'http://localhost:5000';\n  }\n  // For production, use the same domain\n  return window.location.origin;\n};\nconst BACKEND_URL = getBackendURL();\nconst API_CONFIG = {\n  BASE_URL: `${BACKEND_URL}/api`,\n  DIRECT_BASE_URL: BACKEND_URL,\n  TIMEOUT: 15000,\n  // Increased timeout\n  RETRY_ATTEMPTS: 2,\n  ENDPOINTS: {\n    HEALTH: '/health',\n    MOVIES: '/movies',\n    ACTORS: '/actors',\n    PRODUCERS: '/producers',\n    METRICS_REPORT: '/metrics-report'\n  }\n};\n\n// Helper function to get direct base URL (without /api prefix)\nconst getDirectBaseURL = () => {\n  return API_CONFIG.DIRECT_BASE_URL;\n};\n\n// Helper function to get API base URL (with /api prefix)\nconst getAPIBaseURL = () => {\n  return API_CONFIG.BASE_URL;\n};\n\n// Debug function to log current configuration\nconst logAPIConfig = () => {\n  console.log('ðŸ”§ API Configuration:', {\n    isDevelopment,\n    isLocal,\n    hostname: window.location.hostname,\n    backendURL: BACKEND_URL,\n    apiBaseURL: API_CONFIG.BASE_URL,\n    directBaseURL: API_CONFIG.DIRECT_BASE_URL\n  });\n};\nexport { API_CONFIG, getDirectBaseURL, getAPIBaseURL, logAPIConfig };","map":{"version":3,"names":["isDevelopment","process","env","NODE_ENV","isLocal","window","location","hostname","getBackendURL","origin","BACKEND_URL","API_CONFIG","BASE_URL","DIRECT_BASE_URL","TIMEOUT","RETRY_ATTEMPTS","ENDPOINTS","HEALTH","MOVIES","ACTORS","PRODUCERS","METRICS_REPORT","getDirectBaseURL","getAPIBaseURL","logAPIConfig","console","log","backendURL","apiBaseURL","directBaseURL"],"sources":["/Users/jayachandran/imdb/imdb-frontend/src/config/api.config.js"],"sourcesContent":["\n// // src/config/api.config.js\n// const API_CONFIG = {\n//   BASE_URL: 'http://localhost:5000/api',\n//   DIRECT_BASE_URL: 'http://localhost:5000',\n//   TIMEOUT: 10000,\n//   ENDPOINTS: {\n//     HEALTH: '/health',\n//     MOVIES: '/movies',\n//     ACTORS: '/actors',\n//     PRODUCERS: '/producers',\n//     METRICS_REPORT: '/metrics-report',\n//     // Fixed API_STATUS endpoints - these should be simple GET endpoints that return status\n//     API_STATUS: {\n//       ACTOR: '/actors',      // Just check if actors endpoint responds\n//       MOVIE: '/movies',      // Just check if movies endpoint responds  \n//       PRODUCER: '/producers' // Just check if producers endpoint responds\n//     }\n//   }\n// };\n\n// // Helper function to get direct base URL (without /api prefix)\n// const getDirectBaseURL = () => {\n//   return API_CONFIG.DIRECT_BASE_URL;\n// };\n\n// export { API_CONFIG, getDirectBaseURL };\n// src/config/api.config.js\nconst isDevelopment = process.env.NODE_ENV !== 'production';\nconst isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n\n// Determine the correct backend URL based on environment\nconst getBackendURL = () => {\n  if (isDevelopment || isLocal) {\n    return 'http://localhost:5000';\n  }\n  // For production, use the same domain\n  return window.location.origin;\n};\n\nconst BACKEND_URL = getBackendURL();\n\nconst API_CONFIG = {\n  BASE_URL: `${BACKEND_URL}/api`,\n  DIRECT_BASE_URL: BACKEND_URL,\n  TIMEOUT: 15000, // Increased timeout\n  RETRY_ATTEMPTS: 2,\n  ENDPOINTS: {\n    HEALTH: '/health',\n    MOVIES: '/movies',\n    ACTORS: '/actors',\n    PRODUCERS: '/producers',\n    METRICS_REPORT: '/metrics-report'\n  }\n};\n\n// Helper function to get direct base URL (without /api prefix)\nconst getDirectBaseURL = () => {\n  return API_CONFIG.DIRECT_BASE_URL;\n};\n\n// Helper function to get API base URL (with /api prefix)\nconst getAPIBaseURL = () => {\n  return API_CONFIG.BASE_URL;\n};\n\n// Debug function to log current configuration\nconst logAPIConfig = () => {\n  console.log('ðŸ”§ API Configuration:', {\n    isDevelopment,\n    isLocal,\n    hostname: window.location.hostname,\n    backendURL: BACKEND_URL,\n    apiBaseURL: API_CONFIG.BASE_URL,\n    directBaseURL: API_CONFIG.DIRECT_BASE_URL\n  });\n};\n\nexport { API_CONFIG, getDirectBaseURL, getAPIBaseURL, logAPIConfig };"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAMA,aAAa,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;AAC3D,MAAMC,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW;;AAEpG;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,IAAIR,aAAa,IAAII,OAAO,EAAE;IAC5B,OAAO,uBAAuB;EAChC;EACA;EACA,OAAOC,MAAM,CAACC,QAAQ,CAACG,MAAM;AAC/B,CAAC;AAED,MAAMC,WAAW,GAAGF,aAAa,CAAC,CAAC;AAEnC,MAAMG,UAAU,GAAG;EACjBC,QAAQ,EAAG,GAAEF,WAAY,MAAK;EAC9BG,eAAe,EAAEH,WAAW;EAC5BI,OAAO,EAAE,KAAK;EAAE;EAChBC,cAAc,EAAE,CAAC;EACjBC,SAAS,EAAE;IACTC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE,YAAY;IACvBC,cAAc,EAAE;EAClB;AACF,CAAC;;AAED;AACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,OAAOX,UAAU,CAACE,eAAe;AACnC,CAAC;;AAED;AACA,MAAMU,aAAa,GAAGA,CAAA,KAAM;EAC1B,OAAOZ,UAAU,CAACC,QAAQ;AAC5B,CAAC;;AAED;AACA,MAAMY,YAAY,GAAGA,CAAA,KAAM;EACzBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;IACnC1B,aAAa;IACbI,OAAO;IACPG,QAAQ,EAAEF,MAAM,CAACC,QAAQ,CAACC,QAAQ;IAClCoB,UAAU,EAAEjB,WAAW;IACvBkB,UAAU,EAAEjB,UAAU,CAACC,QAAQ;IAC/BiB,aAAa,EAAElB,UAAU,CAACE;EAC5B,CAAC,CAAC;AACJ,CAAC;AAED,SAASF,UAAU,EAAEW,gBAAgB,EAAEC,aAAa,EAAEC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}