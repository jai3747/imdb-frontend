{"ast":null,"code":"var _jsxFileName = \"/Users/jayachandran/new-imdb/imdb-clone-client/src/App.js\",\n  _s = $RefreshSig$();\n// // // // // // //App.js\n// // // // // // import './App.css';\n// // // // // // import { ThemeProvider } from '@emotion/react';\n// // // // // // import { AppBar, Button, Paper, Toolbar, createTheme } from '@mui/material';\n// // // // // // import { useState } from 'react';\n// // // // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // // // import AddMovie from './AddMovie';\n// // // // // // import Movie from './Movie';\n// // // // // // import AddActor from './AddActor';\n// // // // // // import AddProducer from './AddProducer';\n// // // // // // import EditMovies from './EditMovies';\n\n// // // // // // function App() {\n// // // // // //   const [mode, setMode] = useState(\"dark\");\n// // // // // //   const navigate = useNavigate();\n\n// // // // // //   const theme = createTheme({\n// // // // // //     palette: {\n// // // // // //       mode: mode,\n// // // // // //     },\n// // // // // //   });\n\n// // // // // //   return (\n// // // // // //     <ThemeProvider theme={theme}>\n// // // // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // // // //           <Toolbar>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               <span className='logo'>IMDB</span>\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               All Movies\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/add-movies\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               Add Movies\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/add-actor\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               Add Actor\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/add-producer\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               Add Producer\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               style={{marginLeft : \"auto\"}}\n// // // // // //               startIcon = {mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // // // //               onClick={() => {\n// // // // // //                 setMode(mode === \"light\" ? \"dark\" : \"light\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // // // //             </Button>\n// // // // // //           </Toolbar>\n// // // // // //         </AppBar>\n\n// // // // // //         <Routes>\n// // // // // //           <Route\n// // // // // //            exact\n// // // // // //             path=\"/\"\n// // // // // //             element={<Movie  />}\n// // // // // //           />\n// // // // // //           <Route\n// // // // // //             path=\"/add-movies\"\n// // // // // //             element={\n// // // // // //               <AddMovie  />\n// // // // // //             }\n// // // // // //           />\n// // // // // //           <Route\n// // // // // //             path=\"/add-actor\"\n// // // // // //             element={\n// // // // // //               <AddActor  />\n// // // // // //             }\n// // // // // //           />\n// // // // // //           <Route\n// // // // // //             path=\"/add-producer\"\n// // // // // //             element={\n// // // // // //               <AddProducer />\n// // // // // //             }\n// // // // // //           />\n\n// // // // // //           <Route\n// // // // // //             path=\"movies/edit/:id\"\n// // // // // //             element={\n// // // // // //               <EditMovies  />\n// // // // // //             }\n// // // // // //           />\n// // // // // //         </Routes>\n\n// // // // // //       </Paper>\n// // // // // //     </ThemeProvider>\n// // // // // //   );\n// // // // // // }\n\n// // // // // // export default App;\n// // // // // // App.js\n// // // // // import './App.css';\n// // // // // import { ThemeProvider } from '@emotion/react';\n// // // // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert } from '@mui/material';\n// // // // // import { useState, useEffect } from 'react';\n// // // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // // import AddMovie from './AddMovie';\n// // // // // import Movie from './Movie';\n// // // // // import AddActor from './AddActor';\n// // // // // import AddProducer from './AddProducer';\n// // // // // import EditMovies from './EditMovies';\n// // // // // import axios from 'axios';\n\n// // // // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // // // function App() {\n// // // // //   const [mode, setMode] = useState(\"dark\");\n// // // // //   const navigate = useNavigate();\n// // // // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // // // //   const [error, setError] = useState(null);\n\n// // // // //   const theme = createTheme({\n// // // // //     palette: {\n// // // // //       mode: mode,\n// // // // //     },\n// // // // //   });\n\n// // // // //   // Check API connectivity\n// // // // //   useEffect(() => {\n// // // // //     const checkApiStatus = async () => {\n// // // // //       try {\n// // // // //         const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // // // //         if (movieResponse.status === 200) {\n// // // // //           setIsApiConnected(true);\n// // // // //           setError(null);\n// // // // //         }\n// // // // //       } catch (err) {\n// // // // //         setIsApiConnected(false);\n// // // // //         setError(\"Unable to connect to the server. Please try again later.\");\n// // // // //         console.error(\"API Connection Error:\", err);\n// // // // //       }\n// // // // //     };\n\n// // // // //     checkApiStatus();\n// // // // //     // Check connection every 5 minutes\n// // // // //     const intervalId = setInterval(checkApiStatus, 300000);\n\n// // // // //     return () => clearInterval(intervalId);\n// // // // //   }, []);\n\n// // // // //   const handleClose = (event, reason) => {\n// // // // //     if (reason === 'clickaway') {\n// // // // //       return;\n// // // // //     }\n// // // // //     setError(null);\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <ThemeProvider theme={theme}>\n// // // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // // //           <Toolbar>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/\")}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               <span className='logo'>IMDB</span>\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/\")}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               All Movies\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/add-movies\")}\n// // // // //               color=\"inherit\"\n// // // // //               disabled={!isApiConnected}\n// // // // //             >\n// // // // //               Add Movies\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/add-actor\")}\n// // // // //               color=\"inherit\"\n// // // // //               disabled={!isApiConnected}\n// // // // //             >\n// // // // //               Add Actor\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/add-producer\")}\n// // // // //               color=\"inherit\"\n// // // // //               disabled={!isApiConnected}\n// // // // //             >\n// // // // //               Add Producer\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               style={{marginLeft: \"auto\"}}\n// // // // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // // //             </Button>\n// // // // //           </Toolbar>\n// // // // //         </AppBar>\n\n// // // // //         {/* API Status Indicator */}\n// // // // //         <Snackbar open={!isApiConnected} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n// // // // //           <Alert severity=\"warning\">\n// // // // //             Backend server is not connected. Some features may be unavailable.\n// // // // //           </Alert>\n// // // // //         </Snackbar>\n\n// // // // //         {/* Error Message */}\n// // // // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // // // //           <Alert onClose={handleClose} severity=\"error\">\n// // // // //             {error}\n// // // // //           </Alert>\n// // // // //         </Snackbar>\n\n// // // // //         <Routes>\n// // // // //           <Route\n// // // // //             exact\n// // // // //             path=\"/\"\n// // // // //             element={<Movie setError={setError} />}\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-movies\"\n// // // // //             element={\n// // // // //               <AddMovie setError={setError} />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-actor\"\n// // // // //             element={\n// // // // //               <AddActor setError={setError} />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-producer\"\n// // // // //             element={\n// // // // //               <AddProducer setError={setError} />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"movies/edit/:id\"\n// // // // //             element={\n// // // // //               <EditMovies setError={setError} />\n// // // // //             }\n// // // // //           />\n// // // // //         </Routes>\n// // // // //       </Paper>\n// // // // //     </ThemeProvider>\n// // // // //   );\n// // // // // }\n\n// // // // // export default App;\n// // // // // App.js\n// // // // import './App.css';\n// // // // import { ThemeProvider } from '@emotion/react';\n// // // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress } from '@mui/material';\n// // // // import { useState, useEffect } from 'react';\n// // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // // // import CancelIcon from '@mui/icons-material/Cancel';\n// // // // import AddMovie from './AddMovie';\n// // // // import Movie from './Movie';\n// // // // import AddActor from './AddActor';\n// // // // import AddProducer from './AddProducer';\n// // // // import EditMovies from './EditMovies';\n// // // // import axios from 'axios';\n\n// // // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // // function App() {\n// // // //   const [mode, setMode] = useState(\"dark\");\n// // // //   const navigate = useNavigate();\n// // // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // // //   const [isChecking, setIsChecking] = useState(true);\n// // // //   const [error, setError] = useState(null);\n\n// // // //   const theme = createTheme({\n// // // //     palette: {\n// // // //       mode: mode,\n// // // //     },\n// // // //   });\n\n// // // //   // Check API connectivity\n// // // //   const checkApiStatus = async () => {\n// // // //     setIsChecking(true);\n// // // //     try {\n// // // //       const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // // //       if (movieResponse.status === 200) {\n// // // //         setIsApiConnected(true);\n// // // //         setError(null);\n// // // //       }\n// // // //     } catch (err) {\n// // // //       setIsApiConnected(false);\n// // // //       setError(\"Unable to connect to the server. Please try again later.\");\n// // // //       console.error(\"API Connection Error:\", err);\n// // // //     } finally {\n// // // //       setIsChecking(false);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     checkApiStatus();\n// // // //     const intervalId = setInterval(checkApiStatus, 300000);\n// // // //     return () => clearInterval(intervalId);\n// // // //   }, []);\n\n// // // //   const handleClose = (event, reason) => {\n// // // //     if (reason === 'clickaway') {\n// // // //       return;\n// // // //     }\n// // // //     setError(null);\n// // // //   };\n\n// // // //   return (\n// // // //     <ThemeProvider theme={theme}>\n// // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // //           <Toolbar>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               <span className='logo'>IMDB</span>\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               All Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-movies\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-actor\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Actor\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-producer\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Producer\n// // // //             </Button>\n\n// // // //             {/* Connection Status Button */}\n// // // //             <Button\n// // // //               onClick={checkApiStatus}\n// // // //               style={{\n// // // //                 marginLeft: 'auto',\n// // // //                 marginRight: '10px',\n// // // //                 backgroundColor: isApiConnected ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// // // //                 color: isApiConnected ? '#2e7d32' : '#d32f2f'\n// // // //               }}\n// // // //               startIcon={\n// // // //                 isChecking ? (\n// // // //                   <CircularProgress size={20} color={isApiConnected ? \"success\" : \"error\"} />\n// // // //                 ) : isApiConnected ? (\n// // // //                   <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// // // //                 ) : (\n// // // //                   <CancelIcon style={{ color: '#d32f2f' }} />\n// // // //                 )\n// // // //               }\n// // // //             >\n// // // //               {isChecking ? 'Checking...' : isApiConnected ? 'Connected' : 'Disconnected'}\n// // // //             </Button>\n\n// // // //             <Button\n// // // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // //             </Button>\n// // // //           </Toolbar>\n// // // //         </AppBar>\n\n// // // //         {/* Error Message */}\n// // // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // // //           <Alert onClose={handleClose} severity=\"error\">\n// // // //             {error}\n// // // //           </Alert>\n// // // //         </Snackbar>\n\n// // // //         <Routes>\n// // // //           <Route\n// // // //             exact\n// // // //             path=\"/\"\n// // // //             element={<Movie setError={setError} />}\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-movies\"\n// // // //             element={\n// // // //               <AddMovie setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-actor\"\n// // // //             element={\n// // // //               <AddActor setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-producer\"\n// // // //             element={\n// // // //               <AddProducer setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"movies/edit/:id\"\n// // // //             element={\n// // // //               <EditMovies setError={setError} />\n// // // //             }\n// // // //           />\n// // // //         </Routes>\n// // // //       </Paper>\n// // // //     </ThemeProvider>\n// // // //   );\n// // // // }\n\n// // // // export default App;\n// // // // App.js\n// // // import './App.css';\n// // // import { ThemeProvider } from '@emotion/react';\n// // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// // // import { useState, useEffect } from 'react';\n// // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // // import CancelIcon from '@mui/icons-material/Cancel';\n// // // import StorageIcon from '@mui/icons-material/Storage';\n// // // import CloudIcon from '@mui/icons-material/Cloud';\n// // // import AddMovie from './AddMovie';\n// // // import Movie from './Movie';\n// // // import AddActor from './AddActor';\n// // // import AddProducer from './AddProducer';\n// // // import EditMovies from './EditMovies';\n// // // import axios from 'axios';\n\n// // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // function App() {\n// // //   const [mode, setMode] = useState(\"dark\");\n// // //   const navigate = useNavigate();\n// // //   const [healthStatus, setHealthStatus] = useState({\n// // //     api: { status: false, checking: true },\n// // //     database: { status: false, checking: true }\n// // //   });\n// // //   const [error, setError] = useState(null);\n\n// // //   const theme = createTheme({\n// // //     palette: {\n// // //       mode: mode,\n// // //     },\n// // //   });\n\n// // //   // Check API and Database health\n// // //   const checkHealthStatus = async () => {\n// // //     setHealthStatus(prev => ({\n// // //       api: { ...prev.api, checking: true },\n// // //       database: { ...prev.database, checking: true }\n// // //     }));\n\n// // //     try {\n// // //       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n// // //       setHealthStatus({\n// // //         api: { status: true, checking: false },\n// // //         database: { \n// // //           status: response.data.database.status === \"connected\", \n// // //           checking: false \n// // //         }\n// // //       });\n// // //       setError(null);\n// // //     } catch (err) {\n// // //       setHealthStatus({\n// // //         api: { status: false, checking: false },\n// // //         database: { status: false, checking: false }\n// // //       });\n// // //       setError(\"System health check failed. Please try again later.\");\n// // //       console.error(\"Health Check Error:\", err);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     checkHealthStatus();\n// // //     const intervalId = setInterval(checkHealthStatus, 300000); // Check every 5 minutes\n// // //     return () => clearInterval(intervalId);\n// // //   }, []);\n\n// // //   const handleClose = (event, reason) => {\n// // //     if (reason === 'clickaway') return;\n// // //     setError(null);\n// // //   };\n\n// // //   // Health Status Indicator Component\n// // //   const HealthIndicator = ({ type, status, checking }) => {\n// // //     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n// // //     const label = type === 'api' ? 'API' : 'Database';\n\n// // //     return (\n// // //       <Tooltip title={`${label} Status`}>\n// // //         <Button\n// // //           onClick={checkHealthStatus}\n// // //           style={{\n// // //             marginLeft: '10px',\n// // //             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// // //             color: status ? '#2e7d32' : '#d32f2f',\n// // //             minWidth: '120px',\n// // //           }}\n// // //           startIcon={\n// // //             checking ? (\n// // //               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n// // //             ) : status ? (\n// // //               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// // //             ) : (\n// // //               <CancelIcon style={{ color: '#d32f2f' }} />\n// // //             )\n// // //           }\n// // //         >\n// // //           {checking ? 'Checking...' : `${label} ${status ? 'Healthy' : 'Down'}`}\n// // //         </Button>\n// // //       </Tooltip>\n// // //     );\n// // //   };\n\n// // //   return (\n// // //     <ThemeProvider theme={theme}>\n// // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // //           <Toolbar>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               <span className='logo'>IMDB</span>\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               All Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-movies\")}\n// // //               color=\"inherit\"\n// // //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// // //             >\n// // //               Add Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-actor\")}\n// // //               color=\"inherit\"\n// // //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// // //             >\n// // //               Add Actor\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-producer\")}\n// // //               color=\"inherit\"\n// // //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// // //             >\n// // //               Add Producer\n// // //             </Button>\n\n// // //             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n// // //               <HealthIndicator \n// // //                 type=\"api\" \n// // //                 status={healthStatus.api.status} \n// // //                 checking={healthStatus.api.checking} \n// // //               />\n// // //               <HealthIndicator \n// // //                 type=\"database\" \n// // //                 status={healthStatus.database.status} \n// // //                 checking={healthStatus.database.checking} \n// // //               />\n\n// // //               <Button\n// // //                 sx={{ ml: 2 }}\n// // //                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // //                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // //                 color=\"inherit\"\n// // //               >\n// // //                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // //               </Button>\n// // //             </Box>\n// // //           </Toolbar>\n// // //         </AppBar>\n\n// // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // //           <Alert onClose={handleClose} severity=\"error\">\n// // //             {error}\n// // //           </Alert>\n// // //         </Snackbar>\n\n// // //         <Routes>\n// // //           <Route\n// // //             exact\n// // //             path=\"/\"\n// // //             element={<Movie setError={setError} />}\n// // //           />\n// // //           <Route\n// // //             path=\"/add-movies\"\n// // //             element={\n// // //               <AddMovie setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-actor\"\n// // //             element={\n// // //               <AddActor setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-producer\"\n// // //             element={\n// // //               <AddProducer setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"movies/edit/:id\"\n// // //             element={\n// // //               <EditMovies setError={setError} />\n// // //             }\n// // //           />\n// // //         </Routes>\n// // //       </Paper>\n// // //     </ThemeProvider>\n// // //   );\n// // // }\n\n// // // export default App;\n// // // App.js\n// // import './App.css';\n// // import { ThemeProvider } from '@emotion/react';\n// // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// // import { useState, useEffect } from 'react';\n// // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // import CancelIcon from '@mui/icons-material/Cancel';\n// // import StorageIcon from '@mui/icons-material/Storage';\n// // import CloudIcon from '@mui/icons-material/Cloud';\n// // import AddMovie from './AddMovie';\n// // import Movie from './Movie';\n// // import AddActor from './AddActor';\n// // import AddProducer from './AddProducer';\n// // import EditMovies from './EditMovies';\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // function App() {\n// //   const [mode, setMode] = useState(\"dark\");\n// //   const navigate = useNavigate();\n// //   const [healthStatus, setHealthStatus] = useState({\n// //     api: { status: false, checking: true },\n// //     database: { status: false, checking: true }\n// //   });\n// //   const [error, setError] = useState(null);\n\n// //   const theme = createTheme({\n// //     palette: {\n// //       mode: mode,\n// //     },\n// //   });\n\n// //   // Check API and Database health\n// //   const checkHealthStatus = async () => {\n// //     setHealthStatus(prev => ({\n// //       api: { ...prev.api, checking: true },\n// //       database: { ...prev.database, checking: true }\n// //     }));\n\n// //     try {\n// //       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n\n// //       // Check if we got a response at all\n// //       const apiStatus = response && response.status >= 200 && response.status < 500;\n\n// //       // Safely check database status from response\n// //       const dbStatus = response?.data?.database?.status === \"connected\";\n\n// //       setHealthStatus({\n// //         api: { status: apiStatus, checking: false },\n// //         database: { status: dbStatus, checking: false }\n// //       });\n\n// //       setError(null);\n// //     } catch (err) {\n// //       console.error(\"Health Check Error:\", err);\n\n// //       setHealthStatus({\n// //         api: { status: false, checking: false },\n// //         database: { status: false, checking: false }\n// //       });\n\n// //       setError(\"Unable to connect to the server. Please try again later.\");\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     checkHealthStatus();\n// //     const intervalId = setInterval(checkHealthStatus, 30000); // Check every 30 seconds\n// //     return () => clearInterval(intervalId);\n// //   }, []);\n\n// //   const handleClose = (event, reason) => {\n// //     if (reason === 'clickaway') return;\n// //     setError(null);\n// //   };\n\n// //   // Health Status Indicator Component\n// //   const HealthIndicator = ({ type, status, checking }) => {\n// //     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n// //     const label = type === 'api' ? 'API' : 'Database';\n\n// //     return (\n// //       <Tooltip title={`${label} Status - Click to refresh`}>\n// //         <Button\n// //           onClick={checkHealthStatus}\n// //           style={{\n// //             marginLeft: '10px',\n// //             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// //             color: status ? '#2e7d32' : '#d32f2f',\n// //             minWidth: '120px',\n// //           }}\n// //           startIcon={\n// //             checking ? (\n// //               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n// //             ) : status ? (\n// //               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// //             ) : (\n// //               <CancelIcon style={{ color: '#d32f2f' }} />\n// //             )\n// //           }\n// //         >\n// //           {checking ? 'Checking...' : `${label} ${status ? 'Online' : 'Offline'}`}\n// //         </Button>\n// //       </Tooltip>\n// //     );\n// //   };\n\n// //   return (\n// //     <ThemeProvider theme={theme}>\n// //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// //         <AppBar className=\"nav-bar\" position=\"static\">\n// //           <Toolbar>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               <span className='logo'>IMDB</span>\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               All Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-movies\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-actor\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Actor\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-producer\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Producer\n// //             </Button>\n\n// //             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n// //               <HealthIndicator \n// //                 type=\"api\" \n// //                 status={healthStatus.api.status} \n// //                 checking={healthStatus.api.checking} \n// //               />\n// //               <HealthIndicator \n// //                 type=\"database\" \n// //                 status={healthStatus.database.status} \n// //                 checking={healthStatus.database.checking} \n// //               />\n\n// //               <Button\n// //                 sx={{ ml: 2 }}\n// //                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// //                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// //                 color=\"inherit\"\n// //               >\n// //                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n// //               </Button>\n// //             </Box>\n// //           </Toolbar>\n// //         </AppBar>\n\n// //         <Snackbar \n// //           open={!!error} \n// //           autoHideDuration={6000} \n// //           onClose={handleClose}\n// //           anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n// //         >\n// //           <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n// //             {error}\n// //           </Alert>\n// //         </Snackbar>\n\n// //         <Routes>\n// //           <Route\n// //             exact\n// //             path=\"/\"\n// //             element={<Movie setError={setError} />}\n// //           />\n// //           <Route\n// //             path=\"/add-movies\"\n// //             element={\n// //               <AddMovie setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-actor\"\n// //             element={\n// //               <AddActor setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-producer\"\n// //             element={\n// //               <AddProducer setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"movies/edit/:id\"\n// //             element={\n// //               <EditMovies setError={setError} />\n// //             }\n// //           />\n// //         </Routes>\n// //       </Paper>\n// //     </ThemeProvider>\n// //   );\n// // }\n\n// // export default App;\n// // App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Box } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n// import axios from 'axios';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [apiStatus, setApiStatus] = useState(false);\n//   const [dbStatus, setDbStatus] = useState(false);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   // Check API and Database health\n//   const checkHealth = async () => {\n//     try {\n//       const response = await axios.get(`${API_BASE_URL}/health`);\n//       setApiStatus(true);\n//       setDbStatus(response.data.database === \"connected\");\n//     } catch (err) {\n//       setApiStatus(false);\n//       setDbStatus(false);\n//       console.error(\"Health check failed:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkHealth();\n//     const interval = setInterval(checkHealth, 30000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Status indicator component\n//   const StatusIndicator = ({ isOnline, label }) => (\n//     <Box \n//       sx={{ \n//         display: 'flex', \n//         alignItems: 'center', \n//         bgcolor: isOnline ? 'rgba(46, 125, 50, 0.1)' : 'rgba(211, 47, 47, 0.1)',\n//         color: isOnline ? '#2e7d32' : '#d32f2f',\n//         py: 0.5,\n//         px: 2,\n//         borderRadius: 1,\n//         mr: 1\n//       }}\n//     >\n//       {isOnline ? (\n//         <CheckCircleIcon sx={{ fontSize: 20, mr: 1 }} />\n//       ) : (\n//         <CancelIcon sx={{ fontSize: 20, mr: 1 }} />\n//       )}\n//       {`${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`}\n//     </Box>\n//   );\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               ALL MOVIES\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//             >\n//               ADD MOVIES\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//             >\n//               ADD ACTOR\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//             >\n//               ADD PRODUCER\n//             </Button>\n\n//             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n//               <StatusIndicator isOnline={apiStatus} label=\"API\" />\n//               <StatusIndicator isOnline={dbStatus} label=\"DATABASE\" />\n\n//               <Button\n//                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//                 color=\"inherit\"\n//                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//               >\n//                 {mode === \"light\" ? \"DARK\" : \"LIGHT\"} MODE\n//               </Button>\n//             </Box>\n//           </Toolbar>\n//         </AppBar>\n\n//         <Routes>\n//           <Route exact path=\"/\" element={<Movie />} />\n//           <Route path=\"/add-movies\" element={<AddMovie />} />\n//           <Route path=\"/add-actor\" element={<AddActor />} />\n//           <Route path=\"/add-producer\" element={<AddProducer />} />\n//           <Route path=\"movies/edit/:id\" element={<EditMovies />} />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\nimport './App.css';\nimport { ThemeProvider } from '@emotion/react';\nimport { AppBar, Button, Paper, Toolbar, createTheme, Box } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport AddMovie from './AddMovie';\nimport Movie from './Movie';\nimport AddActor from './AddActor';\nimport AddProducer from './AddProducer';\nimport EditMovies from './EditMovies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"dark\");\n  const navigate = useNavigate();\n  const [statuses, setStatuses] = useState({\n    backend: false,\n    database: false,\n    actorApi: false,\n    movieApi: false,\n    producerApi: false\n  });\n  const theme = createTheme({\n    palette: {\n      mode: mode\n    }\n  });\n  const checkApiStatus = async endpoint => {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`);\n      return response.ok;\n    } catch (error) {\n      console.error(`Error checking ${endpoint}:`, error);\n      return false;\n    }\n  };\n  const checkAllStatuses = async () => {\n    try {\n      // Check backend health and database status\n      const healthResponse = await fetch(`${API_BASE_URL}/health`);\n      const healthData = await healthResponse.json();\n\n      // Check individual API endpoints\n      const [actorStatus, movieStatus, producerStatus] = await Promise.all([checkApiStatus('/api-status/actor'), checkApiStatus('/api-status/movie'), checkApiStatus('/api-status/producer')]);\n      setStatuses({\n        backend: healthResponse.ok,\n        database: healthData.database === \"connected\",\n        actorApi: actorStatus,\n        movieApi: movieStatus,\n        producerApi: producerStatus\n      });\n    } catch (error) {\n      console.error(\"Status check failed:\", error);\n      setStatuses({\n        backend: false,\n        database: false,\n        actorApi: false,\n        movieApi: false,\n        producerApi: false\n      });\n    }\n  };\n  useEffect(() => {\n    checkAllStatuses();\n    const interval = setInterval(checkAllStatuses, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const StatusIndicator = ({\n    isOnline,\n    label\n  }) => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      bgcolor: isOnline ? 'rgba(46, 125, 50, 0.1)' : 'rgba(211, 47, 47, 0.1)',\n      color: isOnline ? '#2e7d32' : '#d32f2f',\n      py: 0.5,\n      px: 2,\n      borderRadius: 1,\n      mr: 1\n    },\n    children: [isOnline ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n      sx: {\n        fontSize: 20,\n        mr: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n      sx: {\n        fontSize: 20,\n        mr: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 9\n    }, this), `${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1116,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"paper\",\n      elevation: 5,\n      style: {\n        borderRadius: \"0px\",\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        className: \"nav-bar\",\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/\"),\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo\",\n              children: \"IMDB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/\"),\n            color: \"inherit\",\n            children: \"ALL MOVIES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/add-movies\"),\n            color: \"inherit\",\n            children: \"ADD MOVIES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/add-actor\"),\n            color: \"inherit\",\n            children: \"ADD ACTOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/add-producer\"),\n            color: \"inherit\",\n            children: \"ADD PRODUCER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              marginLeft: 'auto',\n              display: 'flex',\n              alignItems: 'center',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mr: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.backend,\n                label: \"BACKEND\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.database,\n                label: \"DB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.actorApi,\n                label: \"ACTOR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.movieApi,\n                label: \"MOVIE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.producerApi,\n                label: \"PRODUCER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: checkAllStatuses,\n                color: \"inherit\",\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1184,\n                  columnNumber: 30\n                }, this),\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setMode(mode === \"light\" ? \"dark\" : \"light\"),\n              color: \"inherit\",\n              startIcon: mode === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1193,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1193,\n                columnNumber: 68\n              }, this),\n              children: [mode === \"light\" ? \"DARK\" : \"LIGHT\", \" MODE\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-movies\",\n          element: /*#__PURE__*/_jsxDEV(AddMovie, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-actor\",\n          element: /*#__PURE__*/_jsxDEV(AddActor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-producer\",\n          element: /*#__PURE__*/_jsxDEV(AddProducer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"movies/edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(EditMovies, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1138,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Gm9d0u3hmQsJ53vdx+wKBi6jitc=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ThemeProvider","AppBar","Button","Paper","Toolbar","createTheme","Box","useState","useEffect","Route","Routes","useNavigate","Brightness7Icon","Brightness4Icon","CheckCircleIcon","CancelIcon","RefreshIcon","AddMovie","Movie","AddActor","AddProducer","EditMovies","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","App","_s","mode","setMode","navigate","statuses","setStatuses","backend","database","actorApi","movieApi","producerApi","theme","palette","checkApiStatus","endpoint","response","fetch","ok","error","console","checkAllStatuses","healthResponse","healthData","json","actorStatus","movieStatus","producerStatus","Promise","all","interval","setInterval","clearInterval","StatusIndicator","isOnline","label","sx","display","alignItems","bgcolor","color","py","px","borderRadius","mr","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","className","elevation","style","minHeight","position","onClick","marginLeft","flexWrap","size","startIcon","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/jayachandran/new-imdb/imdb-clone-client/src/App.js"],"sourcesContent":["// // // // // // //App.js\n// // // // // // import './App.css';\n// // // // // // import { ThemeProvider } from '@emotion/react';\n// // // // // // import { AppBar, Button, Paper, Toolbar, createTheme } from '@mui/material';\n// // // // // // import { useState } from 'react';\n// // // // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // // // import AddMovie from './AddMovie';\n// // // // // // import Movie from './Movie';\n// // // // // // import AddActor from './AddActor';\n// // // // // // import AddProducer from './AddProducer';\n// // // // // // import EditMovies from './EditMovies';\n\n// // // // // // function App() {\n// // // // // //   const [mode, setMode] = useState(\"dark\");\n// // // // // //   const navigate = useNavigate();\n\n// // // // // //   const theme = createTheme({\n// // // // // //     palette: {\n// // // // // //       mode: mode,\n// // // // // //     },\n// // // // // //   });\n\n// // // // // //   return (\n// // // // // //     <ThemeProvider theme={theme}>\n// // // // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // // // //           <Toolbar>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               <span className='logo'>IMDB</span>\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               All Movies\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/add-movies\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               Add Movies\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/add-actor\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               Add Actor\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               onClick={() => {\n// // // // // //                 navigate(\"/add-producer\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               Add Producer\n// // // // // //             </Button>\n// // // // // //             <Button\n// // // // // //               style={{marginLeft : \"auto\"}}\n// // // // // //               startIcon = {mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // // // //               onClick={() => {\n// // // // // //                 setMode(mode === \"light\" ? \"dark\" : \"light\");\n// // // // // //               }}\n// // // // // //               color=\"inherit\"\n// // // // // //             >\n// // // // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // // // //             </Button>\n// // // // // //           </Toolbar>\n// // // // // //         </AppBar>\n\n// // // // // //         <Routes>\n// // // // // //           <Route\n// // // // // //            exact\n// // // // // //             path=\"/\"\n// // // // // //             element={<Movie  />}\n// // // // // //           />\n// // // // // //           <Route\n// // // // // //             path=\"/add-movies\"\n// // // // // //             element={\n// // // // // //               <AddMovie  />\n// // // // // //             }\n// // // // // //           />\n// // // // // //           <Route\n// // // // // //             path=\"/add-actor\"\n// // // // // //             element={\n// // // // // //               <AddActor  />\n// // // // // //             }\n// // // // // //           />\n// // // // // //           <Route\n// // // // // //             path=\"/add-producer\"\n// // // // // //             element={\n// // // // // //               <AddProducer />\n// // // // // //             }\n// // // // // //           />\n          \n// // // // // //           <Route\n// // // // // //             path=\"movies/edit/:id\"\n// // // // // //             element={\n// // // // // //               <EditMovies  />\n// // // // // //             }\n// // // // // //           />\n// // // // // //         </Routes>\n\n// // // // // //       </Paper>\n// // // // // //     </ThemeProvider>\n// // // // // //   );\n// // // // // // }\n\n\n\n// // // // // // export default App;\n// // // // // // App.js\n// // // // // import './App.css';\n// // // // // import { ThemeProvider } from '@emotion/react';\n// // // // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert } from '@mui/material';\n// // // // // import { useState, useEffect } from 'react';\n// // // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // // import AddMovie from './AddMovie';\n// // // // // import Movie from './Movie';\n// // // // // import AddActor from './AddActor';\n// // // // // import AddProducer from './AddProducer';\n// // // // // import EditMovies from './EditMovies';\n// // // // // import axios from 'axios';\n\n// // // // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // // // function App() {\n// // // // //   const [mode, setMode] = useState(\"dark\");\n// // // // //   const navigate = useNavigate();\n// // // // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // // // //   const [error, setError] = useState(null);\n\n// // // // //   const theme = createTheme({\n// // // // //     palette: {\n// // // // //       mode: mode,\n// // // // //     },\n// // // // //   });\n\n// // // // //   // Check API connectivity\n// // // // //   useEffect(() => {\n// // // // //     const checkApiStatus = async () => {\n// // // // //       try {\n// // // // //         const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // // // //         if (movieResponse.status === 200) {\n// // // // //           setIsApiConnected(true);\n// // // // //           setError(null);\n// // // // //         }\n// // // // //       } catch (err) {\n// // // // //         setIsApiConnected(false);\n// // // // //         setError(\"Unable to connect to the server. Please try again later.\");\n// // // // //         console.error(\"API Connection Error:\", err);\n// // // // //       }\n// // // // //     };\n\n// // // // //     checkApiStatus();\n// // // // //     // Check connection every 5 minutes\n// // // // //     const intervalId = setInterval(checkApiStatus, 300000);\n\n// // // // //     return () => clearInterval(intervalId);\n// // // // //   }, []);\n\n// // // // //   const handleClose = (event, reason) => {\n// // // // //     if (reason === 'clickaway') {\n// // // // //       return;\n// // // // //     }\n// // // // //     setError(null);\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <ThemeProvider theme={theme}>\n// // // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // // //           <Toolbar>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/\")}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               <span className='logo'>IMDB</span>\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/\")}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               All Movies\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/add-movies\")}\n// // // // //               color=\"inherit\"\n// // // // //               disabled={!isApiConnected}\n// // // // //             >\n// // // // //               Add Movies\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/add-actor\")}\n// // // // //               color=\"inherit\"\n// // // // //               disabled={!isApiConnected}\n// // // // //             >\n// // // // //               Add Actor\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => navigate(\"/add-producer\")}\n// // // // //               color=\"inherit\"\n// // // // //               disabled={!isApiConnected}\n// // // // //             >\n// // // // //               Add Producer\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               style={{marginLeft: \"auto\"}}\n// // // // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // // //             </Button>\n// // // // //           </Toolbar>\n// // // // //         </AppBar>\n\n// // // // //         {/* API Status Indicator */}\n// // // // //         <Snackbar open={!isApiConnected} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n// // // // //           <Alert severity=\"warning\">\n// // // // //             Backend server is not connected. Some features may be unavailable.\n// // // // //           </Alert>\n// // // // //         </Snackbar>\n\n// // // // //         {/* Error Message */}\n// // // // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // // // //           <Alert onClose={handleClose} severity=\"error\">\n// // // // //             {error}\n// // // // //           </Alert>\n// // // // //         </Snackbar>\n\n// // // // //         <Routes>\n// // // // //           <Route\n// // // // //             exact\n// // // // //             path=\"/\"\n// // // // //             element={<Movie setError={setError} />}\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-movies\"\n// // // // //             element={\n// // // // //               <AddMovie setError={setError} />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-actor\"\n// // // // //             element={\n// // // // //               <AddActor setError={setError} />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-producer\"\n// // // // //             element={\n// // // // //               <AddProducer setError={setError} />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"movies/edit/:id\"\n// // // // //             element={\n// // // // //               <EditMovies setError={setError} />\n// // // // //             }\n// // // // //           />\n// // // // //         </Routes>\n// // // // //       </Paper>\n// // // // //     </ThemeProvider>\n// // // // //   );\n// // // // // }\n\n// // // // // export default App;\n// // // // // App.js\n// // // // import './App.css';\n// // // // import { ThemeProvider } from '@emotion/react';\n// // // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress } from '@mui/material';\n// // // // import { useState, useEffect } from 'react';\n// // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // // // import CancelIcon from '@mui/icons-material/Cancel';\n// // // // import AddMovie from './AddMovie';\n// // // // import Movie from './Movie';\n// // // // import AddActor from './AddActor';\n// // // // import AddProducer from './AddProducer';\n// // // // import EditMovies from './EditMovies';\n// // // // import axios from 'axios';\n\n// // // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // // function App() {\n// // // //   const [mode, setMode] = useState(\"dark\");\n// // // //   const navigate = useNavigate();\n// // // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // // //   const [isChecking, setIsChecking] = useState(true);\n// // // //   const [error, setError] = useState(null);\n\n// // // //   const theme = createTheme({\n// // // //     palette: {\n// // // //       mode: mode,\n// // // //     },\n// // // //   });\n\n// // // //   // Check API connectivity\n// // // //   const checkApiStatus = async () => {\n// // // //     setIsChecking(true);\n// // // //     try {\n// // // //       const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // // //       if (movieResponse.status === 200) {\n// // // //         setIsApiConnected(true);\n// // // //         setError(null);\n// // // //       }\n// // // //     } catch (err) {\n// // // //       setIsApiConnected(false);\n// // // //       setError(\"Unable to connect to the server. Please try again later.\");\n// // // //       console.error(\"API Connection Error:\", err);\n// // // //     } finally {\n// // // //       setIsChecking(false);\n// // // //     }\n// // // //   };\n\n// // // //   useEffect(() => {\n// // // //     checkApiStatus();\n// // // //     const intervalId = setInterval(checkApiStatus, 300000);\n// // // //     return () => clearInterval(intervalId);\n// // // //   }, []);\n\n// // // //   const handleClose = (event, reason) => {\n// // // //     if (reason === 'clickaway') {\n// // // //       return;\n// // // //     }\n// // // //     setError(null);\n// // // //   };\n\n// // // //   return (\n// // // //     <ThemeProvider theme={theme}>\n// // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // //           <Toolbar>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               <span className='logo'>IMDB</span>\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               All Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-movies\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-actor\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Actor\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-producer\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Producer\n// // // //             </Button>\n\n// // // //             {/* Connection Status Button */}\n// // // //             <Button\n// // // //               onClick={checkApiStatus}\n// // // //               style={{\n// // // //                 marginLeft: 'auto',\n// // // //                 marginRight: '10px',\n// // // //                 backgroundColor: isApiConnected ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// // // //                 color: isApiConnected ? '#2e7d32' : '#d32f2f'\n// // // //               }}\n// // // //               startIcon={\n// // // //                 isChecking ? (\n// // // //                   <CircularProgress size={20} color={isApiConnected ? \"success\" : \"error\"} />\n// // // //                 ) : isApiConnected ? (\n// // // //                   <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// // // //                 ) : (\n// // // //                   <CancelIcon style={{ color: '#d32f2f' }} />\n// // // //                 )\n// // // //               }\n// // // //             >\n// // // //               {isChecking ? 'Checking...' : isApiConnected ? 'Connected' : 'Disconnected'}\n// // // //             </Button>\n\n// // // //             <Button\n// // // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // //             </Button>\n// // // //           </Toolbar>\n// // // //         </AppBar>\n\n// // // //         {/* Error Message */}\n// // // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // // //           <Alert onClose={handleClose} severity=\"error\">\n// // // //             {error}\n// // // //           </Alert>\n// // // //         </Snackbar>\n\n// // // //         <Routes>\n// // // //           <Route\n// // // //             exact\n// // // //             path=\"/\"\n// // // //             element={<Movie setError={setError} />}\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-movies\"\n// // // //             element={\n// // // //               <AddMovie setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-actor\"\n// // // //             element={\n// // // //               <AddActor setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-producer\"\n// // // //             element={\n// // // //               <AddProducer setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"movies/edit/:id\"\n// // // //             element={\n// // // //               <EditMovies setError={setError} />\n// // // //             }\n// // // //           />\n// // // //         </Routes>\n// // // //       </Paper>\n// // // //     </ThemeProvider>\n// // // //   );\n// // // // }\n\n// // // // export default App;\n// // // // App.js\n// // // import './App.css';\n// // // import { ThemeProvider } from '@emotion/react';\n// // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// // // import { useState, useEffect } from 'react';\n// // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // // import CancelIcon from '@mui/icons-material/Cancel';\n// // // import StorageIcon from '@mui/icons-material/Storage';\n// // // import CloudIcon from '@mui/icons-material/Cloud';\n// // // import AddMovie from './AddMovie';\n// // // import Movie from './Movie';\n// // // import AddActor from './AddActor';\n// // // import AddProducer from './AddProducer';\n// // // import EditMovies from './EditMovies';\n// // // import axios from 'axios';\n\n// // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // function App() {\n// // //   const [mode, setMode] = useState(\"dark\");\n// // //   const navigate = useNavigate();\n// // //   const [healthStatus, setHealthStatus] = useState({\n// // //     api: { status: false, checking: true },\n// // //     database: { status: false, checking: true }\n// // //   });\n// // //   const [error, setError] = useState(null);\n\n// // //   const theme = createTheme({\n// // //     palette: {\n// // //       mode: mode,\n// // //     },\n// // //   });\n\n// // //   // Check API and Database health\n// // //   const checkHealthStatus = async () => {\n// // //     setHealthStatus(prev => ({\n// // //       api: { ...prev.api, checking: true },\n// // //       database: { ...prev.database, checking: true }\n// // //     }));\n\n// // //     try {\n// // //       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n// // //       setHealthStatus({\n// // //         api: { status: true, checking: false },\n// // //         database: { \n// // //           status: response.data.database.status === \"connected\", \n// // //           checking: false \n// // //         }\n// // //       });\n// // //       setError(null);\n// // //     } catch (err) {\n// // //       setHealthStatus({\n// // //         api: { status: false, checking: false },\n// // //         database: { status: false, checking: false }\n// // //       });\n// // //       setError(\"System health check failed. Please try again later.\");\n// // //       console.error(\"Health Check Error:\", err);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     checkHealthStatus();\n// // //     const intervalId = setInterval(checkHealthStatus, 300000); // Check every 5 minutes\n// // //     return () => clearInterval(intervalId);\n// // //   }, []);\n\n// // //   const handleClose = (event, reason) => {\n// // //     if (reason === 'clickaway') return;\n// // //     setError(null);\n// // //   };\n\n// // //   // Health Status Indicator Component\n// // //   const HealthIndicator = ({ type, status, checking }) => {\n// // //     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n// // //     const label = type === 'api' ? 'API' : 'Database';\n    \n// // //     return (\n// // //       <Tooltip title={`${label} Status`}>\n// // //         <Button\n// // //           onClick={checkHealthStatus}\n// // //           style={{\n// // //             marginLeft: '10px',\n// // //             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// // //             color: status ? '#2e7d32' : '#d32f2f',\n// // //             minWidth: '120px',\n// // //           }}\n// // //           startIcon={\n// // //             checking ? (\n// // //               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n// // //             ) : status ? (\n// // //               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// // //             ) : (\n// // //               <CancelIcon style={{ color: '#d32f2f' }} />\n// // //             )\n// // //           }\n// // //         >\n// // //           {checking ? 'Checking...' : `${label} ${status ? 'Healthy' : 'Down'}`}\n// // //         </Button>\n// // //       </Tooltip>\n// // //     );\n// // //   };\n\n// // //   return (\n// // //     <ThemeProvider theme={theme}>\n// // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // //           <Toolbar>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               <span className='logo'>IMDB</span>\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               All Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-movies\")}\n// // //               color=\"inherit\"\n// // //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// // //             >\n// // //               Add Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-actor\")}\n// // //               color=\"inherit\"\n// // //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// // //             >\n// // //               Add Actor\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-producer\")}\n// // //               color=\"inherit\"\n// // //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// // //             >\n// // //               Add Producer\n// // //             </Button>\n\n// // //             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n// // //               <HealthIndicator \n// // //                 type=\"api\" \n// // //                 status={healthStatus.api.status} \n// // //                 checking={healthStatus.api.checking} \n// // //               />\n// // //               <HealthIndicator \n// // //                 type=\"database\" \n// // //                 status={healthStatus.database.status} \n// // //                 checking={healthStatus.database.checking} \n// // //               />\n              \n// // //               <Button\n// // //                 sx={{ ml: 2 }}\n// // //                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // //                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // //                 color=\"inherit\"\n// // //               >\n// // //                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // //               </Button>\n// // //             </Box>\n// // //           </Toolbar>\n// // //         </AppBar>\n\n// // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // //           <Alert onClose={handleClose} severity=\"error\">\n// // //             {error}\n// // //           </Alert>\n// // //         </Snackbar>\n\n// // //         <Routes>\n// // //           <Route\n// // //             exact\n// // //             path=\"/\"\n// // //             element={<Movie setError={setError} />}\n// // //           />\n// // //           <Route\n// // //             path=\"/add-movies\"\n// // //             element={\n// // //               <AddMovie setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-actor\"\n// // //             element={\n// // //               <AddActor setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-producer\"\n// // //             element={\n// // //               <AddProducer setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"movies/edit/:id\"\n// // //             element={\n// // //               <EditMovies setError={setError} />\n// // //             }\n// // //           />\n// // //         </Routes>\n// // //       </Paper>\n// // //     </ThemeProvider>\n// // //   );\n// // // }\n\n// // // export default App;\n// // // App.js\n// // import './App.css';\n// // import { ThemeProvider } from '@emotion/react';\n// // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// // import { useState, useEffect } from 'react';\n// // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // import CancelIcon from '@mui/icons-material/Cancel';\n// // import StorageIcon from '@mui/icons-material/Storage';\n// // import CloudIcon from '@mui/icons-material/Cloud';\n// // import AddMovie from './AddMovie';\n// // import Movie from './Movie';\n// // import AddActor from './AddActor';\n// // import AddProducer from './AddProducer';\n// // import EditMovies from './EditMovies';\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // function App() {\n// //   const [mode, setMode] = useState(\"dark\");\n// //   const navigate = useNavigate();\n// //   const [healthStatus, setHealthStatus] = useState({\n// //     api: { status: false, checking: true },\n// //     database: { status: false, checking: true }\n// //   });\n// //   const [error, setError] = useState(null);\n\n// //   const theme = createTheme({\n// //     palette: {\n// //       mode: mode,\n// //     },\n// //   });\n\n// //   // Check API and Database health\n// //   const checkHealthStatus = async () => {\n// //     setHealthStatus(prev => ({\n// //       api: { ...prev.api, checking: true },\n// //       database: { ...prev.database, checking: true }\n// //     }));\n\n// //     try {\n// //       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n      \n// //       // Check if we got a response at all\n// //       const apiStatus = response && response.status >= 200 && response.status < 500;\n      \n// //       // Safely check database status from response\n// //       const dbStatus = response?.data?.database?.status === \"connected\";\n      \n// //       setHealthStatus({\n// //         api: { status: apiStatus, checking: false },\n// //         database: { status: dbStatus, checking: false }\n// //       });\n      \n// //       setError(null);\n// //     } catch (err) {\n// //       console.error(\"Health Check Error:\", err);\n      \n// //       setHealthStatus({\n// //         api: { status: false, checking: false },\n// //         database: { status: false, checking: false }\n// //       });\n      \n// //       setError(\"Unable to connect to the server. Please try again later.\");\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     checkHealthStatus();\n// //     const intervalId = setInterval(checkHealthStatus, 30000); // Check every 30 seconds\n// //     return () => clearInterval(intervalId);\n// //   }, []);\n\n// //   const handleClose = (event, reason) => {\n// //     if (reason === 'clickaway') return;\n// //     setError(null);\n// //   };\n\n// //   // Health Status Indicator Component\n// //   const HealthIndicator = ({ type, status, checking }) => {\n// //     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n// //     const label = type === 'api' ? 'API' : 'Database';\n    \n// //     return (\n// //       <Tooltip title={`${label} Status - Click to refresh`}>\n// //         <Button\n// //           onClick={checkHealthStatus}\n// //           style={{\n// //             marginLeft: '10px',\n// //             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// //             color: status ? '#2e7d32' : '#d32f2f',\n// //             minWidth: '120px',\n// //           }}\n// //           startIcon={\n// //             checking ? (\n// //               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n// //             ) : status ? (\n// //               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// //             ) : (\n// //               <CancelIcon style={{ color: '#d32f2f' }} />\n// //             )\n// //           }\n// //         >\n// //           {checking ? 'Checking...' : `${label} ${status ? 'Online' : 'Offline'}`}\n// //         </Button>\n// //       </Tooltip>\n// //     );\n// //   };\n\n// //   return (\n// //     <ThemeProvider theme={theme}>\n// //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// //         <AppBar className=\"nav-bar\" position=\"static\">\n// //           <Toolbar>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               <span className='logo'>IMDB</span>\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               All Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-movies\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-actor\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Actor\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-producer\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Producer\n// //             </Button>\n\n// //             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n// //               <HealthIndicator \n// //                 type=\"api\" \n// //                 status={healthStatus.api.status} \n// //                 checking={healthStatus.api.checking} \n// //               />\n// //               <HealthIndicator \n// //                 type=\"database\" \n// //                 status={healthStatus.database.status} \n// //                 checking={healthStatus.database.checking} \n// //               />\n              \n// //               <Button\n// //                 sx={{ ml: 2 }}\n// //                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// //                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// //                 color=\"inherit\"\n// //               >\n// //                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n// //               </Button>\n// //             </Box>\n// //           </Toolbar>\n// //         </AppBar>\n\n// //         <Snackbar \n// //           open={!!error} \n// //           autoHideDuration={6000} \n// //           onClose={handleClose}\n// //           anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n// //         >\n// //           <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n// //             {error}\n// //           </Alert>\n// //         </Snackbar>\n\n// //         <Routes>\n// //           <Route\n// //             exact\n// //             path=\"/\"\n// //             element={<Movie setError={setError} />}\n// //           />\n// //           <Route\n// //             path=\"/add-movies\"\n// //             element={\n// //               <AddMovie setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-actor\"\n// //             element={\n// //               <AddActor setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-producer\"\n// //             element={\n// //               <AddProducer setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"movies/edit/:id\"\n// //             element={\n// //               <EditMovies setError={setError} />\n// //             }\n// //           />\n// //         </Routes>\n// //       </Paper>\n// //     </ThemeProvider>\n// //   );\n// // }\n\n// // export default App;\n// // App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Box } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n// import axios from 'axios';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [apiStatus, setApiStatus] = useState(false);\n//   const [dbStatus, setDbStatus] = useState(false);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   // Check API and Database health\n//   const checkHealth = async () => {\n//     try {\n//       const response = await axios.get(`${API_BASE_URL}/health`);\n//       setApiStatus(true);\n//       setDbStatus(response.data.database === \"connected\");\n//     } catch (err) {\n//       setApiStatus(false);\n//       setDbStatus(false);\n//       console.error(\"Health check failed:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkHealth();\n//     const interval = setInterval(checkHealth, 30000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   // Status indicator component\n//   const StatusIndicator = ({ isOnline, label }) => (\n//     <Box \n//       sx={{ \n//         display: 'flex', \n//         alignItems: 'center', \n//         bgcolor: isOnline ? 'rgba(46, 125, 50, 0.1)' : 'rgba(211, 47, 47, 0.1)',\n//         color: isOnline ? '#2e7d32' : '#d32f2f',\n//         py: 0.5,\n//         px: 2,\n//         borderRadius: 1,\n//         mr: 1\n//       }}\n//     >\n//       {isOnline ? (\n//         <CheckCircleIcon sx={{ fontSize: 20, mr: 1 }} />\n//       ) : (\n//         <CancelIcon sx={{ fontSize: 20, mr: 1 }} />\n//       )}\n//       {`${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`}\n//     </Box>\n//   );\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               ALL MOVIES\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//             >\n//               ADD MOVIES\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//             >\n//               ADD ACTOR\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//             >\n//               ADD PRODUCER\n//             </Button>\n\n//             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n//               <StatusIndicator isOnline={apiStatus} label=\"API\" />\n//               <StatusIndicator isOnline={dbStatus} label=\"DATABASE\" />\n              \n//               <Button\n//                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//                 color=\"inherit\"\n//                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//               >\n//                 {mode === \"light\" ? \"DARK\" : \"LIGHT\"} MODE\n//               </Button>\n//             </Box>\n//           </Toolbar>\n//         </AppBar>\n\n//         <Routes>\n//           <Route exact path=\"/\" element={<Movie />} />\n//           <Route path=\"/add-movies\" element={<AddMovie />} />\n//           <Route path=\"/add-actor\" element={<AddActor />} />\n//           <Route path=\"/add-producer\" element={<AddProducer />} />\n//           <Route path=\"movies/edit/:id\" element={<EditMovies />} />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\nimport './App.css';\nimport { ThemeProvider } from '@emotion/react';\nimport { AppBar, Button, Paper, Toolbar, createTheme, Box } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport AddMovie from './AddMovie';\nimport Movie from './Movie';\nimport AddActor from './AddActor';\nimport AddProducer from './AddProducer';\nimport EditMovies from './EditMovies';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nfunction App() {\n  const [mode, setMode] = useState(\"dark\");\n  const navigate = useNavigate();\n  const [statuses, setStatuses] = useState({\n    backend: false,\n    database: false,\n    actorApi: false,\n    movieApi: false,\n    producerApi: false\n  });\n\n  const theme = createTheme({\n    palette: {\n      mode: mode,\n    },\n  });\n\n  const checkApiStatus = async (endpoint) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`);\n      return response.ok;\n    } catch (error) {\n      console.error(`Error checking ${endpoint}:`, error);\n      return false;\n    }\n  };\n\n  const checkAllStatuses = async () => {\n    try {\n      // Check backend health and database status\n      const healthResponse = await fetch(`${API_BASE_URL}/health`);\n      const healthData = await healthResponse.json();\n\n      // Check individual API endpoints\n      const [actorStatus, movieStatus, producerStatus] = await Promise.all([\n        checkApiStatus('/api-status/actor'),\n        checkApiStatus('/api-status/movie'),\n        checkApiStatus('/api-status/producer')\n      ]);\n\n      setStatuses({\n        backend: healthResponse.ok,\n        database: healthData.database === \"connected\",\n        actorApi: actorStatus,\n        movieApi: movieStatus,\n        producerApi: producerStatus\n      });\n    } catch (error) {\n      console.error(\"Status check failed:\", error);\n      setStatuses({\n        backend: false,\n        database: false,\n        actorApi: false,\n        movieApi: false,\n        producerApi: false\n      });\n    }\n  };\n\n  useEffect(() => {\n    checkAllStatuses();\n    const interval = setInterval(checkAllStatuses, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const StatusIndicator = ({ isOnline, label }) => (\n    <Box \n      sx={{ \n        display: 'flex', \n        alignItems: 'center', \n        bgcolor: isOnline ? 'rgba(46, 125, 50, 0.1)' : 'rgba(211, 47, 47, 0.1)',\n        color: isOnline ? '#2e7d32' : '#d32f2f',\n        py: 0.5,\n        px: 2,\n        borderRadius: 1,\n        mr: 1\n      }}\n    >\n      {isOnline ? (\n        <CheckCircleIcon sx={{ fontSize: 20, mr: 1 }} />\n      ) : (\n        <CancelIcon sx={{ fontSize: 20, mr: 1 }} />\n      )}\n      {`${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`}\n    </Box>\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n        <AppBar className=\"nav-bar\" position=\"static\">\n          <Toolbar>\n            <Button\n              onClick={() => navigate(\"/\")}\n              color=\"inherit\"\n            >\n              <span className='logo'>IMDB</span>\n            </Button>\n            <Button\n              onClick={() => navigate(\"/\")}\n              color=\"inherit\"\n            >\n              ALL MOVIES\n            </Button>\n            <Button\n              onClick={() => navigate(\"/add-movies\")}\n              color=\"inherit\"\n            >\n              ADD MOVIES\n            </Button>\n            <Button\n              onClick={() => navigate(\"/add-actor\")}\n              color=\"inherit\"\n            >\n              ADD ACTOR\n            </Button>\n            <Button\n              onClick={() => navigate(\"/add-producer\")}\n              color=\"inherit\"\n            >\n              ADD PRODUCER\n            </Button>\n\n            <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n                <StatusIndicator isOnline={statuses.backend} label=\"BACKEND\" />\n                <StatusIndicator isOnline={statuses.database} label=\"DB\" />\n                <StatusIndicator isOnline={statuses.actorApi} label=\"ACTOR\" />\n                <StatusIndicator isOnline={statuses.movieApi} label=\"MOVIE\" />\n                <StatusIndicator isOnline={statuses.producerApi} label=\"PRODUCER\" />\n                <Button\n                  onClick={checkAllStatuses}\n                  color=\"inherit\"\n                  size=\"small\"\n                  startIcon={<RefreshIcon />}\n                >\n                  Refresh\n                </Button>\n              </Box>\n              \n              <Button\n                onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n                color=\"inherit\"\n                startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n              >\n                {mode === \"light\" ? \"DARK\" : \"LIGHT\"} MODE\n              </Button>\n            </Box>\n          </Toolbar>\n        </AppBar>\n\n        <Routes>\n          <Route exact path=\"/\" element={<Movie />} />\n          <Route path=\"/add-movies\" element={<AddMovie />} />\n          <Route path=\"/add-actor\" element={<AddActor />} />\n          <Route path=\"/add-producer\" element={<AddProducer />} />\n          <Route path=\"movies/edit/:id\" element={<EditMovies />} />\n        </Routes>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}