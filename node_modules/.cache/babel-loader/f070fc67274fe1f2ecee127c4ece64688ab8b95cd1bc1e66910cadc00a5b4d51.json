{"ast":null,"code":"var _jsxFileName = \"/Users/jayachandran/new-imdb/imdb-clone-client/src/App.js\",\n  _s = $RefreshSig$();\n// // // // // // // //App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Box } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import RefreshIcon from '@mui/icons-material/Refresh';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [statuses, setStatuses] = useState({\n//     backend: false,\n//     database: false,\n//     actorApi: false,\n//     movieApi: false,\n//     producerApi: false\n//   });\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   const checkApiStatus = async (endpoint) => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}${endpoint}`);\n//       return response.ok;\n//     } catch (error) {\n//       console.error(`Error checking ${endpoint}:`, error);\n//       return false;\n//     }\n//   };\n\n//   const checkAllStatuses = async () => {\n//     try {\n//       // Check backend health and database status\n//       const healthResponse = await fetch(`${API_BASE_URL}/health`);\n//       const healthData = await healthResponse.json();\n\n//       // Check individual API endpoints\n//       const [actorStatus, movieStatus, producerStatus] = await Promise.all([\n//         checkApiStatus('/api-status/actor'),\n//         checkApiStatus('/api-status/movie'),\n//         checkApiStatus('/api-status/producer')\n//       ]);\n\n//       setStatuses({\n//         backend: healthResponse.ok,\n//         database: healthData.database === \"connected\",\n//         actorApi: actorStatus,\n//         movieApi: movieStatus,\n//         producerApi: producerStatus\n//       });\n//     } catch (error) {\n//       console.error(\"Status check failed:\", error);\n//       setStatuses({\n//         backend: false,\n//         database: false,\n//         actorApi: false,\n//         movieApi: false,\n//         producerApi: false\n//       });\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkAllStatuses();\n//     const interval = setInterval(checkAllStatuses, 30000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const StatusIndicator = ({ isOnline, label }) => (\n//     <Box \n//       sx={{ \n//         display: 'flex', \n//         alignItems: 'center', \n//         bgcolor: isOnline ? 'rgba(46, 125, 50, 0.1)' : 'rgba(211, 47, 47, 0.1)',\n//         color: isOnline ? '#2e7d32' : '#d32f2f',\n//         py: 0.5,\n//         px: 2,\n//         borderRadius: 1,\n//         mr: 1\n//       }}\n//     >\n//       {isOnline ? (\n//         <CheckCircleIcon sx={{ fontSize: 20, mr: 1 }} />\n//       ) : (\n//         <CancelIcon sx={{ fontSize: 20, mr: 1 }} />\n//       )}\n//       {`${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`}\n//     </Box>\n//   );\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               ALL MOVIES\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//             >\n//               ADD MOVIES\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//             >\n//               ADD ACTOR\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//             >\n//               ADD PRODUCER\n//             </Button>\n\n//             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\n//               <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n//                 <StatusIndicator isOnline={statuses.backend} label=\"BACKEND\" />\n//                 <StatusIndicator isOnline={statuses.database} label=\"DB\" />\n//                 <StatusIndicator isOnline={statuses.actorApi} label=\"ACTOR\" />\n//                 <StatusIndicator isOnline={statuses.movieApi} label=\"MOVIE\" />\n//                 <StatusIndicator isOnline={statuses.producerApi} label=\"PRODUCER\" />\n//                 <Button\n//                   onClick={checkAllStatuses}\n//                   color=\"inherit\"\n//                   size=\"small\"\n//                   startIcon={<RefreshIcon />}\n//                 >\n//                   Refresh\n//                 </Button>\n//               </Box>\n\n//               <Button\n//                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//                 color=\"inherit\"\n//                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//               >\n//                 {mode === \"light\" ? \"DARK\" : \"LIGHT\"} MODE\n//               </Button>\n//             </Box>\n//           </Toolbar>\n//         </AppBar>\n\n//         <Routes>\n//           <Route exact path=\"/\" element={<Movie />} />\n//           <Route path=\"/add-movies\" element={<AddMovie />} />\n//           <Route path=\"/add-actor\" element={<AddActor />} />\n//           <Route path=\"/add-producer\" element={<AddProducer />} />\n//           <Route path=\"movies/edit/:id\" element={<EditMovies />} />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n// App.js\nimport { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider } from '@emotion/react';\nimport { AppBar, Button, Paper, Toolbar, createTheme, Box, CircularProgress } from '@mui/material';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { Brightness7 as Brightness7Icon, Brightness4 as Brightness4Icon, CheckCircle as CheckCircleIcon, Cancel as CancelIcon, Refresh as RefreshIcon } from '@mui/icons-material';\nimport { apiService } from './services/api.service';\nimport AddMovie from './AddMovie';\nimport Movie from './Movie';\nimport AddActor from './AddActor';\nimport AddProducer from './AddProducer';\nimport EditMovies from './EditMovies';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(() => localStorage.getItem('theme') || 'dark');\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [statuses, setStatuses] = useState({\n    backend: false,\n    database: false,\n    actorApi: false,\n    movieApi: false,\n    producerApi: false\n  });\n  const theme = createTheme({\n    palette: {\n      mode: mode,\n      primary: {\n        main: mode === 'dark' ? '#90caf9' : '#1976d2'\n      },\n      background: {\n        default: mode === 'dark' ? '#121212' : '#ffffff',\n        paper: mode === 'dark' ? '#1e1e1e' : '#ffffff'\n      }\n    }\n  });\n  const checkAllStatuses = useCallback(async () => {\n    try {\n      setLoading(true);\n      const healthData = await apiService.checkHealth();\n      const [actorStatus, movieStatus, producerStatus] = await Promise.all([apiService.checkApiStatus(apiService.endpoints.API_STATUS.ACTOR), apiService.checkApiStatus(apiService.endpoints.API_STATUS.MOVIE), apiService.checkApiStatus(apiService.endpoints.API_STATUS.PRODUCER)]);\n      setStatuses({\n        backend: true,\n        database: healthData.database === \"connected\",\n        actorApi: actorStatus.status === \"success\",\n        movieApi: movieStatus.status === \"success\",\n        producerApi: producerStatus.status === \"success\"\n      });\n    } catch (error) {\n      console.error(\"Status check failed:\", error);\n      setStatuses({\n        backend: false,\n        database: false,\n        actorApi: false,\n        movieApi: false,\n        producerApi: false\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    checkAllStatuses();\n    const interval = setInterval(checkAllStatuses, 30000);\n    return () => clearInterval(interval);\n  }, [checkAllStatuses]);\n  useEffect(() => {\n    localStorage.setItem('theme', mode);\n  }, [mode]);\n  const StatusIndicator = ({\n    isOnline,\n    label\n  }) => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      bgcolor: isOnline ? 'success.main' : 'error.main',\n      opacity: 0.8,\n      py: 0.5,\n      px: 2,\n      borderRadius: 1,\n      mr: 1\n    },\n    children: [isOnline ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n      sx: {\n        fontSize: 20,\n        mr: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n      sx: {\n        fontSize: 20,\n        mr: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this), `${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n  const NavButton = ({\n    to,\n    children\n  }) => /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => navigate(to),\n    color: \"inherit\",\n    sx: {\n      mx: 1,\n      '&:hover': {\n        backgroundColor: 'rgba(255, 255, 255, 0.1)'\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        minHeight: '100vh',\n        borderRadius: 0,\n        transition: 'background-color 0.3s ease'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(NavButton, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo\",\n              children: \"IMDB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(NavButton, {\n              to: \"/\",\n              children: \"ALL MOVIES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n              to: \"/add-movies\",\n              children: \"ADD MOVIES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n              to: \"/add-actor\",\n              children: \"ADD ACTOR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n              to: \"/add-producer\",\n              children: \"ADD PRODUCER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2\n            },\n            children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.backend,\n                label: \"BACKEND\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.database,\n                label: \"DB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.actorApi,\n                label: \"ACTOR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.movieApi,\n                label: \"MOVIE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.producerApi,\n                label: \"PRODUCER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: checkAllStatuses,\n              color: \"inherit\",\n              disabled: loading,\n              startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 28\n              }, this),\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setMode(mode === \"light\" ? \"dark\" : \"light\"),\n              color: \"inherit\",\n              startIcon: mode === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 68\n              }, this),\n              children: mode === \"light\" ? \"DARK\" : \"LIGHT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-movies\",\n            element: /*#__PURE__*/_jsxDEV(AddMovie, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-actor\",\n            element: /*#__PURE__*/_jsxDEV(AddActor, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-producer\",\n            element: /*#__PURE__*/_jsxDEV(AddProducer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"movies/edit/:id\",\n            element: /*#__PURE__*/_jsxDEV(EditMovies, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KmgsBJx27AZdxFoIVjhiR85gvg8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","ThemeProvider","AppBar","Button","Paper","Toolbar","createTheme","Box","CircularProgress","Route","Routes","useNavigate","Brightness7","Brightness7Icon","Brightness4","Brightness4Icon","CheckCircle","CheckCircleIcon","Cancel","CancelIcon","Refresh","RefreshIcon","apiService","AddMovie","Movie","AddActor","AddProducer","EditMovies","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","localStorage","getItem","navigate","loading","setLoading","statuses","setStatuses","backend","database","actorApi","movieApi","producerApi","theme","palette","primary","main","background","default","paper","checkAllStatuses","healthData","checkHealth","actorStatus","movieStatus","producerStatus","Promise","all","checkApiStatus","endpoints","API_STATUS","ACTOR","MOVIE","PRODUCER","status","error","console","interval","setInterval","clearInterval","setItem","StatusIndicator","isOnline","label","sx","display","alignItems","bgcolor","opacity","py","px","borderRadius","mr","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","NavButton","to","onClick","color","mx","backgroundColor","elevation","minHeight","transition","position","className","flexGrow","gap","size","disabled","startIcon","p","path","element","_c","$RefreshReg$"],"sources":["/Users/jayachandran/new-imdb/imdb-clone-client/src/App.js"],"sourcesContent":["// // // // // // // //App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Box } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import RefreshIcon from '@mui/icons-material/Refresh';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [statuses, setStatuses] = useState({\n//     backend: false,\n//     database: false,\n//     actorApi: false,\n//     movieApi: false,\n//     producerApi: false\n//   });\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   const checkApiStatus = async (endpoint) => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}${endpoint}`);\n//       return response.ok;\n//     } catch (error) {\n//       console.error(`Error checking ${endpoint}:`, error);\n//       return false;\n//     }\n//   };\n\n//   const checkAllStatuses = async () => {\n//     try {\n//       // Check backend health and database status\n//       const healthResponse = await fetch(`${API_BASE_URL}/health`);\n//       const healthData = await healthResponse.json();\n\n//       // Check individual API endpoints\n//       const [actorStatus, movieStatus, producerStatus] = await Promise.all([\n//         checkApiStatus('/api-status/actor'),\n//         checkApiStatus('/api-status/movie'),\n//         checkApiStatus('/api-status/producer')\n//       ]);\n\n//       setStatuses({\n//         backend: healthResponse.ok,\n//         database: healthData.database === \"connected\",\n//         actorApi: actorStatus,\n//         movieApi: movieStatus,\n//         producerApi: producerStatus\n//       });\n//     } catch (error) {\n//       console.error(\"Status check failed:\", error);\n//       setStatuses({\n//         backend: false,\n//         database: false,\n//         actorApi: false,\n//         movieApi: false,\n//         producerApi: false\n//       });\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkAllStatuses();\n//     const interval = setInterval(checkAllStatuses, 30000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   const StatusIndicator = ({ isOnline, label }) => (\n//     <Box \n//       sx={{ \n//         display: 'flex', \n//         alignItems: 'center', \n//         bgcolor: isOnline ? 'rgba(46, 125, 50, 0.1)' : 'rgba(211, 47, 47, 0.1)',\n//         color: isOnline ? '#2e7d32' : '#d32f2f',\n//         py: 0.5,\n//         px: 2,\n//         borderRadius: 1,\n//         mr: 1\n//       }}\n//     >\n//       {isOnline ? (\n//         <CheckCircleIcon sx={{ fontSize: 20, mr: 1 }} />\n//       ) : (\n//         <CancelIcon sx={{ fontSize: 20, mr: 1 }} />\n//       )}\n//       {`${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`}\n//     </Box>\n//   );\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               ALL MOVIES\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//             >\n//               ADD MOVIES\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//             >\n//               ADD ACTOR\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//             >\n//               ADD PRODUCER\n//             </Button>\n\n//             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\n//               <Box sx={{ display: 'flex', alignItems: 'center', mr: 2 }}>\n//                 <StatusIndicator isOnline={statuses.backend} label=\"BACKEND\" />\n//                 <StatusIndicator isOnline={statuses.database} label=\"DB\" />\n//                 <StatusIndicator isOnline={statuses.actorApi} label=\"ACTOR\" />\n//                 <StatusIndicator isOnline={statuses.movieApi} label=\"MOVIE\" />\n//                 <StatusIndicator isOnline={statuses.producerApi} label=\"PRODUCER\" />\n//                 <Button\n//                   onClick={checkAllStatuses}\n//                   color=\"inherit\"\n//                   size=\"small\"\n//                   startIcon={<RefreshIcon />}\n//                 >\n//                   Refresh\n//                 </Button>\n//               </Box>\n              \n//               <Button\n//                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//                 color=\"inherit\"\n//                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//               >\n//                 {mode === \"light\" ? \"DARK\" : \"LIGHT\"} MODE\n//               </Button>\n//             </Box>\n//           </Toolbar>\n//         </AppBar>\n\n//         <Routes>\n//           <Route exact path=\"/\" element={<Movie />} />\n//           <Route path=\"/add-movies\" element={<AddMovie />} />\n//           <Route path=\"/add-actor\" element={<AddActor />} />\n//           <Route path=\"/add-producer\" element={<AddProducer />} />\n//           <Route path=\"movies/edit/:id\" element={<EditMovies />} />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n// App.js\nimport { useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider } from '@emotion/react';\nimport { \n  AppBar, \n  Button, \n  Paper, \n  Toolbar, \n  createTheme, \n  Box,\n  CircularProgress \n} from '@mui/material';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { \n  Brightness7 as Brightness7Icon,\n  Brightness4 as Brightness4Icon,\n  CheckCircle as CheckCircleIcon,\n  Cancel as CancelIcon,\n  Refresh as RefreshIcon\n} from '@mui/icons-material';\nimport { apiService } from './services/api.service';\nimport AddMovie from './AddMovie';\nimport Movie from './Movie';\nimport AddActor from './AddActor';\nimport AddProducer from './AddProducer';\nimport EditMovies from './EditMovies';\nimport './App.css';\n\nfunction App() {\n  const [mode, setMode] = useState(() => \n    localStorage.getItem('theme') || 'dark'\n  );\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [statuses, setStatuses] = useState({\n    backend: false,\n    database: false,\n    actorApi: false,\n    movieApi: false,\n    producerApi: false\n  });\n\n  const theme = createTheme({\n    palette: {\n      mode: mode,\n      primary: {\n        main: mode === 'dark' ? '#90caf9' : '#1976d2',\n      },\n      background: {\n        default: mode === 'dark' ? '#121212' : '#ffffff',\n        paper: mode === 'dark' ? '#1e1e1e' : '#ffffff',\n      },\n    },\n  });\n\n  const checkAllStatuses = useCallback(async () => {\n    try {\n      setLoading(true);\n      const healthData = await apiService.checkHealth();\n      \n      const [actorStatus, movieStatus, producerStatus] = await Promise.all([\n        apiService.checkApiStatus(apiService.endpoints.API_STATUS.ACTOR),\n        apiService.checkApiStatus(apiService.endpoints.API_STATUS.MOVIE),\n        apiService.checkApiStatus(apiService.endpoints.API_STATUS.PRODUCER)\n      ]);\n\n      setStatuses({\n        backend: true,\n        database: healthData.database === \"connected\",\n        actorApi: actorStatus.status === \"success\",\n        movieApi: movieStatus.status === \"success\",\n        producerApi: producerStatus.status === \"success\"\n      });\n    } catch (error) {\n      console.error(\"Status check failed:\", error);\n      setStatuses({\n        backend: false,\n        database: false,\n        actorApi: false,\n        movieApi: false,\n        producerApi: false\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    checkAllStatuses();\n    const interval = setInterval(checkAllStatuses, 30000);\n    return () => clearInterval(interval);\n  }, [checkAllStatuses]);\n\n  useEffect(() => {\n    localStorage.setItem('theme', mode);\n  }, [mode]);\n\n  const StatusIndicator = ({ isOnline, label }) => (\n    <Box \n      sx={{ \n        display: 'flex', \n        alignItems: 'center', \n        bgcolor: isOnline ? 'success.main' : 'error.main',\n        opacity: 0.8,\n        py: 0.5,\n        px: 2,\n        borderRadius: 1,\n        mr: 1\n      }}\n    >\n      {isOnline ? (\n        <CheckCircleIcon sx={{ fontSize: 20, mr: 1 }} />\n      ) : (\n        <CancelIcon sx={{ fontSize: 20, mr: 1 }} />\n      )}\n      {`${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`}\n    </Box>\n  );\n\n  const NavButton = ({ to, children }) => (\n    <Button\n      onClick={() => navigate(to)}\n      color=\"inherit\"\n      sx={{ \n        mx: 1,\n        '&:hover': {\n          backgroundColor: 'rgba(255, 255, 255, 0.1)'\n        }\n      }}\n    >\n      {children}\n    </Button>\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper \n        elevation={0} \n        sx={{ \n          minHeight: '100vh',\n          borderRadius: 0,\n          transition: 'background-color 0.3s ease'\n        }}\n      >\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <NavButton to=\"/\">\n              <span className='logo'>IMDB</span>\n            </NavButton>\n            \n            <Box sx={{ flexGrow: 1, display: 'flex' }}>\n              <NavButton to=\"/\">ALL MOVIES</NavButton>\n              <NavButton to=\"/add-movies\">ADD MOVIES</NavButton>\n              <NavButton to=\"/add-actor\">ADD ACTOR</NavButton>\n              <NavButton to=\"/add-producer\">ADD PRODUCER</NavButton>\n            </Box>\n\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              {loading ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : (\n                <>\n                  <StatusIndicator isOnline={statuses.backend} label=\"BACKEND\" />\n                  <StatusIndicator isOnline={statuses.database} label=\"DB\" />\n                  <StatusIndicator isOnline={statuses.actorApi} label=\"ACTOR\" />\n                  <StatusIndicator isOnline={statuses.movieApi} label=\"MOVIE\" />\n                  <StatusIndicator isOnline={statuses.producerApi} label=\"PRODUCER\" />\n                </>\n              )}\n              \n              <Button\n                onClick={checkAllStatuses}\n                color=\"inherit\"\n                disabled={loading}\n                startIcon={<RefreshIcon />}\n              >\n                Refresh\n              </Button>\n\n              <Button\n                onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n                color=\"inherit\"\n                startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n              >\n                {mode === \"light\" ? \"DARK\" : \"LIGHT\"}\n              </Button>\n            </Box>\n          </Toolbar>\n        </AppBar>\n\n        <Box sx={{ p: 3 }}>\n          <Routes>\n            <Route path=\"/\" element={<Movie />} />\n            <Route path=\"/add-movies\" element={<AddMovie />} />\n            <Route path=\"/add-actor\" element={<AddActor />} />\n            <Route path=\"/add-producer\" element={<AddProducer />} />\n            <Route path=\"movies/edit/:id\" element={<EditMovies />} />\n          </Routes>\n        </Box>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SACEC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,WAAW,EACXC,GAAG,EACHC,gBAAgB,QACX,eAAe;AACtB,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,SACEC,WAAW,IAAIC,eAAe,EAC9BC,WAAW,IAAIC,eAAe,EAC9BC,WAAW,IAAIC,eAAe,EAC9BC,MAAM,IAAIC,UAAU,EACpBC,OAAO,IAAIC,WAAW,QACjB,qBAAqB;AAC5B,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrC,QAAQ,CAAC,MAC/BsC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,MACnC,CAAC;EACD,MAAMC,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC;IACvC6C,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAG1C,WAAW,CAAC;IACxB2C,OAAO,EAAE;MACPf,IAAI,EAAEA,IAAI;MACVgB,OAAO,EAAE;QACPC,IAAI,EAAEjB,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG;MACtC,CAAC;MACDkB,UAAU,EAAE;QACVC,OAAO,EAAEnB,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;QAChDoB,KAAK,EAAEpB,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG;MACvC;IACF;EACF,CAAC,CAAC;EAEF,MAAMqB,gBAAgB,GAAGvD,WAAW,CAAC,YAAY;IAC/C,IAAI;MACFwC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMgB,UAAU,GAAG,MAAMlC,UAAU,CAACmC,WAAW,CAAC,CAAC;MAEjD,MAAM,CAACC,WAAW,EAAEC,WAAW,EAAEC,cAAc,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACnExC,UAAU,CAACyC,cAAc,CAACzC,UAAU,CAAC0C,SAAS,CAACC,UAAU,CAACC,KAAK,CAAC,EAChE5C,UAAU,CAACyC,cAAc,CAACzC,UAAU,CAAC0C,SAAS,CAACC,UAAU,CAACE,KAAK,CAAC,EAChE7C,UAAU,CAACyC,cAAc,CAACzC,UAAU,CAAC0C,SAAS,CAACC,UAAU,CAACG,QAAQ,CAAC,CACpE,CAAC;MAEF1B,WAAW,CAAC;QACVC,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAEY,UAAU,CAACZ,QAAQ,KAAK,WAAW;QAC7CC,QAAQ,EAAEa,WAAW,CAACW,MAAM,KAAK,SAAS;QAC1CvB,QAAQ,EAAEa,WAAW,CAACU,MAAM,KAAK,SAAS;QAC1CtB,WAAW,EAAEa,cAAc,CAACS,MAAM,KAAK;MACzC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C5B,WAAW,CAAC;QACVC,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE,KAAK;QACfC,WAAW,EAAE;MACf,CAAC,CAAC;IACJ,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAENzC,SAAS,CAAC,MAAM;IACdwD,gBAAgB,CAAC,CAAC;IAClB,MAAMiB,QAAQ,GAAGC,WAAW,CAAClB,gBAAgB,EAAE,KAAK,CAAC;IACrD,OAAO,MAAMmB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACjB,gBAAgB,CAAC,CAAC;EAEtBxD,SAAS,CAAC,MAAM;IACdqC,YAAY,CAACuC,OAAO,CAAC,OAAO,EAAEzC,IAAI,CAAC;EACrC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAM0C,eAAe,GAAGA,CAAC;IAAEC,QAAQ;IAAEC;EAAM,CAAC,kBAC1CjD,OAAA,CAACtB,GAAG;IACFwE,EAAE,EAAE;MACFC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAEL,QAAQ,GAAG,cAAc,GAAG,YAAY;MACjDM,OAAO,EAAE,GAAG;MACZC,EAAE,EAAE,GAAG;MACPC,EAAE,EAAE,CAAC;MACLC,YAAY,EAAE,CAAC;MACfC,EAAE,EAAE;IACN,CAAE;IAAAC,QAAA,GAEDX,QAAQ,gBACPhD,OAAA,CAACZ,eAAe;MAAC8D,EAAE,EAAE;QAAEU,QAAQ,EAAE,EAAE;QAAEF,EAAE,EAAE;MAAE;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEhDhE,OAAA,CAACV,UAAU;MAAC4D,EAAE,EAAE;QAAEU,QAAQ,EAAE,EAAE;QAAEF,EAAE,EAAE;MAAE;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3C,EACC,GAAEf,KAAM,IAAGD,QAAQ,GAAG,QAAQ,GAAG,SAAU,EAAC;EAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CACN;EAED,MAAMC,SAAS,GAAGA,CAAC;IAAEC,EAAE;IAAEP;EAAS,CAAC,kBACjC3D,OAAA,CAAC1B,MAAM;IACL6F,OAAO,EAAEA,CAAA,KAAM1D,QAAQ,CAACyD,EAAE,CAAE;IAC5BE,KAAK,EAAC,SAAS;IACflB,EAAE,EAAE;MACFmB,EAAE,EAAE,CAAC;MACL,SAAS,EAAE;QACTC,eAAe,EAAE;MACnB;IACF,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACT;EAED,oBACEhE,OAAA,CAAC5B,aAAa;IAAC+C,KAAK,EAAEA,KAAM;IAAAwC,QAAA,eAC1B3D,OAAA,CAACzB,KAAK;MACJgG,SAAS,EAAE,CAAE;MACbrB,EAAE,EAAE;QACFsB,SAAS,EAAE,OAAO;QAClBf,YAAY,EAAE,CAAC;QACfgB,UAAU,EAAE;MACd,CAAE;MAAAd,QAAA,gBAEF3D,OAAA,CAAC3B,MAAM;QAACqG,QAAQ,EAAC,QAAQ;QAACN,KAAK,EAAC,SAAS;QAAAT,QAAA,eACvC3D,OAAA,CAACxB,OAAO;UAAAmF,QAAA,gBACN3D,OAAA,CAACiE,SAAS;YAACC,EAAE,EAAC,GAAG;YAAAP,QAAA,eACf3D,OAAA;cAAM2E,SAAS,EAAC,MAAM;cAAAhB,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eAEZhE,OAAA,CAACtB,GAAG;YAACwE,EAAE,EAAE;cAAE0B,QAAQ,EAAE,CAAC;cAAEzB,OAAO,EAAE;YAAO,CAAE;YAAAQ,QAAA,gBACxC3D,OAAA,CAACiE,SAAS;cAACC,EAAE,EAAC,GAAG;cAAAP,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACxChE,OAAA,CAACiE,SAAS;cAACC,EAAE,EAAC,aAAa;cAAAP,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAClDhE,OAAA,CAACiE,SAAS;cAACC,EAAE,EAAC,YAAY;cAAAP,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAChDhE,OAAA,CAACiE,SAAS;cAACC,EAAE,EAAC,eAAe;cAAAP,QAAA,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eAENhE,OAAA,CAACtB,GAAG;YAACwE,EAAE,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEC,UAAU,EAAE,QAAQ;cAAEyB,GAAG,EAAE;YAAE,CAAE;YAAAlB,QAAA,GACxDjD,OAAO,gBACNV,OAAA,CAACrB,gBAAgB;cAACmG,IAAI,EAAE,EAAG;cAACV,KAAK,EAAC;YAAS;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAE9ChE,OAAA,CAAAE,SAAA;cAAAyD,QAAA,gBACE3D,OAAA,CAAC+C,eAAe;gBAACC,QAAQ,EAAEpC,QAAQ,CAACE,OAAQ;gBAACmC,KAAK,EAAC;cAAS;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC/DhE,OAAA,CAAC+C,eAAe;gBAACC,QAAQ,EAAEpC,QAAQ,CAACG,QAAS;gBAACkC,KAAK,EAAC;cAAI;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC3DhE,OAAA,CAAC+C,eAAe;gBAACC,QAAQ,EAAEpC,QAAQ,CAACI,QAAS;gBAACiC,KAAK,EAAC;cAAO;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC9DhE,OAAA,CAAC+C,eAAe;gBAACC,QAAQ,EAAEpC,QAAQ,CAACK,QAAS;gBAACgC,KAAK,EAAC;cAAO;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC9DhE,OAAA,CAAC+C,eAAe;gBAACC,QAAQ,EAAEpC,QAAQ,CAACM,WAAY;gBAAC+B,KAAK,EAAC;cAAU;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA,eACpE,CACH,eAEDhE,OAAA,CAAC1B,MAAM;cACL6F,OAAO,EAAEzC,gBAAiB;cAC1B0C,KAAK,EAAC,SAAS;cACfW,QAAQ,EAAErE,OAAQ;cAClBsE,SAAS,eAAEhF,OAAA,CAACR,WAAW;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAL,QAAA,EAC5B;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAEThE,OAAA,CAAC1B,MAAM;cACL6F,OAAO,EAAEA,CAAA,KAAM7D,OAAO,CAACD,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAE;cAC5D+D,KAAK,EAAC,SAAS;cACfY,SAAS,EAAE3E,IAAI,KAAK,MAAM,gBAAGL,OAAA,CAAChB,eAAe;gBAAA6E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAAGhE,OAAA,CAACd,eAAe;gBAAA2E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAL,QAAA,EAEtEtD,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG;YAAO;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEThE,OAAA,CAACtB,GAAG;QAACwE,EAAE,EAAE;UAAE+B,CAAC,EAAE;QAAE,CAAE;QAAAtB,QAAA,eAChB3D,OAAA,CAACnB,MAAM;UAAA8E,QAAA,gBACL3D,OAAA,CAACpB,KAAK;YAACsG,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEnF,OAAA,CAACL,KAAK;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtChE,OAAA,CAACpB,KAAK;YAACsG,IAAI,EAAC,aAAa;YAACC,OAAO,eAAEnF,OAAA,CAACN,QAAQ;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnDhE,OAAA,CAACpB,KAAK;YAACsG,IAAI,EAAC,YAAY;YAACC,OAAO,eAAEnF,OAAA,CAACJ,QAAQ;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClDhE,OAAA,CAACpB,KAAK;YAACsG,IAAI,EAAC,eAAe;YAACC,OAAO,eAAEnF,OAAA,CAACH,WAAW;cAAAgE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxDhE,OAAA,CAACpB,KAAK;YAACsG,IAAI,EAAC,iBAAiB;YAACC,OAAO,eAAEnF,OAAA,CAACF,UAAU;cAAA+D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB;AAAC5D,EAAA,CA9KQD,GAAG;EAAA,QAIOrB,WAAW;AAAA;AAAAsG,EAAA,GAJrBjF,GAAG;AAgLZ,eAAeA,GAAG;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}