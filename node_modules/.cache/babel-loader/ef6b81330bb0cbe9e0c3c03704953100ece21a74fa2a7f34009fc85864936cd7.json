{"ast":null,"code":"var _jsxFileName = \"/Users/jayachandran/new-imdb/imdb-clone-client/src/App.js\",\n  _s = $RefreshSig$();\n// // // //App.js\n// // // import './App.css';\n// // // import { ThemeProvider } from '@emotion/react';\n// // // import { AppBar, Button, Paper, Toolbar, createTheme } from '@mui/material';\n// // // import { useState } from 'react';\n// // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // import AddMovie from './AddMovie';\n// // // import Movie from './Movie';\n// // // import AddActor from './AddActor';\n// // // import AddProducer from './AddProducer';\n// // // import EditMovies from './EditMovies';\n\n// // // function App() {\n// // //   const [mode, setMode] = useState(\"dark\");\n// // //   const navigate = useNavigate();\n\n// // //   const theme = createTheme({\n// // //     palette: {\n// // //       mode: mode,\n// // //     },\n// // //   });\n\n// // //   return (\n// // //     <ThemeProvider theme={theme}>\n// // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // //           <Toolbar>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               <span className='logo'>IMDB</span>\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               All Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/add-movies\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               Add Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/add-actor\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               Add Actor\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/add-producer\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               Add Producer\n// // //             </Button>\n// // //             <Button\n// // //               style={{marginLeft : \"auto\"}}\n// // //               startIcon = {mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // //               onClick={() => {\n// // //                 setMode(mode === \"light\" ? \"dark\" : \"light\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // //             </Button>\n// // //           </Toolbar>\n// // //         </AppBar>\n\n// // //         <Routes>\n// // //           <Route\n// // //            exact\n// // //             path=\"/\"\n// // //             element={<Movie  />}\n// // //           />\n// // //           <Route\n// // //             path=\"/add-movies\"\n// // //             element={\n// // //               <AddMovie  />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-actor\"\n// // //             element={\n// // //               <AddActor  />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-producer\"\n// // //             element={\n// // //               <AddProducer />\n// // //             }\n// // //           />\n\n// // //           <Route\n// // //             path=\"movies/edit/:id\"\n// // //             element={\n// // //               <EditMovies  />\n// // //             }\n// // //           />\n// // //         </Routes>\n\n// // //       </Paper>\n// // //     </ThemeProvider>\n// // //   );\n// // // }\n\n// // // export default App;\n// // // App.js\n// // import './App.css';\n// // import { ThemeProvider } from '@emotion/react';\n// // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert } from '@mui/material';\n// // import { useState, useEffect } from 'react';\n// // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // import AddMovie from './AddMovie';\n// // import Movie from './Movie';\n// // import AddActor from './AddActor';\n// // import AddProducer from './AddProducer';\n// // import EditMovies from './EditMovies';\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // function App() {\n// //   const [mode, setMode] = useState(\"dark\");\n// //   const navigate = useNavigate();\n// //   const [isApiConnected, setIsApiConnected] = useState(false);\n// //   const [error, setError] = useState(null);\n\n// //   const theme = createTheme({\n// //     palette: {\n// //       mode: mode,\n// //     },\n// //   });\n\n// //   // Check API connectivity\n// //   useEffect(() => {\n// //     const checkApiStatus = async () => {\n// //       try {\n// //         const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// //         if (movieResponse.status === 200) {\n// //           setIsApiConnected(true);\n// //           setError(null);\n// //         }\n// //       } catch (err) {\n// //         setIsApiConnected(false);\n// //         setError(\"Unable to connect to the server. Please try again later.\");\n// //         console.error(\"API Connection Error:\", err);\n// //       }\n// //     };\n\n// //     checkApiStatus();\n// //     // Check connection every 5 minutes\n// //     const intervalId = setInterval(checkApiStatus, 300000);\n\n// //     return () => clearInterval(intervalId);\n// //   }, []);\n\n// //   const handleClose = (event, reason) => {\n// //     if (reason === 'clickaway') {\n// //       return;\n// //     }\n// //     setError(null);\n// //   };\n\n// //   return (\n// //     <ThemeProvider theme={theme}>\n// //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// //         <AppBar className=\"nav-bar\" position=\"static\">\n// //           <Toolbar>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               <span className='logo'>IMDB</span>\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               All Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-movies\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-actor\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Actor\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-producer\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Producer\n// //             </Button>\n// //             <Button\n// //               style={{marginLeft: \"auto\"}}\n// //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// //               color=\"inherit\"\n// //             >\n// //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// //             </Button>\n// //           </Toolbar>\n// //         </AppBar>\n\n// //         {/* API Status Indicator */}\n// //         <Snackbar open={!isApiConnected} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n// //           <Alert severity=\"warning\">\n// //             Backend server is not connected. Some features may be unavailable.\n// //           </Alert>\n// //         </Snackbar>\n\n// //         {/* Error Message */}\n// //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// //           <Alert onClose={handleClose} severity=\"error\">\n// //             {error}\n// //           </Alert>\n// //         </Snackbar>\n\n// //         <Routes>\n// //           <Route\n// //             exact\n// //             path=\"/\"\n// //             element={<Movie setError={setError} />}\n// //           />\n// //           <Route\n// //             path=\"/add-movies\"\n// //             element={\n// //               <AddMovie setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-actor\"\n// //             element={\n// //               <AddActor setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-producer\"\n// //             element={\n// //               <AddProducer setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"movies/edit/:id\"\n// //             element={\n// //               <EditMovies setError={setError} />\n// //             }\n// //           />\n// //         </Routes>\n// //       </Paper>\n// //     </ThemeProvider>\n// //   );\n// // }\n\n// // export default App;\n// // App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n// import axios from 'axios';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [isApiConnected, setIsApiConnected] = useState(false);\n//   const [isChecking, setIsChecking] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   // Check API connectivity\n//   const checkApiStatus = async () => {\n//     setIsChecking(true);\n//     try {\n//       const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n//       if (movieResponse.status === 200) {\n//         setIsApiConnected(true);\n//         setError(null);\n//       }\n//     } catch (err) {\n//       setIsApiConnected(false);\n//       setError(\"Unable to connect to the server. Please try again later.\");\n//       console.error(\"API Connection Error:\", err);\n//     } finally {\n//       setIsChecking(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkApiStatus();\n//     const intervalId = setInterval(checkApiStatus, 300000);\n//     return () => clearInterval(intervalId);\n//   }, []);\n\n//   const handleClose = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setError(null);\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               All Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//               disabled={!isApiConnected}\n//             >\n//               Add Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//               disabled={!isApiConnected}\n//             >\n//               Add Actor\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//               disabled={!isApiConnected}\n//             >\n//               Add Producer\n//             </Button>\n\n//             {/* Connection Status Button */}\n//             <Button\n//               onClick={checkApiStatus}\n//               style={{\n//                 marginLeft: 'auto',\n//                 marginRight: '10px',\n//                 backgroundColor: isApiConnected ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n//                 color: isApiConnected ? '#2e7d32' : '#d32f2f'\n//               }}\n//               startIcon={\n//                 isChecking ? (\n//                   <CircularProgress size={20} color={isApiConnected ? \"success\" : \"error\"} />\n//                 ) : isApiConnected ? (\n//                   <CheckCircleIcon style={{ color: '#2e7d32' }} />\n//                 ) : (\n//                   <CancelIcon style={{ color: '#d32f2f' }} />\n//                 )\n//               }\n//             >\n//               {isChecking ? 'Checking...' : isApiConnected ? 'Connected' : 'Disconnected'}\n//             </Button>\n\n//             <Button\n//               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//               color=\"inherit\"\n//             >\n//               {mode === \"light\" ? \"dark\" : \"light\"} mode\n//             </Button>\n//           </Toolbar>\n//         </AppBar>\n\n//         {/* Error Message */}\n//         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n//           <Alert onClose={handleClose} severity=\"error\">\n//             {error}\n//           </Alert>\n//         </Snackbar>\n\n//         <Routes>\n//           <Route\n//             exact\n//             path=\"/\"\n//             element={<Movie setError={setError} />}\n//           />\n//           <Route\n//             path=\"/add-movies\"\n//             element={\n//               <AddMovie setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-actor\"\n//             element={\n//               <AddActor setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-producer\"\n//             element={\n//               <AddProducer setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"movies/edit/:id\"\n//             element={\n//               <EditMovies setError={setError} />\n//             }\n//           />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n// App.js\nimport './App.css';\nimport { ThemeProvider } from '@emotion/react';\nimport { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport CloudIcon from '@mui/icons-material/Cloud';\nimport AddMovie from './AddMovie';\nimport Movie from './Movie';\nimport AddActor from './AddActor';\nimport AddProducer from './AddProducer';\nimport EditMovies from './EditMovies';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"dark\");\n  const navigate = useNavigate();\n  const [healthStatus, setHealthStatus] = useState({\n    api: {\n      status: false,\n      checking: true\n    },\n    database: {\n      status: false,\n      checking: true\n    }\n  });\n  const [error, setError] = useState(null);\n  const theme = createTheme({\n    palette: {\n      mode: mode\n    }\n  });\n\n  // Check API and Database health\n  const checkHealthStatus = async () => {\n    setHealthStatus(prev => ({\n      api: {\n        ...prev.api,\n        checking: true\n      },\n      database: {\n        ...prev.database,\n        checking: true\n      }\n    }));\n    try {\n      const response = await axios.get(`${API_BASE_URL}/movies/health`);\n      setHealthStatus({\n        api: {\n          status: true,\n          checking: false\n        },\n        database: {\n          status: response.data.database.status === \"connected\",\n          checking: false\n        }\n      });\n      setError(null);\n    } catch (err) {\n      setHealthStatus({\n        api: {\n          status: false,\n          checking: false\n        },\n        database: {\n          status: false,\n          checking: false\n        }\n      });\n      setError(\"System health check failed. Please try again later.\");\n      console.error(\"Health Check Error:\", err);\n    }\n  };\n  useEffect(() => {\n    checkHealthStatus();\n    const intervalId = setInterval(checkHealthStatus, 300000); // Check every 5 minutes\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setError(null);\n  };\n\n  // Health Status Indicator Component\n  const HealthIndicator = ({\n    type,\n    status,\n    checking\n  }) => {\n    const icon = type === 'api' ? /*#__PURE__*/_jsxDEV(CloudIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(StorageIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 51\n    }, this);\n    const label = type === 'api' ? 'API' : 'Database';\n    return /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: `${label} Status`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: checkHealthStatus,\n        style: {\n          marginLeft: '10px',\n          backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n          color: status ? '#2e7d32' : '#d32f2f',\n          minWidth: '120px'\n        },\n        startIcon: checking ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20,\n          color: status ? \"success\" : \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 15\n        }, this) : status ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          style: {\n            color: '#2e7d32'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n          style: {\n            color: '#d32f2f'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 15\n        }, this),\n        children: checking ? 'Checking...' : `${label} ${status ? 'Healthy' : 'Down'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"paper\",\n      elevation: 5,\n      style: {\n        borderRadius: \"0px\",\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        className: \"nav-bar\",\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/\"),\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo\",\n              children: \"IMDB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/\"),\n            color: \"inherit\",\n            children: \"All Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/add-movies\"),\n            color: \"inherit\",\n            disabled: !healthStatus.api.status || !healthStatus.database.status,\n            children: \"Add Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/add-actor\"),\n            color: \"inherit\",\n            disabled: !healthStatus.api.status || !healthStatus.database.status,\n            children: \"Add Actor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/add-producer\"),\n            color: \"inherit\",\n            disabled: !healthStatus.api.status || !healthStatus.database.status,\n            children: \"Add Producer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              marginLeft: 'auto',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(HealthIndicator, {\n              type: \"api\",\n              status: healthStatus.api.status,\n              checking: healthStatus.api.checking\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HealthIndicator, {\n              type: \"database\",\n              status: healthStatus.database.status,\n              checking: healthStatus.database.checking\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                ml: 2\n              },\n              startIcon: mode === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 68\n              }, this),\n              onClick: () => setMode(mode === \"light\" ? \"dark\" : \"light\"),\n              color: \"inherit\",\n              children: [mode === \"light\" ? \"dark\" : \"light\", \" mode\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: !!error,\n        autoHideDuration: 6000,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Movie, {\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-movies\",\n          element: /*#__PURE__*/_jsxDEV(AddMovie, {\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-actor\",\n          element: /*#__PURE__*/_jsxDEV(AddActor, {\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-producer\",\n          element: /*#__PURE__*/_jsxDEV(AddProducer, {\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"movies/edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(EditMovies, {\n            setError: setError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 567,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GQXayOJFTDTA+bUHrAbsyzHGldQ=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ThemeProvider","AppBar","Button","Paper","Toolbar","createTheme","Snackbar","Alert","Box","CircularProgress","Tooltip","useState","useEffect","Route","Routes","useNavigate","Brightness7Icon","Brightness4Icon","CheckCircleIcon","CancelIcon","StorageIcon","CloudIcon","AddMovie","Movie","AddActor","AddProducer","EditMovies","axios","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","App","_s","mode","setMode","navigate","healthStatus","setHealthStatus","api","status","checking","database","error","setError","theme","palette","checkHealthStatus","prev","response","get","data","err","console","intervalId","setInterval","clearInterval","handleClose","event","reason","HealthIndicator","type","icon","fileName","_jsxFileName","lineNumber","columnNumber","label","title","children","onClick","style","marginLeft","backgroundColor","color","minWidth","startIcon","size","className","elevation","borderRadius","minHeight","position","disabled","sx","display","alignItems","ml","open","autoHideDuration","onClose","severity","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/jayachandran/new-imdb/imdb-clone-client/src/App.js"],"sourcesContent":["// // // //App.js\n// // // import './App.css';\n// // // import { ThemeProvider } from '@emotion/react';\n// // // import { AppBar, Button, Paper, Toolbar, createTheme } from '@mui/material';\n// // // import { useState } from 'react';\n// // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // import AddMovie from './AddMovie';\n// // // import Movie from './Movie';\n// // // import AddActor from './AddActor';\n// // // import AddProducer from './AddProducer';\n// // // import EditMovies from './EditMovies';\n\n// // // function App() {\n// // //   const [mode, setMode] = useState(\"dark\");\n// // //   const navigate = useNavigate();\n\n// // //   const theme = createTheme({\n// // //     palette: {\n// // //       mode: mode,\n// // //     },\n// // //   });\n\n// // //   return (\n// // //     <ThemeProvider theme={theme}>\n// // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // //           <Toolbar>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               <span className='logo'>IMDB</span>\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               All Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/add-movies\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               Add Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/add-actor\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               Add Actor\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => {\n// // //                 navigate(\"/add-producer\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               Add Producer\n// // //             </Button>\n// // //             <Button\n// // //               style={{marginLeft : \"auto\"}}\n// // //               startIcon = {mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // //               onClick={() => {\n// // //                 setMode(mode === \"light\" ? \"dark\" : \"light\");\n// // //               }}\n// // //               color=\"inherit\"\n// // //             >\n// // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // //             </Button>\n// // //           </Toolbar>\n// // //         </AppBar>\n\n// // //         <Routes>\n// // //           <Route\n// // //            exact\n// // //             path=\"/\"\n// // //             element={<Movie  />}\n// // //           />\n// // //           <Route\n// // //             path=\"/add-movies\"\n// // //             element={\n// // //               <AddMovie  />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-actor\"\n// // //             element={\n// // //               <AddActor  />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-producer\"\n// // //             element={\n// // //               <AddProducer />\n// // //             }\n// // //           />\n          \n// // //           <Route\n// // //             path=\"movies/edit/:id\"\n// // //             element={\n// // //               <EditMovies  />\n// // //             }\n// // //           />\n// // //         </Routes>\n\n// // //       </Paper>\n// // //     </ThemeProvider>\n// // //   );\n// // // }\n\n\n\n// // // export default App;\n// // // App.js\n// // import './App.css';\n// // import { ThemeProvider } from '@emotion/react';\n// // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert } from '@mui/material';\n// // import { useState, useEffect } from 'react';\n// // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // import AddMovie from './AddMovie';\n// // import Movie from './Movie';\n// // import AddActor from './AddActor';\n// // import AddProducer from './AddProducer';\n// // import EditMovies from './EditMovies';\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // function App() {\n// //   const [mode, setMode] = useState(\"dark\");\n// //   const navigate = useNavigate();\n// //   const [isApiConnected, setIsApiConnected] = useState(false);\n// //   const [error, setError] = useState(null);\n\n// //   const theme = createTheme({\n// //     palette: {\n// //       mode: mode,\n// //     },\n// //   });\n\n// //   // Check API connectivity\n// //   useEffect(() => {\n// //     const checkApiStatus = async () => {\n// //       try {\n// //         const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// //         if (movieResponse.status === 200) {\n// //           setIsApiConnected(true);\n// //           setError(null);\n// //         }\n// //       } catch (err) {\n// //         setIsApiConnected(false);\n// //         setError(\"Unable to connect to the server. Please try again later.\");\n// //         console.error(\"API Connection Error:\", err);\n// //       }\n// //     };\n\n// //     checkApiStatus();\n// //     // Check connection every 5 minutes\n// //     const intervalId = setInterval(checkApiStatus, 300000);\n\n// //     return () => clearInterval(intervalId);\n// //   }, []);\n\n// //   const handleClose = (event, reason) => {\n// //     if (reason === 'clickaway') {\n// //       return;\n// //     }\n// //     setError(null);\n// //   };\n\n// //   return (\n// //     <ThemeProvider theme={theme}>\n// //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// //         <AppBar className=\"nav-bar\" position=\"static\">\n// //           <Toolbar>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               <span className='logo'>IMDB</span>\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               All Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-movies\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-actor\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Actor\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-producer\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Producer\n// //             </Button>\n// //             <Button\n// //               style={{marginLeft: \"auto\"}}\n// //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// //               color=\"inherit\"\n// //             >\n// //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// //             </Button>\n// //           </Toolbar>\n// //         </AppBar>\n\n// //         {/* API Status Indicator */}\n// //         <Snackbar open={!isApiConnected} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n// //           <Alert severity=\"warning\">\n// //             Backend server is not connected. Some features may be unavailable.\n// //           </Alert>\n// //         </Snackbar>\n\n// //         {/* Error Message */}\n// //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// //           <Alert onClose={handleClose} severity=\"error\">\n// //             {error}\n// //           </Alert>\n// //         </Snackbar>\n\n// //         <Routes>\n// //           <Route\n// //             exact\n// //             path=\"/\"\n// //             element={<Movie setError={setError} />}\n// //           />\n// //           <Route\n// //             path=\"/add-movies\"\n// //             element={\n// //               <AddMovie setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-actor\"\n// //             element={\n// //               <AddActor setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-producer\"\n// //             element={\n// //               <AddProducer setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"movies/edit/:id\"\n// //             element={\n// //               <EditMovies setError={setError} />\n// //             }\n// //           />\n// //         </Routes>\n// //       </Paper>\n// //     </ThemeProvider>\n// //   );\n// // }\n\n// // export default App;\n// // App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n// import axios from 'axios';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [isApiConnected, setIsApiConnected] = useState(false);\n//   const [isChecking, setIsChecking] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   // Check API connectivity\n//   const checkApiStatus = async () => {\n//     setIsChecking(true);\n//     try {\n//       const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n//       if (movieResponse.status === 200) {\n//         setIsApiConnected(true);\n//         setError(null);\n//       }\n//     } catch (err) {\n//       setIsApiConnected(false);\n//       setError(\"Unable to connect to the server. Please try again later.\");\n//       console.error(\"API Connection Error:\", err);\n//     } finally {\n//       setIsChecking(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkApiStatus();\n//     const intervalId = setInterval(checkApiStatus, 300000);\n//     return () => clearInterval(intervalId);\n//   }, []);\n\n//   const handleClose = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setError(null);\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               All Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//               disabled={!isApiConnected}\n//             >\n//               Add Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//               disabled={!isApiConnected}\n//             >\n//               Add Actor\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//               disabled={!isApiConnected}\n//             >\n//               Add Producer\n//             </Button>\n\n//             {/* Connection Status Button */}\n//             <Button\n//               onClick={checkApiStatus}\n//               style={{\n//                 marginLeft: 'auto',\n//                 marginRight: '10px',\n//                 backgroundColor: isApiConnected ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n//                 color: isApiConnected ? '#2e7d32' : '#d32f2f'\n//               }}\n//               startIcon={\n//                 isChecking ? (\n//                   <CircularProgress size={20} color={isApiConnected ? \"success\" : \"error\"} />\n//                 ) : isApiConnected ? (\n//                   <CheckCircleIcon style={{ color: '#2e7d32' }} />\n//                 ) : (\n//                   <CancelIcon style={{ color: '#d32f2f' }} />\n//                 )\n//               }\n//             >\n//               {isChecking ? 'Checking...' : isApiConnected ? 'Connected' : 'Disconnected'}\n//             </Button>\n\n//             <Button\n//               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//               color=\"inherit\"\n//             >\n//               {mode === \"light\" ? \"dark\" : \"light\"} mode\n//             </Button>\n//           </Toolbar>\n//         </AppBar>\n\n//         {/* Error Message */}\n//         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n//           <Alert onClose={handleClose} severity=\"error\">\n//             {error}\n//           </Alert>\n//         </Snackbar>\n\n//         <Routes>\n//           <Route\n//             exact\n//             path=\"/\"\n//             element={<Movie setError={setError} />}\n//           />\n//           <Route\n//             path=\"/add-movies\"\n//             element={\n//               <AddMovie setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-actor\"\n//             element={\n//               <AddActor setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-producer\"\n//             element={\n//               <AddProducer setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"movies/edit/:id\"\n//             element={\n//               <EditMovies setError={setError} />\n//             }\n//           />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n// App.js\nimport './App.css';\nimport { ThemeProvider } from '@emotion/react';\nimport { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport CloudIcon from '@mui/icons-material/Cloud';\nimport AddMovie from './AddMovie';\nimport Movie from './Movie';\nimport AddActor from './AddActor';\nimport AddProducer from './AddProducer';\nimport EditMovies from './EditMovies';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nfunction App() {\n  const [mode, setMode] = useState(\"dark\");\n  const navigate = useNavigate();\n  const [healthStatus, setHealthStatus] = useState({\n    api: { status: false, checking: true },\n    database: { status: false, checking: true }\n  });\n  const [error, setError] = useState(null);\n\n  const theme = createTheme({\n    palette: {\n      mode: mode,\n    },\n  });\n\n  // Check API and Database health\n  const checkHealthStatus = async () => {\n    setHealthStatus(prev => ({\n      api: { ...prev.api, checking: true },\n      database: { ...prev.database, checking: true }\n    }));\n\n    try {\n      const response = await axios.get(`${API_BASE_URL}/movies/health`);\n      setHealthStatus({\n        api: { status: true, checking: false },\n        database: { \n          status: response.data.database.status === \"connected\", \n          checking: false \n        }\n      });\n      setError(null);\n    } catch (err) {\n      setHealthStatus({\n        api: { status: false, checking: false },\n        database: { status: false, checking: false }\n      });\n      setError(\"System health check failed. Please try again later.\");\n      console.error(\"Health Check Error:\", err);\n    }\n  };\n\n  useEffect(() => {\n    checkHealthStatus();\n    const intervalId = setInterval(checkHealthStatus, 300000); // Check every 5 minutes\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setError(null);\n  };\n\n  // Health Status Indicator Component\n  const HealthIndicator = ({ type, status, checking }) => {\n    const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n    const label = type === 'api' ? 'API' : 'Database';\n    \n    return (\n      <Tooltip title={`${label} Status`}>\n        <Button\n          onClick={checkHealthStatus}\n          style={{\n            marginLeft: '10px',\n            backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n            color: status ? '#2e7d32' : '#d32f2f',\n            minWidth: '120px',\n          }}\n          startIcon={\n            checking ? (\n              <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n            ) : status ? (\n              <CheckCircleIcon style={{ color: '#2e7d32' }} />\n            ) : (\n              <CancelIcon style={{ color: '#d32f2f' }} />\n            )\n          }\n        >\n          {checking ? 'Checking...' : `${label} ${status ? 'Healthy' : 'Down'}`}\n        </Button>\n      </Tooltip>\n    );\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n        <AppBar className=\"nav-bar\" position=\"static\">\n          <Toolbar>\n            <Button\n              onClick={() => navigate(\"/\")}\n              color=\"inherit\"\n            >\n              <span className='logo'>IMDB</span>\n            </Button>\n            <Button\n              onClick={() => navigate(\"/\")}\n              color=\"inherit\"\n            >\n              All Movies\n            </Button>\n            <Button\n              onClick={() => navigate(\"/add-movies\")}\n              color=\"inherit\"\n              disabled={!healthStatus.api.status || !healthStatus.database.status}\n            >\n              Add Movies\n            </Button>\n            <Button\n              onClick={() => navigate(\"/add-actor\")}\n              color=\"inherit\"\n              disabled={!healthStatus.api.status || !healthStatus.database.status}\n            >\n              Add Actor\n            </Button>\n            <Button\n              onClick={() => navigate(\"/add-producer\")}\n              color=\"inherit\"\n              disabled={!healthStatus.api.status || !healthStatus.database.status}\n            >\n              Add Producer\n            </Button>\n\n            <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n              <HealthIndicator \n                type=\"api\" \n                status={healthStatus.api.status} \n                checking={healthStatus.api.checking} \n              />\n              <HealthIndicator \n                type=\"database\" \n                status={healthStatus.database.status} \n                checking={healthStatus.database.checking} \n              />\n              \n              <Button\n                sx={{ ml: 2 }}\n                startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n                onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n                color=\"inherit\"\n              >\n                {mode === \"light\" ? \"dark\" : \"light\"} mode\n              </Button>\n            </Box>\n          </Toolbar>\n        </AppBar>\n\n        <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\">\n            {error}\n          </Alert>\n        </Snackbar>\n\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={<Movie setError={setError} />}\n          />\n          <Route\n            path=\"/add-movies\"\n            element={\n              <AddMovie setError={setError} />\n            }\n          />\n          <Route\n            path=\"/add-actor\"\n            element={\n              <AddActor setError={setError} />\n            }\n          />\n          <Route\n            path=\"/add-producer\"\n            element={\n              <AddProducer setError={setError} />\n            }\n          />\n          <Route\n            path=\"movies/edit/:id\"\n            element={\n              <EditMovies setError={setError} />\n            }\n          />\n        </Routes>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,WAAW;AAClB,SAASA,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,GAAG,EAAEC,gBAAgB,EAAEC,OAAO,QAAQ,eAAe;AAC5H,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}