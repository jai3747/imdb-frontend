{"ast":null,"code":"// // src/config/api.config.js\n\n// const isDevelopment = process.env.NODE_ENV === 'development';\n// const isProduction = process.env.NODE_ENV === 'production';\n\n// // Base URL configuration\n// const getBaseURL = () => {\n//   // Check for environment variable first\n//   if (process.env.REACT_APP_API_BASE_URL) {\n//     return process.env.REACT_APP_API_BASE_URL;\n//   }\n\n//   // Default based on environment\n//   if (isProduction) {\n//     return 'https://your-production-api.com/api';\n//   }\n\n//   // Development default\n//   return 'http://localhost:5000/api';\n// };\n\n// export const API_CONFIG = {\n//   // Base configuration\n//   BASE_URL: getBaseURL(),\n//   TIMEOUT: 10000, // 10 seconds\n\n//   // API endpoints - Fixed to match server endpoints\n//   ENDPOINTS: {\n//     // Health and status\n//     HEALTH: '/health',\n\n//     // Movies\n//     MOVIES: '/movies',\n//     MOVIES_STATUS: '/movies/status',\n\n//     // Actors  \n//     ACTORS: '/actors',\n//     ACTORS_STATUS: '/actors/status',\n\n//     // Producers\n//     PRODUCERS: '/producers',  \n//     PRODUCERS_STATUS: '/producers/status',\n\n//     // Metrics\n//     METRICS: '/metrics-report'\n//   },\n\n//   // HTTP methods\n//   METHODS: {\n//     GET: 'GET',\n//     POST: 'POST', \n//     PUT: 'PUT',\n//     DELETE: 'DELETE',\n//     PATCH: 'PATCH'\n//   },\n\n//   // Status codes\n//   STATUS_CODES: {\n//     OK: 200,\n//     CREATED: 201,\n//     NO_CONTENT: 204,\n//     NOT_MODIFIED: 304,\n//     BAD_REQUEST: 400,\n//     UNAUTHORIZED: 401,\n//     FORBIDDEN: 403,\n//     NOT_FOUND: 404,\n//     INTERNAL_SERVER_ERROR: 500\n//   },\n\n//   // Headers\n//   HEADERS: {\n//     CONTENT_TYPE: 'Content-Type',\n//     AUTHORIZATION: 'Authorization',\n//     ACCEPT: 'Accept'\n//   },\n\n//   // Content types\n//   CONTENT_TYPES: {\n//     JSON: 'application/json',\n//     FORM_DATA: 'multipart/form-data',\n//     URL_ENCODED: 'application/x-www-form-urlencoded',\n//     TEXT: 'text/plain'\n//   },\n\n//   // Fixed: Add the missing constants that were causing TypeError\n//   SERVICE_TYPES: {\n//     ACTOR: 'actors',\n//     MOVIE: 'movies', \n//     PRODUCER: 'producers'\n//   }\n// };\n\n// // Helper function to build full endpoint URLs\n// export const buildEndpointURL = (endpoint) => {\n//   return `${API_CONFIG.BASE_URL}${endpoint}`;\n// };\n\n// // Helper function to check if we're in development\n// export const isDev = () => isDevelopment;\n\n// // Helper function to get API base URL without /api suffix for direct calls\n// export const getDirectBaseURL = () => {\n//   if (process.env.REACT_APP_API_BASE_URL) {\n//     return process.env.REACT_APP_API_BASE_URL.replace('/api', '');\n//   }\n\n//   if (isProduction) {\n//     return 'https://your-production-api.com';\n//   }\n\n//   return 'http://localhost:5000';\n// };\n\n// export default API_CONFIG;\n// src/config/api.config.js\nconst API_CONFIG = {\n  BASE_URL: 'http://localhost:5000/api',\n  DIRECT_BASE_URL: 'http://localhost:5000',\n  TIMEOUT: 10000,\n  ENDPOINTS: {\n    HEALTH: '/health',\n    MOVIES: '/movies',\n    ACTORS: '/actors',\n    PRODUCERS: '/producers',\n    METRICS_REPORT: '/metrics-report',\n    // Add the missing API_STATUS endpoints\n    API_STATUS: {\n      ACTOR: '/actors/status',\n      MOVIE: '/movies/status',\n      PRODUCER: '/producers/status'\n    }\n  }\n};\n\n// Helper function to get direct base URL (without /api prefix)\nconst getDirectBaseURL = () => {\n  return API_CONFIG.DIRECT_BASE_URL;\n};\nexport { API_CONFIG, getDirectBaseURL };","map":{"version":3,"names":["API_CONFIG","BASE_URL","DIRECT_BASE_URL","TIMEOUT","ENDPOINTS","HEALTH","MOVIES","ACTORS","PRODUCERS","METRICS_REPORT","API_STATUS","ACTOR","MOVIE","PRODUCER","getDirectBaseURL"],"sources":["/Users/jayachandran/imdb/imdb-frontend/src/config/api.config.js"],"sourcesContent":["// // src/config/api.config.js\n\n// const isDevelopment = process.env.NODE_ENV === 'development';\n// const isProduction = process.env.NODE_ENV === 'production';\n\n// // Base URL configuration\n// const getBaseURL = () => {\n//   // Check for environment variable first\n//   if (process.env.REACT_APP_API_BASE_URL) {\n//     return process.env.REACT_APP_API_BASE_URL;\n//   }\n  \n//   // Default based on environment\n//   if (isProduction) {\n//     return 'https://your-production-api.com/api';\n//   }\n  \n//   // Development default\n//   return 'http://localhost:5000/api';\n// };\n\n// export const API_CONFIG = {\n//   // Base configuration\n//   BASE_URL: getBaseURL(),\n//   TIMEOUT: 10000, // 10 seconds\n  \n//   // API endpoints - Fixed to match server endpoints\n//   ENDPOINTS: {\n//     // Health and status\n//     HEALTH: '/health',\n    \n//     // Movies\n//     MOVIES: '/movies',\n//     MOVIES_STATUS: '/movies/status',\n    \n//     // Actors  \n//     ACTORS: '/actors',\n//     ACTORS_STATUS: '/actors/status',\n    \n//     // Producers\n//     PRODUCERS: '/producers',  \n//     PRODUCERS_STATUS: '/producers/status',\n    \n//     // Metrics\n//     METRICS: '/metrics-report'\n//   },\n  \n//   // HTTP methods\n//   METHODS: {\n//     GET: 'GET',\n//     POST: 'POST', \n//     PUT: 'PUT',\n//     DELETE: 'DELETE',\n//     PATCH: 'PATCH'\n//   },\n  \n//   // Status codes\n//   STATUS_CODES: {\n//     OK: 200,\n//     CREATED: 201,\n//     NO_CONTENT: 204,\n//     NOT_MODIFIED: 304,\n//     BAD_REQUEST: 400,\n//     UNAUTHORIZED: 401,\n//     FORBIDDEN: 403,\n//     NOT_FOUND: 404,\n//     INTERNAL_SERVER_ERROR: 500\n//   },\n  \n//   // Headers\n//   HEADERS: {\n//     CONTENT_TYPE: 'Content-Type',\n//     AUTHORIZATION: 'Authorization',\n//     ACCEPT: 'Accept'\n//   },\n  \n//   // Content types\n//   CONTENT_TYPES: {\n//     JSON: 'application/json',\n//     FORM_DATA: 'multipart/form-data',\n//     URL_ENCODED: 'application/x-www-form-urlencoded',\n//     TEXT: 'text/plain'\n//   },\n\n//   // Fixed: Add the missing constants that were causing TypeError\n//   SERVICE_TYPES: {\n//     ACTOR: 'actors',\n//     MOVIE: 'movies', \n//     PRODUCER: 'producers'\n//   }\n// };\n\n// // Helper function to build full endpoint URLs\n// export const buildEndpointURL = (endpoint) => {\n//   return `${API_CONFIG.BASE_URL}${endpoint}`;\n// };\n\n// // Helper function to check if we're in development\n// export const isDev = () => isDevelopment;\n\n// // Helper function to get API base URL without /api suffix for direct calls\n// export const getDirectBaseURL = () => {\n//   if (process.env.REACT_APP_API_BASE_URL) {\n//     return process.env.REACT_APP_API_BASE_URL.replace('/api', '');\n//   }\n  \n//   if (isProduction) {\n//     return 'https://your-production-api.com';\n//   }\n  \n//   return 'http://localhost:5000';\n// };\n\n// export default API_CONFIG;\n// src/config/api.config.js\nconst API_CONFIG = {\n  BASE_URL: 'http://localhost:5000/api',\n  DIRECT_BASE_URL: 'http://localhost:5000',\n  TIMEOUT: 10000,\n  ENDPOINTS: {\n    HEALTH: '/health',\n    MOVIES: '/movies',\n    ACTORS: '/actors',\n    PRODUCERS: '/producers',\n    METRICS_REPORT: '/metrics-report',\n    // Add the missing API_STATUS endpoints\n    API_STATUS: {\n      ACTOR: '/actors/status',\n      MOVIE: '/movies/status',\n      PRODUCER: '/producers/status'\n    }\n  }\n};\n\n// Helper function to get direct base URL (without /api prefix)\nconst getDirectBaseURL = () => {\n  return API_CONFIG.DIRECT_BASE_URL;\n};\n\nexport { API_CONFIG, getDirectBaseURL };"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAMA,UAAU,GAAG;EACjBC,QAAQ,EAAE,2BAA2B;EACrCC,eAAe,EAAE,uBAAuB;EACxCC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE;IACTC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE,YAAY;IACvBC,cAAc,EAAE,iBAAiB;IACjC;IACAC,UAAU,EAAE;MACVC,KAAK,EAAE,gBAAgB;MACvBC,KAAK,EAAE,gBAAgB;MACvBC,QAAQ,EAAE;IACZ;EACF;AACF,CAAC;;AAED;AACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,OAAOd,UAAU,CAACE,eAAe;AACnC,CAAC;AAED,SAASF,UAAU,EAAEc,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}