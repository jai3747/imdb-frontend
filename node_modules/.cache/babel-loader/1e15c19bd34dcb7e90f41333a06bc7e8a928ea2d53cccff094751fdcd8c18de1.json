{"ast":null,"code":"var _jsxFileName = \"/Users/jayachandran/imdb/imdb-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport { useState, useEffect, useCallback } from \"react\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { AppBar, Button, Paper, Toolbar, createTheme, Box, CircularProgress } from \"@mui/material\";\nimport { Route, Routes, useNavigate, useLocation } from \"react-router-dom\";\nimport { Brightness7 as Brightness7Icon, Brightness4 as Brightness4Icon, CheckCircle as CheckCircleIcon, Cancel as CancelIcon, Refresh as RefreshIcon } from \"@mui/icons-material\";\nimport apiService from \"./services/api.service\";\nimport metricsService from \"./services/metrics.service\";\nimport { API_CONFIG } from \"./config/api.config\";\nimport AddMovie from \"./AddMovie\";\nimport Movie from \"./Movie\";\nimport AddActor from \"./AddActor\";\nimport AddProducer from \"./AddProducer\";\nimport EditMovies from \"./EditMovies\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(() => localStorage.getItem(\"theme\") || \"dark\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  const [statuses, setStatuses] = useState({\n    backend: false,\n    database: false,\n    actorApi: false,\n    movieApi: false,\n    producerApi: false\n  });\n  const theme = createTheme({\n    palette: {\n      mode: mode,\n      primary: {\n        main: mode === \"dark\" ? \"#90caf9\" : \"#1976d2\"\n      },\n      background: {\n        default: mode === \"dark\" ? \"#121212\" : \"#ffffff\",\n        paper: mode === \"dark\" ? \"#1e1e1e\" : \"#ffffff\"\n      }\n    }\n  });\n\n  // Initialize metrics service\n  useEffect(() => {\n    metricsService.startReporting(30000); // Report every 30 seconds\n\n    return () => {\n      metricsService.stopReporting();\n    };\n  }, []);\n\n  // Track page views\n  useEffect(() => {\n    const currentPage = location.pathname || '/';\n    metricsService.recordPageView(currentPage);\n  }, [location.pathname]);\n  const checkAllStatuses = useCallback(async () => {\n    try {\n      setLoading(true);\n      const startTime = performance.now();\n\n      // Check backend health and database status\n      let healthData;\n      let backendStatus = false;\n      let databaseStatus = false;\n      try {\n        healthData = await apiService.checkHealth();\n        backendStatus = true;\n\n        // Fixed: Check the correct database status field\n        // Your backend returns database: { status: \"connected\" }, not database: \"connected\"\n        if (healthData.database && healthData.database.status) {\n          databaseStatus = healthData.database.status === \"connected\";\n        } else if (healthData.database === \"connected\") {\n          databaseStatus = true;\n        } else {\n          databaseStatus = false;\n        }\n        console.log(\"Health check succeeded:\", healthData);\n        console.log(\"Database status extracted:\", databaseStatus);\n\n        // Record successful API call\n        const endTime = performance.now();\n        metricsService.recordApiCall(\"health\", \"success\", endTime - startTime);\n      } catch (error) {\n        console.error(\"Health check failed:\", error);\n        backendStatus = false;\n        databaseStatus = false;\n\n        // Record failed API call\n        const endTime = performance.now();\n        metricsService.recordApiCall(\"health\", \"error\", endTime - startTime);\n        metricsService.recordError(\"api\", \"Health check failed\");\n      }\n\n      // If backend is online, check individual APIs with better error handling\n      let actorApiStatus = false;\n      let movieApiStatus = false;\n      let producerApiStatus = false;\n      if (backendStatus) {\n        // Check Actor API\n        try {\n          const actorStartTime = performance.now();\n          await apiService.getActors();\n          actorApiStatus = true;\n          console.log(\"Actor API is working\");\n          const actorEndTime = performance.now();\n          metricsService.recordApiCall(\"actor-check\", \"success\", actorEndTime - actorStartTime);\n        } catch (error) {\n          console.error(\"Actor API check failed:\", error.message);\n          actorApiStatus = false;\n          metricsService.recordError(\"api\", \"Actor API check failed\");\n        }\n\n        // Check Movie API\n        try {\n          const movieStartTime = performance.now();\n          await apiService.getMovies();\n          movieApiStatus = true;\n          console.log(\"Movie API is working\");\n          const movieEndTime = performance.now();\n          metricsService.recordApiCall(\"movie-check\", \"success\", movieEndTime - movieStartTime);\n        } catch (error) {\n          console.error(\"Movie API check failed:\", error.message);\n          movieApiStatus = false;\n          metricsService.recordError(\"api\", \"Movie API check failed\");\n        }\n\n        // Check Producer API\n        try {\n          const producerStartTime = performance.now();\n          await apiService.getProducers();\n          producerApiStatus = true;\n          console.log(\"Producer API is working\");\n          const producerEndTime = performance.now();\n          metricsService.recordApiCall(\"producer-check\", \"success\", producerEndTime - producerStartTime);\n        } catch (error) {\n          console.error(\"Producer API check failed:\", error.message);\n          producerApiStatus = false;\n          metricsService.recordError(\"api\", \"Producer API check failed\");\n        }\n      }\n\n      // Update statuses\n      const newStatuses = {\n        backend: backendStatus,\n        database: databaseStatus,\n        actorApi: actorApiStatus,\n        movieApi: movieApiStatus,\n        producerApi: producerApiStatus\n      };\n      setStatuses(newStatuses);\n\n      // Record service status metrics\n      metricsService.recordUiInteraction(\"status-panel\", \"update\");\n      console.log(\"Final API Status Check:\", newStatuses);\n    } catch (error) {\n      console.error(\"Overall status check failed:\", error);\n      setStatuses({\n        backend: false,\n        database: false,\n        actorApi: false,\n        movieApi: false,\n        producerApi: false\n      });\n      metricsService.recordError(\"status-check\", \"Overall check failed\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    checkAllStatuses();\n    const interval = setInterval(checkAllStatuses, 30000);\n    return () => clearInterval(interval);\n  }, [checkAllStatuses]);\n  useEffect(() => {\n    localStorage.setItem(\"theme\", mode);\n    // Record theme change\n    metricsService.recordUiInteraction(\"theme\", mode);\n  }, [mode]);\n  useEffect(() => {\n    console.log(\"Current API Status:\", statuses);\n  }, [statuses]);\n  const StatusIndicator = ({\n    isOnline,\n    label\n  }) => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      alignItems: \"center\",\n      bgcolor: isOnline ? \"success.main\" : \"error.main\",\n      color: \"white\",\n      opacity: 0.9,\n      py: 0.5,\n      px: 2,\n      borderRadius: 1,\n      mr: 1,\n      fontSize: \"0.75rem\",\n      fontWeight: \"bold\"\n    },\n    children: [isOnline ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n      sx: {\n        fontSize: 16,\n        mr: 0.5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n      sx: {\n        fontSize: 16,\n        mr: 0.5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), `${label} ${isOnline ? \"ONLINE\" : \"OFFLINE\"}`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n  const NavButton = ({\n    to,\n    children\n  }) => /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => {\n      navigate(to);\n      metricsService.recordUiInteraction(\"navigation\", to);\n    },\n    color: \"inherit\",\n    sx: {\n      mx: 1,\n      \"&:hover\": {\n        backgroundColor: \"rgba(255, 255, 255, 0.1)\"\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        minHeight: \"100vh\",\n        borderRadius: 0,\n        transition: \"background-color 0.3s ease\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(NavButton, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo\",\n              children: \"IMDB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(NavButton, {\n              to: \"/\",\n              children: \"ALL MOVIES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n              to: \"/add-movies\",\n              children: \"ADD MOVIES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n              to: \"/add-actor\",\n              children: \"ADD ACTOR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n              to: \"/add-producer\",\n              children: \"ADD PRODUCER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: 1\n            },\n            children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.backend,\n                label: \"BACKEND\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.database,\n                label: \"DB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.actorApi,\n                label: \"ACTOR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.movieApi,\n                label: \"MOVIE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                isOnline: statuses.producerApi,\n                label: \"PRODUCER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                checkAllStatuses();\n                metricsService.recordUiInteraction(\"button\", \"refresh-status\");\n              },\n              color: \"inherit\",\n              disabled: loading,\n              startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 28\n              }, this),\n              size: \"small\",\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setMode(mode === \"light\" ? \"dark\" : \"light\");\n                metricsService.recordUiInteraction(\"button\", \"toggle-theme\");\n              },\n              color: \"inherit\",\n              startIcon: mode === \"dark\" ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 68\n              }, this),\n              size: \"small\",\n              children: mode === \"light\" ? \"DARK\" : \"LIGHT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-movies\",\n            element: /*#__PURE__*/_jsxDEV(AddMovie, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-actor\",\n            element: /*#__PURE__*/_jsxDEV(AddActor, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-producer\",\n            element: /*#__PURE__*/_jsxDEV(AddProducer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"movies/edit/:id\",\n            element: /*#__PURE__*/_jsxDEV(EditMovies, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5FsqnpzqQ+xUjbEhbcd6/acZkPE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","ThemeProvider","AppBar","Button","Paper","Toolbar","createTheme","Box","CircularProgress","Route","Routes","useNavigate","useLocation","Brightness7","Brightness7Icon","Brightness4","Brightness4Icon","CheckCircle","CheckCircleIcon","Cancel","CancelIcon","Refresh","RefreshIcon","apiService","metricsService","API_CONFIG","AddMovie","Movie","AddActor","AddProducer","EditMovies","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","localStorage","getItem","navigate","location","loading","setLoading","statuses","setStatuses","backend","database","actorApi","movieApi","producerApi","theme","palette","primary","main","background","default","paper","startReporting","stopReporting","currentPage","pathname","recordPageView","checkAllStatuses","startTime","performance","now","healthData","backendStatus","databaseStatus","checkHealth","status","console","log","endTime","recordApiCall","error","recordError","actorApiStatus","movieApiStatus","producerApiStatus","actorStartTime","getActors","actorEndTime","message","movieStartTime","getMovies","movieEndTime","producerStartTime","getProducers","producerEndTime","newStatuses","recordUiInteraction","interval","setInterval","clearInterval","setItem","StatusIndicator","isOnline","label","sx","display","alignItems","bgcolor","color","opacity","py","px","borderRadius","mr","fontSize","fontWeight","children","fileName","_jsxFileName","lineNumber","columnNumber","NavButton","to","onClick","mx","backgroundColor","elevation","minHeight","transition","position","className","flexGrow","gap","size","disabled","startIcon","p","path","element","_c","$RefreshReg$"],"sources":["/Users/jayachandran/imdb/imdb-frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport { useState, useEffect, useCallback } from \"react\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport {\n  AppBar,\n  Button,\n  Paper,\n  Toolbar,\n  createTheme,\n  Box,\n  CircularProgress,\n} from \"@mui/material\";\nimport { Route, Routes, useNavigate, useLocation } from \"react-router-dom\";\nimport {\n  Brightness7 as Brightness7Icon,\n  Brightness4 as Brightness4Icon,\n  CheckCircle as CheckCircleIcon,\n  Cancel as CancelIcon,\n  Refresh as RefreshIcon,\n} from \"@mui/icons-material\";\nimport apiService from \"./services/api.service\";\nimport metricsService from \"./services/metrics.service\";\nimport { API_CONFIG } from \"./config/api.config\";\nimport AddMovie from \"./AddMovie\";\nimport Movie from \"./Movie\";\nimport AddActor from \"./AddActor\";\nimport AddProducer from \"./AddProducer\";\nimport EditMovies from \"./EditMovies\";\nimport \"./App.css\";\n\nfunction App() {\n  const [mode, setMode] = useState(() => localStorage.getItem(\"theme\") || \"dark\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  const [statuses, setStatuses] = useState({\n    backend: false,\n    database: false,\n    actorApi: false,\n    movieApi: false,\n    producerApi: false,\n  });\n\n  const theme = createTheme({\n    palette: {\n      mode: mode,\n      primary: {\n        main: mode === \"dark\" ? \"#90caf9\" : \"#1976d2\",\n      },\n      background: {\n        default: mode === \"dark\" ? \"#121212\" : \"#ffffff\",\n        paper: mode === \"dark\" ? \"#1e1e1e\" : \"#ffffff\",\n      },\n    },\n  });\n\n  // Initialize metrics service\n  useEffect(() => {\n    metricsService.startReporting(30000); // Report every 30 seconds\n    \n    return () => {\n      metricsService.stopReporting();\n    };\n  }, []);\n\n  // Track page views\n  useEffect(() => {\n    const currentPage = location.pathname || '/';\n    metricsService.recordPageView(currentPage);\n  }, [location.pathname]);\n\n  const checkAllStatuses = useCallback(async () => {\n    try {\n      setLoading(true);\n      const startTime = performance.now();\n      \n      // Check backend health and database status\n      let healthData;\n      let backendStatus = false;\n      let databaseStatus = false;\n      \n      try {\n        healthData = await apiService.checkHealth();\n        backendStatus = true;\n        \n        // Fixed: Check the correct database status field\n        // Your backend returns database: { status: \"connected\" }, not database: \"connected\"\n        if (healthData.database && healthData.database.status) {\n          databaseStatus = healthData.database.status === \"connected\";\n        } else if (healthData.database === \"connected\") {\n          databaseStatus = true;\n        } else {\n          databaseStatus = false;\n        }\n        \n        console.log(\"Health check succeeded:\", healthData);\n        console.log(\"Database status extracted:\", databaseStatus);\n        \n        // Record successful API call\n        const endTime = performance.now();\n        metricsService.recordApiCall(\"health\", \"success\", endTime - startTime);\n      } catch (error) {\n        console.error(\"Health check failed:\", error);\n        backendStatus = false;\n        databaseStatus = false;\n        \n        // Record failed API call\n        const endTime = performance.now();\n        metricsService.recordApiCall(\"health\", \"error\", endTime - startTime);\n        metricsService.recordError(\"api\", \"Health check failed\");\n      }\n      \n      // If backend is online, check individual APIs with better error handling\n      let actorApiStatus = false;\n      let movieApiStatus = false; \n      let producerApiStatus = false;\n      \n      if (backendStatus) {\n        // Check Actor API\n        try {\n          const actorStartTime = performance.now();\n          await apiService.getActors();\n          actorApiStatus = true;\n          console.log(\"Actor API is working\");\n          \n          const actorEndTime = performance.now();\n          metricsService.recordApiCall(\"actor-check\", \"success\", actorEndTime - actorStartTime);\n        } catch (error) {\n          console.error(\"Actor API check failed:\", error.message);\n          actorApiStatus = false;\n          metricsService.recordError(\"api\", \"Actor API check failed\");\n        }\n        \n        // Check Movie API\n        try {\n          const movieStartTime = performance.now();\n          await apiService.getMovies();\n          movieApiStatus = true;\n          console.log(\"Movie API is working\");\n          \n          const movieEndTime = performance.now();\n          metricsService.recordApiCall(\"movie-check\", \"success\", movieEndTime - movieStartTime);\n        } catch (error) {\n          console.error(\"Movie API check failed:\", error.message);\n          movieApiStatus = false;\n          metricsService.recordError(\"api\", \"Movie API check failed\");\n        }\n        \n        // Check Producer API\n        try {\n          const producerStartTime = performance.now();\n          await apiService.getProducers();\n          producerApiStatus = true;\n          console.log(\"Producer API is working\");\n          \n          const producerEndTime = performance.now();\n          metricsService.recordApiCall(\"producer-check\", \"success\", producerEndTime - producerStartTime);\n        } catch (error) {\n          console.error(\"Producer API check failed:\", error.message);\n          producerApiStatus = false;\n          metricsService.recordError(\"api\", \"Producer API check failed\");\n        }\n      }\n      \n      // Update statuses\n      const newStatuses = {\n        backend: backendStatus,\n        database: databaseStatus,\n        actorApi: actorApiStatus,\n        movieApi: movieApiStatus,\n        producerApi: producerApiStatus,\n      };\n      \n      setStatuses(newStatuses);\n      \n      // Record service status metrics\n      metricsService.recordUiInteraction(\"status-panel\", \"update\");\n      \n      console.log(\"Final API Status Check:\", newStatuses);\n      \n    } catch (error) {\n      console.error(\"Overall status check failed:\", error);\n      setStatuses({\n        backend: false,\n        database: false,\n        actorApi: false,\n        movieApi: false,\n        producerApi: false,\n      });\n      metricsService.recordError(\"status-check\", \"Overall check failed\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    checkAllStatuses();\n    const interval = setInterval(checkAllStatuses, 30000);\n    return () => clearInterval(interval);\n  }, [checkAllStatuses]);\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", mode);\n    // Record theme change\n    metricsService.recordUiInteraction(\"theme\", mode);\n  }, [mode]);\n\n  useEffect(() => {\n    console.log(\"Current API Status:\", statuses);\n  }, [statuses]);\n\n  const StatusIndicator = ({ isOnline, label }) => (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        bgcolor: isOnline ? \"success.main\" : \"error.main\",\n        color: \"white\",\n        opacity: 0.9,\n        py: 0.5,\n        px: 2,\n        borderRadius: 1,\n        mr: 1,\n        fontSize: \"0.75rem\",\n        fontWeight: \"bold\",\n      }}\n    >\n      {isOnline ? (\n        <CheckCircleIcon sx={{ fontSize: 16, mr: 0.5 }} />\n      ) : (\n        <CancelIcon sx={{ fontSize: 16, mr: 0.5 }} />\n      )}\n      {`${label} ${isOnline ? \"ONLINE\" : \"OFFLINE\"}`}\n    </Box>\n  );\n\n  const NavButton = ({ to, children }) => (\n    <Button\n      onClick={() => {\n        navigate(to);\n        metricsService.recordUiInteraction(\"navigation\", to);\n      }}\n      color=\"inherit\"\n      sx={{\n        mx: 1,\n        \"&:hover\": {\n          backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper\n        elevation={0}\n        sx={{\n          minHeight: \"100vh\",\n          borderRadius: 0,\n          transition: \"background-color 0.3s ease\",\n        }}\n      >\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <NavButton to=\"/\">\n              <span className=\"logo\">IMDB</span>\n            </NavButton>\n\n            <Box sx={{ flexGrow: 1, display: \"flex\" }}>\n              <NavButton to=\"/\">ALL MOVIES</NavButton>\n              <NavButton to=\"/add-movies\">ADD MOVIES</NavButton>\n              <NavButton to=\"/add-actor\">ADD ACTOR</NavButton>\n              <NavButton to=\"/add-producer\">ADD PRODUCER</NavButton>\n            </Box>\n\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\n              {loading ? (\n                <CircularProgress size={20} color=\"inherit\" />\n              ) : (\n                <>\n                  <StatusIndicator isOnline={statuses.backend} label=\"BACKEND\" />\n                  <StatusIndicator isOnline={statuses.database} label=\"DB\" />\n                  <StatusIndicator isOnline={statuses.actorApi} label=\"ACTOR\" />\n                  <StatusIndicator isOnline={statuses.movieApi} label=\"MOVIE\" />\n                  <StatusIndicator isOnline={statuses.producerApi} label=\"PRODUCER\" />\n                </>\n              )}\n\n              <Button\n                onClick={() => {\n                  checkAllStatuses();\n                  metricsService.recordUiInteraction(\"button\", \"refresh-status\");\n                }}\n                color=\"inherit\"\n                disabled={loading}\n                startIcon={<RefreshIcon />}\n                size=\"small\"\n              >\n                Refresh\n              </Button>\n\n              <Button\n                onClick={() => {\n                  setMode(mode === \"light\" ? \"dark\" : \"light\");\n                  metricsService.recordUiInteraction(\"button\", \"toggle-theme\");\n                }}\n                color=\"inherit\"\n                startIcon={mode === \"dark\" ? <Brightness7Icon /> : <Brightness4Icon />}\n                size=\"small\"\n              >\n                {mode === \"light\" ? \"DARK\" : \"LIGHT\"}\n              </Button>\n            </Box>\n          </Toolbar>\n        </AppBar>\n\n        <Box sx={{ p: 3 }}>\n          <Routes>\n            <Route path=\"/\" element={<Movie />} />\n            <Route path=\"/add-movies\" element={<AddMovie />} />\n            <Route path=\"/add-actor\" element={<AddActor />} />\n            <Route path=\"/add-producer\" element={<AddProducer />} />\n            <Route path=\"movies/edit/:id\" element={<EditMovies />} />\n          </Routes>\n        </Box>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}