{"ast":null,"code":"var _jsxFileName = \"/Users/jayachandran/new-imdb/imdb-clone-client/src/App.js\",\n  _s = $RefreshSig$();\n// // // // // //App.js\n// // // // // import './App.css';\n// // // // // import { ThemeProvider } from '@emotion/react';\n// // // // // import { AppBar, Button, Paper, Toolbar, createTheme } from '@mui/material';\n// // // // // import { useState } from 'react';\n// // // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // // import AddMovie from './AddMovie';\n// // // // // import Movie from './Movie';\n// // // // // import AddActor from './AddActor';\n// // // // // import AddProducer from './AddProducer';\n// // // // // import EditMovies from './EditMovies';\n\n// // // // // function App() {\n// // // // //   const [mode, setMode] = useState(\"dark\");\n// // // // //   const navigate = useNavigate();\n\n// // // // //   const theme = createTheme({\n// // // // //     palette: {\n// // // // //       mode: mode,\n// // // // //     },\n// // // // //   });\n\n// // // // //   return (\n// // // // //     <ThemeProvider theme={theme}>\n// // // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // // //           <Toolbar>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               <span className='logo'>IMDB</span>\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               All Movies\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/add-movies\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               Add Movies\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/add-actor\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               Add Actor\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/add-producer\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               Add Producer\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               style={{marginLeft : \"auto\"}}\n// // // // //               startIcon = {mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // // //               onClick={() => {\n// // // // //                 setMode(mode === \"light\" ? \"dark\" : \"light\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // // //             </Button>\n// // // // //           </Toolbar>\n// // // // //         </AppBar>\n\n// // // // //         <Routes>\n// // // // //           <Route\n// // // // //            exact\n// // // // //             path=\"/\"\n// // // // //             element={<Movie  />}\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-movies\"\n// // // // //             element={\n// // // // //               <AddMovie  />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-actor\"\n// // // // //             element={\n// // // // //               <AddActor  />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-producer\"\n// // // // //             element={\n// // // // //               <AddProducer />\n// // // // //             }\n// // // // //           />\n\n// // // // //           <Route\n// // // // //             path=\"movies/edit/:id\"\n// // // // //             element={\n// // // // //               <EditMovies  />\n// // // // //             }\n// // // // //           />\n// // // // //         </Routes>\n\n// // // // //       </Paper>\n// // // // //     </ThemeProvider>\n// // // // //   );\n// // // // // }\n\n// // // // // export default App;\n// // // // // App.js\n// // // // import './App.css';\n// // // // import { ThemeProvider } from '@emotion/react';\n// // // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert } from '@mui/material';\n// // // // import { useState, useEffect } from 'react';\n// // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // import AddMovie from './AddMovie';\n// // // // import Movie from './Movie';\n// // // // import AddActor from './AddActor';\n// // // // import AddProducer from './AddProducer';\n// // // // import EditMovies from './EditMovies';\n// // // // import axios from 'axios';\n\n// // // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // // function App() {\n// // // //   const [mode, setMode] = useState(\"dark\");\n// // // //   const navigate = useNavigate();\n// // // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // // //   const [error, setError] = useState(null);\n\n// // // //   const theme = createTheme({\n// // // //     palette: {\n// // // //       mode: mode,\n// // // //     },\n// // // //   });\n\n// // // //   // Check API connectivity\n// // // //   useEffect(() => {\n// // // //     const checkApiStatus = async () => {\n// // // //       try {\n// // // //         const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // // //         if (movieResponse.status === 200) {\n// // // //           setIsApiConnected(true);\n// // // //           setError(null);\n// // // //         }\n// // // //       } catch (err) {\n// // // //         setIsApiConnected(false);\n// // // //         setError(\"Unable to connect to the server. Please try again later.\");\n// // // //         console.error(\"API Connection Error:\", err);\n// // // //       }\n// // // //     };\n\n// // // //     checkApiStatus();\n// // // //     // Check connection every 5 minutes\n// // // //     const intervalId = setInterval(checkApiStatus, 300000);\n\n// // // //     return () => clearInterval(intervalId);\n// // // //   }, []);\n\n// // // //   const handleClose = (event, reason) => {\n// // // //     if (reason === 'clickaway') {\n// // // //       return;\n// // // //     }\n// // // //     setError(null);\n// // // //   };\n\n// // // //   return (\n// // // //     <ThemeProvider theme={theme}>\n// // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // //           <Toolbar>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               <span className='logo'>IMDB</span>\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               All Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-movies\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-actor\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Actor\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-producer\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Producer\n// // // //             </Button>\n// // // //             <Button\n// // // //               style={{marginLeft: \"auto\"}}\n// // // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // //             </Button>\n// // // //           </Toolbar>\n// // // //         </AppBar>\n\n// // // //         {/* API Status Indicator */}\n// // // //         <Snackbar open={!isApiConnected} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n// // // //           <Alert severity=\"warning\">\n// // // //             Backend server is not connected. Some features may be unavailable.\n// // // //           </Alert>\n// // // //         </Snackbar>\n\n// // // //         {/* Error Message */}\n// // // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // // //           <Alert onClose={handleClose} severity=\"error\">\n// // // //             {error}\n// // // //           </Alert>\n// // // //         </Snackbar>\n\n// // // //         <Routes>\n// // // //           <Route\n// // // //             exact\n// // // //             path=\"/\"\n// // // //             element={<Movie setError={setError} />}\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-movies\"\n// // // //             element={\n// // // //               <AddMovie setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-actor\"\n// // // //             element={\n// // // //               <AddActor setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-producer\"\n// // // //             element={\n// // // //               <AddProducer setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"movies/edit/:id\"\n// // // //             element={\n// // // //               <EditMovies setError={setError} />\n// // // //             }\n// // // //           />\n// // // //         </Routes>\n// // // //       </Paper>\n// // // //     </ThemeProvider>\n// // // //   );\n// // // // }\n\n// // // // export default App;\n// // // // App.js\n// // // import './App.css';\n// // // import { ThemeProvider } from '@emotion/react';\n// // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress } from '@mui/material';\n// // // import { useState, useEffect } from 'react';\n// // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // // import CancelIcon from '@mui/icons-material/Cancel';\n// // // import AddMovie from './AddMovie';\n// // // import Movie from './Movie';\n// // // import AddActor from './AddActor';\n// // // import AddProducer from './AddProducer';\n// // // import EditMovies from './EditMovies';\n// // // import axios from 'axios';\n\n// // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // function App() {\n// // //   const [mode, setMode] = useState(\"dark\");\n// // //   const navigate = useNavigate();\n// // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // //   const [isChecking, setIsChecking] = useState(true);\n// // //   const [error, setError] = useState(null);\n\n// // //   const theme = createTheme({\n// // //     palette: {\n// // //       mode: mode,\n// // //     },\n// // //   });\n\n// // //   // Check API connectivity\n// // //   const checkApiStatus = async () => {\n// // //     setIsChecking(true);\n// // //     try {\n// // //       const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // //       if (movieResponse.status === 200) {\n// // //         setIsApiConnected(true);\n// // //         setError(null);\n// // //       }\n// // //     } catch (err) {\n// // //       setIsApiConnected(false);\n// // //       setError(\"Unable to connect to the server. Please try again later.\");\n// // //       console.error(\"API Connection Error:\", err);\n// // //     } finally {\n// // //       setIsChecking(false);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     checkApiStatus();\n// // //     const intervalId = setInterval(checkApiStatus, 300000);\n// // //     return () => clearInterval(intervalId);\n// // //   }, []);\n\n// // //   const handleClose = (event, reason) => {\n// // //     if (reason === 'clickaway') {\n// // //       return;\n// // //     }\n// // //     setError(null);\n// // //   };\n\n// // //   return (\n// // //     <ThemeProvider theme={theme}>\n// // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // //           <Toolbar>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               <span className='logo'>IMDB</span>\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               All Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-movies\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-actor\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Actor\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-producer\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Producer\n// // //             </Button>\n\n// // //             {/* Connection Status Button */}\n// // //             <Button\n// // //               onClick={checkApiStatus}\n// // //               style={{\n// // //                 marginLeft: 'auto',\n// // //                 marginRight: '10px',\n// // //                 backgroundColor: isApiConnected ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// // //                 color: isApiConnected ? '#2e7d32' : '#d32f2f'\n// // //               }}\n// // //               startIcon={\n// // //                 isChecking ? (\n// // //                   <CircularProgress size={20} color={isApiConnected ? \"success\" : \"error\"} />\n// // //                 ) : isApiConnected ? (\n// // //                   <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// // //                 ) : (\n// // //                   <CancelIcon style={{ color: '#d32f2f' }} />\n// // //                 )\n// // //               }\n// // //             >\n// // //               {isChecking ? 'Checking...' : isApiConnected ? 'Connected' : 'Disconnected'}\n// // //             </Button>\n\n// // //             <Button\n// // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // //             </Button>\n// // //           </Toolbar>\n// // //         </AppBar>\n\n// // //         {/* Error Message */}\n// // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // //           <Alert onClose={handleClose} severity=\"error\">\n// // //             {error}\n// // //           </Alert>\n// // //         </Snackbar>\n\n// // //         <Routes>\n// // //           <Route\n// // //             exact\n// // //             path=\"/\"\n// // //             element={<Movie setError={setError} />}\n// // //           />\n// // //           <Route\n// // //             path=\"/add-movies\"\n// // //             element={\n// // //               <AddMovie setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-actor\"\n// // //             element={\n// // //               <AddActor setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-producer\"\n// // //             element={\n// // //               <AddProducer setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"movies/edit/:id\"\n// // //             element={\n// // //               <EditMovies setError={setError} />\n// // //             }\n// // //           />\n// // //         </Routes>\n// // //       </Paper>\n// // //     </ThemeProvider>\n// // //   );\n// // // }\n\n// // // export default App;\n// // // App.js\n// // import './App.css';\n// // import { ThemeProvider } from '@emotion/react';\n// // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// // import { useState, useEffect } from 'react';\n// // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // import CancelIcon from '@mui/icons-material/Cancel';\n// // import StorageIcon from '@mui/icons-material/Storage';\n// // import CloudIcon from '@mui/icons-material/Cloud';\n// // import AddMovie from './AddMovie';\n// // import Movie from './Movie';\n// // import AddActor from './AddActor';\n// // import AddProducer from './AddProducer';\n// // import EditMovies from './EditMovies';\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // function App() {\n// //   const [mode, setMode] = useState(\"dark\");\n// //   const navigate = useNavigate();\n// //   const [healthStatus, setHealthStatus] = useState({\n// //     api: { status: false, checking: true },\n// //     database: { status: false, checking: true }\n// //   });\n// //   const [error, setError] = useState(null);\n\n// //   const theme = createTheme({\n// //     palette: {\n// //       mode: mode,\n// //     },\n// //   });\n\n// //   // Check API and Database health\n// //   const checkHealthStatus = async () => {\n// //     setHealthStatus(prev => ({\n// //       api: { ...prev.api, checking: true },\n// //       database: { ...prev.database, checking: true }\n// //     }));\n\n// //     try {\n// //       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n// //       setHealthStatus({\n// //         api: { status: true, checking: false },\n// //         database: { \n// //           status: response.data.database.status === \"connected\", \n// //           checking: false \n// //         }\n// //       });\n// //       setError(null);\n// //     } catch (err) {\n// //       setHealthStatus({\n// //         api: { status: false, checking: false },\n// //         database: { status: false, checking: false }\n// //       });\n// //       setError(\"System health check failed. Please try again later.\");\n// //       console.error(\"Health Check Error:\", err);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     checkHealthStatus();\n// //     const intervalId = setInterval(checkHealthStatus, 300000); // Check every 5 minutes\n// //     return () => clearInterval(intervalId);\n// //   }, []);\n\n// //   const handleClose = (event, reason) => {\n// //     if (reason === 'clickaway') return;\n// //     setError(null);\n// //   };\n\n// //   // Health Status Indicator Component\n// //   const HealthIndicator = ({ type, status, checking }) => {\n// //     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n// //     const label = type === 'api' ? 'API' : 'Database';\n\n// //     return (\n// //       <Tooltip title={`${label} Status`}>\n// //         <Button\n// //           onClick={checkHealthStatus}\n// //           style={{\n// //             marginLeft: '10px',\n// //             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// //             color: status ? '#2e7d32' : '#d32f2f',\n// //             minWidth: '120px',\n// //           }}\n// //           startIcon={\n// //             checking ? (\n// //               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n// //             ) : status ? (\n// //               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// //             ) : (\n// //               <CancelIcon style={{ color: '#d32f2f' }} />\n// //             )\n// //           }\n// //         >\n// //           {checking ? 'Checking...' : `${label} ${status ? 'Healthy' : 'Down'}`}\n// //         </Button>\n// //       </Tooltip>\n// //     );\n// //   };\n\n// //   return (\n// //     <ThemeProvider theme={theme}>\n// //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// //         <AppBar className=\"nav-bar\" position=\"static\">\n// //           <Toolbar>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               <span className='logo'>IMDB</span>\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               All Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-movies\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-actor\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Actor\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-producer\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Producer\n// //             </Button>\n\n// //             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n// //               <HealthIndicator \n// //                 type=\"api\" \n// //                 status={healthStatus.api.status} \n// //                 checking={healthStatus.api.checking} \n// //               />\n// //               <HealthIndicator \n// //                 type=\"database\" \n// //                 status={healthStatus.database.status} \n// //                 checking={healthStatus.database.checking} \n// //               />\n\n// //               <Button\n// //                 sx={{ ml: 2 }}\n// //                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// //                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// //                 color=\"inherit\"\n// //               >\n// //                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n// //               </Button>\n// //             </Box>\n// //           </Toolbar>\n// //         </AppBar>\n\n// //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// //           <Alert onClose={handleClose} severity=\"error\">\n// //             {error}\n// //           </Alert>\n// //         </Snackbar>\n\n// //         <Routes>\n// //           <Route\n// //             exact\n// //             path=\"/\"\n// //             element={<Movie setError={setError} />}\n// //           />\n// //           <Route\n// //             path=\"/add-movies\"\n// //             element={\n// //               <AddMovie setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-actor\"\n// //             element={\n// //               <AddActor setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-producer\"\n// //             element={\n// //               <AddProducer setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"movies/edit/:id\"\n// //             element={\n// //               <EditMovies setError={setError} />\n// //             }\n// //           />\n// //         </Routes>\n// //       </Paper>\n// //     </ThemeProvider>\n// //   );\n// // }\n\n// // export default App;\n// // App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import StorageIcon from '@mui/icons-material/Storage';\n// import CloudIcon from '@mui/icons-material/Cloud';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n// import axios from 'axios';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [healthStatus, setHealthStatus] = useState({\n//     api: { status: false, checking: true },\n//     database: { status: false, checking: true }\n//   });\n//   const [error, setError] = useState(null);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   // Check API and Database health\n//   const checkHealthStatus = async () => {\n//     setHealthStatus(prev => ({\n//       api: { ...prev.api, checking: true },\n//       database: { ...prev.database, checking: true }\n//     }));\n\n//     try {\n//       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n\n//       // Check if we got a response at all\n//       const apiStatus = response && response.status >= 200 && response.status < 500;\n\n//       // Safely check database status from response\n//       const dbStatus = response?.data?.database?.status === \"connected\";\n\n//       setHealthStatus({\n//         api: { status: apiStatus, checking: false },\n//         database: { status: dbStatus, checking: false }\n//       });\n\n//       setError(null);\n//     } catch (err) {\n//       console.error(\"Health Check Error:\", err);\n\n//       setHealthStatus({\n//         api: { status: false, checking: false },\n//         database: { status: false, checking: false }\n//       });\n\n//       setError(\"Unable to connect to the server. Please try again later.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkHealthStatus();\n//     const intervalId = setInterval(checkHealthStatus, 30000); // Check every 30 seconds\n//     return () => clearInterval(intervalId);\n//   }, []);\n\n//   const handleClose = (event, reason) => {\n//     if (reason === 'clickaway') return;\n//     setError(null);\n//   };\n\n//   // Health Status Indicator Component\n//   const HealthIndicator = ({ type, status, checking }) => {\n//     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n//     const label = type === 'api' ? 'API' : 'Database';\n\n//     return (\n//       <Tooltip title={`${label} Status - Click to refresh`}>\n//         <Button\n//           onClick={checkHealthStatus}\n//           style={{\n//             marginLeft: '10px',\n//             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n//             color: status ? '#2e7d32' : '#d32f2f',\n//             minWidth: '120px',\n//           }}\n//           startIcon={\n//             checking ? (\n//               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n//             ) : status ? (\n//               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n//             ) : (\n//               <CancelIcon style={{ color: '#d32f2f' }} />\n//             )\n//           }\n//         >\n//           {checking ? 'Checking...' : `${label} ${status ? 'Online' : 'Offline'}`}\n//         </Button>\n//       </Tooltip>\n//     );\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               All Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Actor\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Producer\n//             </Button>\n\n//             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n//               <HealthIndicator \n//                 type=\"api\" \n//                 status={healthStatus.api.status} \n//                 checking={healthStatus.api.checking} \n//               />\n//               <HealthIndicator \n//                 type=\"database\" \n//                 status={healthStatus.database.status} \n//                 checking={healthStatus.database.checking} \n//               />\n\n//               <Button\n//                 sx={{ ml: 2 }}\n//                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//                 color=\"inherit\"\n//               >\n//                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n//               </Button>\n//             </Box>\n//           </Toolbar>\n//         </AppBar>\n\n//         <Snackbar \n//           open={!!error} \n//           autoHideDuration={6000} \n//           onClose={handleClose}\n//           anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//         >\n//           <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n//             {error}\n//           </Alert>\n//         </Snackbar>\n\n//         <Routes>\n//           <Route\n//             exact\n//             path=\"/\"\n//             element={<Movie setError={setError} />}\n//           />\n//           <Route\n//             path=\"/add-movies\"\n//             element={\n//               <AddMovie setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-actor\"\n//             element={\n//               <AddActor setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-producer\"\n//             element={\n//               <AddProducer setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"movies/edit/:id\"\n//             element={\n//               <EditMovies setError={setError} />\n//             }\n//           />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n// App.js\nimport './App.css';\nimport { ThemeProvider } from '@emotion/react';\nimport { AppBar, Button, Paper, Toolbar, createTheme, Box } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport AddMovie from './AddMovie';\nimport Movie from './Movie';\nimport AddActor from './AddActor';\nimport AddProducer from './AddProducer';\nimport EditMovies from './EditMovies';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"dark\");\n  const navigate = useNavigate();\n  const [apiStatus, setApiStatus] = useState(false);\n  const [dbStatus, setDbStatus] = useState(false);\n  const theme = createTheme({\n    palette: {\n      mode: mode\n    }\n  });\n\n  // Check API and Database health\n  const checkHealth = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/health`);\n      setApiStatus(true);\n      setDbStatus(response.data.database === \"connected\");\n    } catch (err) {\n      setApiStatus(false);\n      setDbStatus(false);\n      console.error(\"Health check failed:\", err);\n    }\n  };\n  useEffect(() => {\n    checkHealth();\n    const interval = setInterval(checkHealth, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Status indicator component\n  const StatusIndicator = ({\n    isOnline,\n    label\n  }) => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      bgcolor: isOnline ? 'rgba(46, 125, 50, 0.1)' : 'rgba(211, 47, 47, 0.1)',\n      color: isOnline ? '#2e7d32' : '#d32f2f',\n      py: 0.5,\n      px: 2,\n      borderRadius: 1,\n      mr: 1\n    },\n    children: [isOnline ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n      sx: {\n        fontSize: 20,\n        mr: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n      sx: {\n        fontSize: 20,\n        mr: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 9\n    }, this), `${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 947,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: \"paper\",\n      elevation: 5,\n      style: {\n        borderRadius: \"0px\",\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        className: \"nav-bar\",\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/\"),\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo\",\n              children: \"IMDB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/\"),\n            color: \"inherit\",\n            children: \"ALL MOVIES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/add-movies\"),\n            color: \"inherit\",\n            children: \"ADD MOVIES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/add-actor\"),\n            color: \"inherit\",\n            children: \"ADD ACTOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => navigate(\"/add-producer\"),\n            color: \"inherit\",\n            children: \"ADD PRODUCER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              marginLeft: 'auto',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(StatusIndicator, {\n              isOnline: apiStatus,\n              label: \"API\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n              isOnline: dbStatus,\n              label: \"DATABASE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setMode(mode === \"light\" ? \"dark\" : \"light\"),\n              color: \"inherit\",\n              startIcon: mode === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 68\n              }, this),\n              children: [mode === \"light\" ? \"DARK\" : \"LIGHT\", \" MODE\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1008,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-movies\",\n          element: /*#__PURE__*/_jsxDEV(AddMovie, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-actor\",\n          element: /*#__PURE__*/_jsxDEV(AddActor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-producer\",\n          element: /*#__PURE__*/_jsxDEV(AddProducer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"movies/edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(EditMovies, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 969,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"285daVjx6com+o0gcZvjWOM49a8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ThemeProvider","AppBar","Button","Paper","Toolbar","createTheme","Box","useState","useEffect","Route","Routes","useNavigate","Brightness7Icon","Brightness4Icon","CheckCircleIcon","CancelIcon","AddMovie","Movie","AddActor","AddProducer","EditMovies","axios","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","App","_s","mode","setMode","navigate","apiStatus","setApiStatus","dbStatus","setDbStatus","theme","palette","checkHealth","response","get","data","database","err","console","error","interval","setInterval","clearInterval","StatusIndicator","isOnline","label","sx","display","alignItems","bgcolor","color","py","px","borderRadius","mr","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","className","elevation","style","minHeight","position","onClick","marginLeft","startIcon","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/jayachandran/new-imdb/imdb-clone-client/src/App.js"],"sourcesContent":["// // // // // //App.js\n// // // // // import './App.css';\n// // // // // import { ThemeProvider } from '@emotion/react';\n// // // // // import { AppBar, Button, Paper, Toolbar, createTheme } from '@mui/material';\n// // // // // import { useState } from 'react';\n// // // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // // import AddMovie from './AddMovie';\n// // // // // import Movie from './Movie';\n// // // // // import AddActor from './AddActor';\n// // // // // import AddProducer from './AddProducer';\n// // // // // import EditMovies from './EditMovies';\n\n// // // // // function App() {\n// // // // //   const [mode, setMode] = useState(\"dark\");\n// // // // //   const navigate = useNavigate();\n\n// // // // //   const theme = createTheme({\n// // // // //     palette: {\n// // // // //       mode: mode,\n// // // // //     },\n// // // // //   });\n\n// // // // //   return (\n// // // // //     <ThemeProvider theme={theme}>\n// // // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // // //           <Toolbar>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               <span className='logo'>IMDB</span>\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               All Movies\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/add-movies\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               Add Movies\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/add-actor\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               Add Actor\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               onClick={() => {\n// // // // //                 navigate(\"/add-producer\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               Add Producer\n// // // // //             </Button>\n// // // // //             <Button\n// // // // //               style={{marginLeft : \"auto\"}}\n// // // // //               startIcon = {mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // // //               onClick={() => {\n// // // // //                 setMode(mode === \"light\" ? \"dark\" : \"light\");\n// // // // //               }}\n// // // // //               color=\"inherit\"\n// // // // //             >\n// // // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // // //             </Button>\n// // // // //           </Toolbar>\n// // // // //         </AppBar>\n\n// // // // //         <Routes>\n// // // // //           <Route\n// // // // //            exact\n// // // // //             path=\"/\"\n// // // // //             element={<Movie  />}\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-movies\"\n// // // // //             element={\n// // // // //               <AddMovie  />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-actor\"\n// // // // //             element={\n// // // // //               <AddActor  />\n// // // // //             }\n// // // // //           />\n// // // // //           <Route\n// // // // //             path=\"/add-producer\"\n// // // // //             element={\n// // // // //               <AddProducer />\n// // // // //             }\n// // // // //           />\n          \n// // // // //           <Route\n// // // // //             path=\"movies/edit/:id\"\n// // // // //             element={\n// // // // //               <EditMovies  />\n// // // // //             }\n// // // // //           />\n// // // // //         </Routes>\n\n// // // // //       </Paper>\n// // // // //     </ThemeProvider>\n// // // // //   );\n// // // // // }\n\n\n\n// // // // // export default App;\n// // // // // App.js\n// // // // import './App.css';\n// // // // import { ThemeProvider } from '@emotion/react';\n// // // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert } from '@mui/material';\n// // // // import { useState, useEffect } from 'react';\n// // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // import AddMovie from './AddMovie';\n// // // // import Movie from './Movie';\n// // // // import AddActor from './AddActor';\n// // // // import AddProducer from './AddProducer';\n// // // // import EditMovies from './EditMovies';\n// // // // import axios from 'axios';\n\n// // // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // // function App() {\n// // // //   const [mode, setMode] = useState(\"dark\");\n// // // //   const navigate = useNavigate();\n// // // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // // //   const [error, setError] = useState(null);\n\n// // // //   const theme = createTheme({\n// // // //     palette: {\n// // // //       mode: mode,\n// // // //     },\n// // // //   });\n\n// // // //   // Check API connectivity\n// // // //   useEffect(() => {\n// // // //     const checkApiStatus = async () => {\n// // // //       try {\n// // // //         const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // // //         if (movieResponse.status === 200) {\n// // // //           setIsApiConnected(true);\n// // // //           setError(null);\n// // // //         }\n// // // //       } catch (err) {\n// // // //         setIsApiConnected(false);\n// // // //         setError(\"Unable to connect to the server. Please try again later.\");\n// // // //         console.error(\"API Connection Error:\", err);\n// // // //       }\n// // // //     };\n\n// // // //     checkApiStatus();\n// // // //     // Check connection every 5 minutes\n// // // //     const intervalId = setInterval(checkApiStatus, 300000);\n\n// // // //     return () => clearInterval(intervalId);\n// // // //   }, []);\n\n// // // //   const handleClose = (event, reason) => {\n// // // //     if (reason === 'clickaway') {\n// // // //       return;\n// // // //     }\n// // // //     setError(null);\n// // // //   };\n\n// // // //   return (\n// // // //     <ThemeProvider theme={theme}>\n// // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // //           <Toolbar>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               <span className='logo'>IMDB</span>\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               All Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-movies\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-actor\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Actor\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => navigate(\"/add-producer\")}\n// // // //               color=\"inherit\"\n// // // //               disabled={!isApiConnected}\n// // // //             >\n// // // //               Add Producer\n// // // //             </Button>\n// // // //             <Button\n// // // //               style={{marginLeft: \"auto\"}}\n// // // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // //             </Button>\n// // // //           </Toolbar>\n// // // //         </AppBar>\n\n// // // //         {/* API Status Indicator */}\n// // // //         <Snackbar open={!isApiConnected} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n// // // //           <Alert severity=\"warning\">\n// // // //             Backend server is not connected. Some features may be unavailable.\n// // // //           </Alert>\n// // // //         </Snackbar>\n\n// // // //         {/* Error Message */}\n// // // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // // //           <Alert onClose={handleClose} severity=\"error\">\n// // // //             {error}\n// // // //           </Alert>\n// // // //         </Snackbar>\n\n// // // //         <Routes>\n// // // //           <Route\n// // // //             exact\n// // // //             path=\"/\"\n// // // //             element={<Movie setError={setError} />}\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-movies\"\n// // // //             element={\n// // // //               <AddMovie setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-actor\"\n// // // //             element={\n// // // //               <AddActor setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-producer\"\n// // // //             element={\n// // // //               <AddProducer setError={setError} />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"movies/edit/:id\"\n// // // //             element={\n// // // //               <EditMovies setError={setError} />\n// // // //             }\n// // // //           />\n// // // //         </Routes>\n// // // //       </Paper>\n// // // //     </ThemeProvider>\n// // // //   );\n// // // // }\n\n// // // // export default App;\n// // // // App.js\n// // // import './App.css';\n// // // import { ThemeProvider } from '@emotion/react';\n// // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress } from '@mui/material';\n// // // import { useState, useEffect } from 'react';\n// // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // // import CancelIcon from '@mui/icons-material/Cancel';\n// // // import AddMovie from './AddMovie';\n// // // import Movie from './Movie';\n// // // import AddActor from './AddActor';\n// // // import AddProducer from './AddProducer';\n// // // import EditMovies from './EditMovies';\n// // // import axios from 'axios';\n\n// // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // function App() {\n// // //   const [mode, setMode] = useState(\"dark\");\n// // //   const navigate = useNavigate();\n// // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // //   const [isChecking, setIsChecking] = useState(true);\n// // //   const [error, setError] = useState(null);\n\n// // //   const theme = createTheme({\n// // //     palette: {\n// // //       mode: mode,\n// // //     },\n// // //   });\n\n// // //   // Check API connectivity\n// // //   const checkApiStatus = async () => {\n// // //     setIsChecking(true);\n// // //     try {\n// // //       const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // //       if (movieResponse.status === 200) {\n// // //         setIsApiConnected(true);\n// // //         setError(null);\n// // //       }\n// // //     } catch (err) {\n// // //       setIsApiConnected(false);\n// // //       setError(\"Unable to connect to the server. Please try again later.\");\n// // //       console.error(\"API Connection Error:\", err);\n// // //     } finally {\n// // //       setIsChecking(false);\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     checkApiStatus();\n// // //     const intervalId = setInterval(checkApiStatus, 300000);\n// // //     return () => clearInterval(intervalId);\n// // //   }, []);\n\n// // //   const handleClose = (event, reason) => {\n// // //     if (reason === 'clickaway') {\n// // //       return;\n// // //     }\n// // //     setError(null);\n// // //   };\n\n// // //   return (\n// // //     <ThemeProvider theme={theme}>\n// // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // //           <Toolbar>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               <span className='logo'>IMDB</span>\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               All Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-movies\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-actor\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Actor\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-producer\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Producer\n// // //             </Button>\n\n// // //             {/* Connection Status Button */}\n// // //             <Button\n// // //               onClick={checkApiStatus}\n// // //               style={{\n// // //                 marginLeft: 'auto',\n// // //                 marginRight: '10px',\n// // //                 backgroundColor: isApiConnected ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// // //                 color: isApiConnected ? '#2e7d32' : '#d32f2f'\n// // //               }}\n// // //               startIcon={\n// // //                 isChecking ? (\n// // //                   <CircularProgress size={20} color={isApiConnected ? \"success\" : \"error\"} />\n// // //                 ) : isApiConnected ? (\n// // //                   <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// // //                 ) : (\n// // //                   <CancelIcon style={{ color: '#d32f2f' }} />\n// // //                 )\n// // //               }\n// // //             >\n// // //               {isChecking ? 'Checking...' : isApiConnected ? 'Connected' : 'Disconnected'}\n// // //             </Button>\n\n// // //             <Button\n// // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // //             </Button>\n// // //           </Toolbar>\n// // //         </AppBar>\n\n// // //         {/* Error Message */}\n// // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // //           <Alert onClose={handleClose} severity=\"error\">\n// // //             {error}\n// // //           </Alert>\n// // //         </Snackbar>\n\n// // //         <Routes>\n// // //           <Route\n// // //             exact\n// // //             path=\"/\"\n// // //             element={<Movie setError={setError} />}\n// // //           />\n// // //           <Route\n// // //             path=\"/add-movies\"\n// // //             element={\n// // //               <AddMovie setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-actor\"\n// // //             element={\n// // //               <AddActor setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-producer\"\n// // //             element={\n// // //               <AddProducer setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"movies/edit/:id\"\n// // //             element={\n// // //               <EditMovies setError={setError} />\n// // //             }\n// // //           />\n// // //         </Routes>\n// // //       </Paper>\n// // //     </ThemeProvider>\n// // //   );\n// // // }\n\n// // // export default App;\n// // // App.js\n// // import './App.css';\n// // import { ThemeProvider } from '@emotion/react';\n// // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// // import { useState, useEffect } from 'react';\n// // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // import CancelIcon from '@mui/icons-material/Cancel';\n// // import StorageIcon from '@mui/icons-material/Storage';\n// // import CloudIcon from '@mui/icons-material/Cloud';\n// // import AddMovie from './AddMovie';\n// // import Movie from './Movie';\n// // import AddActor from './AddActor';\n// // import AddProducer from './AddProducer';\n// // import EditMovies from './EditMovies';\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // function App() {\n// //   const [mode, setMode] = useState(\"dark\");\n// //   const navigate = useNavigate();\n// //   const [healthStatus, setHealthStatus] = useState({\n// //     api: { status: false, checking: true },\n// //     database: { status: false, checking: true }\n// //   });\n// //   const [error, setError] = useState(null);\n\n// //   const theme = createTheme({\n// //     palette: {\n// //       mode: mode,\n// //     },\n// //   });\n\n// //   // Check API and Database health\n// //   const checkHealthStatus = async () => {\n// //     setHealthStatus(prev => ({\n// //       api: { ...prev.api, checking: true },\n// //       database: { ...prev.database, checking: true }\n// //     }));\n\n// //     try {\n// //       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n// //       setHealthStatus({\n// //         api: { status: true, checking: false },\n// //         database: { \n// //           status: response.data.database.status === \"connected\", \n// //           checking: false \n// //         }\n// //       });\n// //       setError(null);\n// //     } catch (err) {\n// //       setHealthStatus({\n// //         api: { status: false, checking: false },\n// //         database: { status: false, checking: false }\n// //       });\n// //       setError(\"System health check failed. Please try again later.\");\n// //       console.error(\"Health Check Error:\", err);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     checkHealthStatus();\n// //     const intervalId = setInterval(checkHealthStatus, 300000); // Check every 5 minutes\n// //     return () => clearInterval(intervalId);\n// //   }, []);\n\n// //   const handleClose = (event, reason) => {\n// //     if (reason === 'clickaway') return;\n// //     setError(null);\n// //   };\n\n// //   // Health Status Indicator Component\n// //   const HealthIndicator = ({ type, status, checking }) => {\n// //     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n// //     const label = type === 'api' ? 'API' : 'Database';\n    \n// //     return (\n// //       <Tooltip title={`${label} Status`}>\n// //         <Button\n// //           onClick={checkHealthStatus}\n// //           style={{\n// //             marginLeft: '10px',\n// //             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// //             color: status ? '#2e7d32' : '#d32f2f',\n// //             minWidth: '120px',\n// //           }}\n// //           startIcon={\n// //             checking ? (\n// //               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n// //             ) : status ? (\n// //               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// //             ) : (\n// //               <CancelIcon style={{ color: '#d32f2f' }} />\n// //             )\n// //           }\n// //         >\n// //           {checking ? 'Checking...' : `${label} ${status ? 'Healthy' : 'Down'}`}\n// //         </Button>\n// //       </Tooltip>\n// //     );\n// //   };\n\n// //   return (\n// //     <ThemeProvider theme={theme}>\n// //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// //         <AppBar className=\"nav-bar\" position=\"static\">\n// //           <Toolbar>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               <span className='logo'>IMDB</span>\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               All Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-movies\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-actor\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Actor\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-producer\")}\n// //               color=\"inherit\"\n// //               disabled={!healthStatus.api.status || !healthStatus.database.status}\n// //             >\n// //               Add Producer\n// //             </Button>\n\n// //             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n// //               <HealthIndicator \n// //                 type=\"api\" \n// //                 status={healthStatus.api.status} \n// //                 checking={healthStatus.api.checking} \n// //               />\n// //               <HealthIndicator \n// //                 type=\"database\" \n// //                 status={healthStatus.database.status} \n// //                 checking={healthStatus.database.checking} \n// //               />\n              \n// //               <Button\n// //                 sx={{ ml: 2 }}\n// //                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// //                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// //                 color=\"inherit\"\n// //               >\n// //                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n// //               </Button>\n// //             </Box>\n// //           </Toolbar>\n// //         </AppBar>\n\n// //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// //           <Alert onClose={handleClose} severity=\"error\">\n// //             {error}\n// //           </Alert>\n// //         </Snackbar>\n\n// //         <Routes>\n// //           <Route\n// //             exact\n// //             path=\"/\"\n// //             element={<Movie setError={setError} />}\n// //           />\n// //           <Route\n// //             path=\"/add-movies\"\n// //             element={\n// //               <AddMovie setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-actor\"\n// //             element={\n// //               <AddActor setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-producer\"\n// //             element={\n// //               <AddProducer setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"movies/edit/:id\"\n// //             element={\n// //               <EditMovies setError={setError} />\n// //             }\n// //           />\n// //         </Routes>\n// //       </Paper>\n// //     </ThemeProvider>\n// //   );\n// // }\n\n// // export default App;\n// // App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import StorageIcon from '@mui/icons-material/Storage';\n// import CloudIcon from '@mui/icons-material/Cloud';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n// import axios from 'axios';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [healthStatus, setHealthStatus] = useState({\n//     api: { status: false, checking: true },\n//     database: { status: false, checking: true }\n//   });\n//   const [error, setError] = useState(null);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   // Check API and Database health\n//   const checkHealthStatus = async () => {\n//     setHealthStatus(prev => ({\n//       api: { ...prev.api, checking: true },\n//       database: { ...prev.database, checking: true }\n//     }));\n\n//     try {\n//       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n      \n//       // Check if we got a response at all\n//       const apiStatus = response && response.status >= 200 && response.status < 500;\n      \n//       // Safely check database status from response\n//       const dbStatus = response?.data?.database?.status === \"connected\";\n      \n//       setHealthStatus({\n//         api: { status: apiStatus, checking: false },\n//         database: { status: dbStatus, checking: false }\n//       });\n      \n//       setError(null);\n//     } catch (err) {\n//       console.error(\"Health Check Error:\", err);\n      \n//       setHealthStatus({\n//         api: { status: false, checking: false },\n//         database: { status: false, checking: false }\n//       });\n      \n//       setError(\"Unable to connect to the server. Please try again later.\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkHealthStatus();\n//     const intervalId = setInterval(checkHealthStatus, 30000); // Check every 30 seconds\n//     return () => clearInterval(intervalId);\n//   }, []);\n\n//   const handleClose = (event, reason) => {\n//     if (reason === 'clickaway') return;\n//     setError(null);\n//   };\n\n//   // Health Status Indicator Component\n//   const HealthIndicator = ({ type, status, checking }) => {\n//     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n//     const label = type === 'api' ? 'API' : 'Database';\n    \n//     return (\n//       <Tooltip title={`${label} Status - Click to refresh`}>\n//         <Button\n//           onClick={checkHealthStatus}\n//           style={{\n//             marginLeft: '10px',\n//             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n//             color: status ? '#2e7d32' : '#d32f2f',\n//             minWidth: '120px',\n//           }}\n//           startIcon={\n//             checking ? (\n//               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n//             ) : status ? (\n//               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n//             ) : (\n//               <CancelIcon style={{ color: '#d32f2f' }} />\n//             )\n//           }\n//         >\n//           {checking ? 'Checking...' : `${label} ${status ? 'Online' : 'Offline'}`}\n//         </Button>\n//       </Tooltip>\n//     );\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               All Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Actor\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Producer\n//             </Button>\n\n//             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n//               <HealthIndicator \n//                 type=\"api\" \n//                 status={healthStatus.api.status} \n//                 checking={healthStatus.api.checking} \n//               />\n//               <HealthIndicator \n//                 type=\"database\" \n//                 status={healthStatus.database.status} \n//                 checking={healthStatus.database.checking} \n//               />\n              \n//               <Button\n//                 sx={{ ml: 2 }}\n//                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//                 color=\"inherit\"\n//               >\n//                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n//               </Button>\n//             </Box>\n//           </Toolbar>\n//         </AppBar>\n\n//         <Snackbar \n//           open={!!error} \n//           autoHideDuration={6000} \n//           onClose={handleClose}\n//           anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//         >\n//           <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n//             {error}\n//           </Alert>\n//         </Snackbar>\n\n//         <Routes>\n//           <Route\n//             exact\n//             path=\"/\"\n//             element={<Movie setError={setError} />}\n//           />\n//           <Route\n//             path=\"/add-movies\"\n//             element={\n//               <AddMovie setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-actor\"\n//             element={\n//               <AddActor setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-producer\"\n//             element={\n//               <AddProducer setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"movies/edit/:id\"\n//             element={\n//               <EditMovies setError={setError} />\n//             }\n//           />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n// App.js\nimport './App.css';\nimport { ThemeProvider } from '@emotion/react';\nimport { AppBar, Button, Paper, Toolbar, createTheme, Box } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport AddMovie from './AddMovie';\nimport Movie from './Movie';\nimport AddActor from './AddActor';\nimport AddProducer from './AddProducer';\nimport EditMovies from './EditMovies';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nfunction App() {\n  const [mode, setMode] = useState(\"dark\");\n  const navigate = useNavigate();\n  const [apiStatus, setApiStatus] = useState(false);\n  const [dbStatus, setDbStatus] = useState(false);\n\n  const theme = createTheme({\n    palette: {\n      mode: mode,\n    },\n  });\n\n  // Check API and Database health\n  const checkHealth = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/health`);\n      setApiStatus(true);\n      setDbStatus(response.data.database === \"connected\");\n    } catch (err) {\n      setApiStatus(false);\n      setDbStatus(false);\n      console.error(\"Health check failed:\", err);\n    }\n  };\n\n  useEffect(() => {\n    checkHealth();\n    const interval = setInterval(checkHealth, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Status indicator component\n  const StatusIndicator = ({ isOnline, label }) => (\n    <Box \n      sx={{ \n        display: 'flex', \n        alignItems: 'center', \n        bgcolor: isOnline ? 'rgba(46, 125, 50, 0.1)' : 'rgba(211, 47, 47, 0.1)',\n        color: isOnline ? '#2e7d32' : '#d32f2f',\n        py: 0.5,\n        px: 2,\n        borderRadius: 1,\n        mr: 1\n      }}\n    >\n      {isOnline ? (\n        <CheckCircleIcon sx={{ fontSize: 20, mr: 1 }} />\n      ) : (\n        <CancelIcon sx={{ fontSize: 20, mr: 1 }} />\n      )}\n      {`${label} ${isOnline ? 'ONLINE' : 'OFFLINE'}`}\n    </Box>\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n        <AppBar className=\"nav-bar\" position=\"static\">\n          <Toolbar>\n            <Button\n              onClick={() => navigate(\"/\")}\n              color=\"inherit\"\n            >\n              <span className='logo'>IMDB</span>\n            </Button>\n            <Button\n              onClick={() => navigate(\"/\")}\n              color=\"inherit\"\n            >\n              ALL MOVIES\n            </Button>\n            <Button\n              onClick={() => navigate(\"/add-movies\")}\n              color=\"inherit\"\n            >\n              ADD MOVIES\n            </Button>\n            <Button\n              onClick={() => navigate(\"/add-actor\")}\n              color=\"inherit\"\n            >\n              ADD ACTOR\n            </Button>\n            <Button\n              onClick={() => navigate(\"/add-producer\")}\n              color=\"inherit\"\n            >\n              ADD PRODUCER\n            </Button>\n\n            <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n              <StatusIndicator isOnline={apiStatus} label=\"API\" />\n              <StatusIndicator isOnline={dbStatus} label=\"DATABASE\" />\n              \n              <Button\n                onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n                color=\"inherit\"\n                startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n              >\n                {mode === \"light\" ? \"DARK\" : \"LIGHT\"} MODE\n              </Button>\n            </Box>\n          </Toolbar>\n        </AppBar>\n\n        <Routes>\n          <Route exact path=\"/\" element={<Movie />} />\n          <Route path=\"/add-movies\" element={<AddMovie />} />\n          <Route path=\"/add-actor\" element={<AddActor />} />\n          <Route path=\"/add-producer\" element={<AddProducer />} />\n          <Route path=\"movies/edit/:id\" element={<EditMovies />} />\n        </Routes>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,WAAW;AAClB,SAASA,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,WAAW,EAAEC,GAAG,QAAQ,eAAe;AAChF,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,SAASC,GAAGA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}