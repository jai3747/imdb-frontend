{"ast":null,"code":"var _jsxFileName = \"/Users/jayachandran/new-imdb/imdb-clone-client/src/AddMovie.js\",\n  _s = $RefreshSig$();\n// // // // // // // // // //addmvoies.js\n\n// // // // // // // // // import React, { useEffect, useState } from \"react\";\n// // // // // // // // // import Button from \"@mui/material/Button\";\n// // // // // // // // // import TextField from \"@mui/material/TextField\";\n// // // // // // // // // import { useNavigate } from \"react-router-dom\";\n// // // // // // // // // import apiService from './services/api.service';  // Add this import\n// // // // // // // // // import { useFormik } from \"formik\";\n// // // // // // // // // import * as yup from \"yup\";\n// // // // // // // // // import {\n// // // // // // // // //   FormControl,\n// // // // // // // // //   InputLabel,\n// // // // // // // // //   MenuItem,\n// // // // // // // // //   Select,\n// // // // // // // // // } from \"@mui/material\";\n// // // // // // // // // import axios from \"axios\";\n\n// // // // // // // // // function AddMovie() {\n// // // // // // // // //   const navigate = useNavigate();\n// // // // // // // // //   const [actors, setactors] = useState([]);\n// // // // // // // // //   const [producer, setProducer] = useState('');\n// // // // // // // // //   const [producerArr,setProducerArr] = useState([]);\n// // // // // // // // //   const [actorNames,setActorNames] = useState([]);\n\n// // // // // // // // //   useEffect(()=>{\n// // // // // // // // //     getData();\n// // // // // // // // //   },[])\n\n// // // // // // // // //   const getData = async() => {\n// // // // // // // // //     const res = await axios.get(`${api.service}/producers`);\n// // // // // // // // //     const actorData = await axios.get(`${api.service}/actors`);\n// // // // // // // // //     setProducerArr(res.data);\n// // // // // // // // //     setActorNames(actorData.data);\n// // // // // // // // //   }\n\n// // // // // // // // //   const handleAgeChange = (e) => {\n// // // // // // // // //     const {value} = e.target;\n// // // // // // // // //     setProducer(value);\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleChange = (e) => {\n// // // // // // // // //     const { value } = e.target;\n// // // // // // // // //     setactors(\n// // // // // // // // //       typeof value === \"string\" ? value.split(\",\") : value\n// // // // // // // // //     );\n// // // // // // // // //   };\n\n// // // // // // // // //   const movieValidationSchema = yup.object({\n// // // // // // // // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // // // // // // // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // // // // // // // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // // // // // // // //     poster: yup.string().required(\"*Poster  is mandatory\").min(5),\n// // // // // // // // //     yearOfRelease: yup\n// // // // // // // // //       .number()\n// // // // // // // // //       .required(\"*Year of release field is mandatory\")\n// // // // // // // // //       .min(5),\n// // // // // // // // //   });\n\n// // // // // // // // //   const formik = useFormik({\n// // // // // // // // //     initialValues: {\n// // // // // // // // //       name: \"\",\n// // // // // // // // //       desc: \"\",\n// // // // // // // // //       director: \"\",\n// // // // // // // // //       poster: \"\",\n// // // // // // // // //       yearOfRelease: \"\",\n\n// // // // // // // // //     },\n// // // // // // // // //     validationSchema: movieValidationSchema,\n// // // // // // // // //     onSubmit: async(newMovie) => {\n// // // // // // // // //       console.log(\"onSubmit : \", {...newMovie,actors,producer});\n// // // // // // // // //       await axios.post(`${api.service}/movies/add-movie`,{...newMovie,actors,producer});\n// // // // // // // // //       navigate(\"/\");\n// // // // // // // // //     },\n// // // // // // // // //   });\n\n// // // // // // // // //   return (\n// // // // // // // // //     <>\n// // // // // // // // //       <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the name\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"name\"\n// // // // // // // // //           name=\"name\"\n// // // // // // // // //           value={formik.values.name}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.name && formik.errors.name}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.name && formik.errors.name ? formik.errors.name : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the movie Description\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"desc\"\n// // // // // // // // //           name=\"desc\"\n// // // // // // // // //           value={formik.values.desc}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.desc && formik.errors.desc}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.desc && formik.errors.desc ? formik.errors.desc : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the poster link\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"poster\"\n// // // // // // // // //           name=\"poster\"\n// // // // // // // // //           value={formik.values.poster}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.poster && formik.errors.poster}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.poster && formik.errors.name\n// // // // // // // // //               ? formik.errors.poster\n// // // // // // // // //               : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the director name\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"director\"\n// // // // // // // // //           name=\"director\"\n// // // // // // // // //           value={formik.values.director}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.director && formik.errors.director}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.director && formik.errors.director\n// // // // // // // // //               ? formik.errors.director\n// // // // // // // // //               : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the year of release\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"yearOfRelease\"\n// // // // // // // // //           name=\"yearOfRelease\"\n// // // // // // // // //           value={formik.values.yearOfRelease}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.yearOfRelease && formik.errors.yearOfRelease\n// // // // // // // // //               ? formik.errors.yearOfRelease\n// // // // // // // // //               : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <FormControl fullWidth>\n// // // // // // // // //           <InputLabel id=\"producer\">Producer Name</InputLabel>\n// // // // // // // // //           <Select\n// // // // // // // // //             labelId=\"producer\"\n// // // // // // // // //             id=\"producer\"\n// // // // // // // // //             value={producer}\n// // // // // // // // //             label=\"producer\"\n// // // // // // // // //             onChange={handleAgeChange}\n// // // // // // // // //           >\n// // // // // // // // //             {\n// // // // // // // // //               producerArr.map((prodName)=>{\n// // // // // // // // //                 return <MenuItem value={prodName._id}>{prodName.name}</MenuItem>\n// // // // // // // // //               })\n// // // // // // // // //             }\n\n// // // // // // // // //           </Select>\n// // // // // // // // //         </FormControl>\n// // // // // // // // //         <FormControl fullWidth >\n// // // // // // // // //           <InputLabel id=\"actor\">Select the Actor names</InputLabel>\n// // // // // // // // //           <Select\n// // // // // // // // //             labelId=\"actor\"\n// // // // // // // // //             id=\"actor\"\n// // // // // // // // //             multiple\n// // // // // // // // //             value={actors}\n// // // // // // // // //             onChange={handleChange}\n// // // // // // // // //           >\n// // // // // // // // //             {actorNames.map((actor) => (\n// // // // // // // // //               <MenuItem key={actor._id} value={actor._id}>\n// // // // // // // // //                 {actor.name}\n// // // // // // // // //               </MenuItem>\n// // // // // // // // //             ))}\n// // // // // // // // //           </Select>\n// // // // // // // // //         </FormControl>\n// // // // // // // // //         <Button variant=\"contained\" type=\"submit\">\n// // // // // // // // //           Add Movie\n// // // // // // // // //         </Button>\n// // // // // // // // //       </form>\n// // // // // // // // //     </>\n// // // // // // // // //   );\n// // // // // // // // // }\n\n// // // // // // // // // export default AddMovie;\n// // // // // // // // //addmovie.js\n// // // // // // // // import React, { useEffect, useState } from \"react\";\n// // // // // // // // import Button from \"@mui/material/Button\";\n// // // // // // // // import TextField from \"@mui/material/TextField\";\n// // // // // // // // import { useNavigate } from \"react-router-dom\";\n// // // // // // // // import { useFormik } from \"formik\";\n// // // // // // // // import * as yup from \"yup\";\n// // // // // // // // import {\n// // // // // // // //   FormControl,\n// // // // // // // //   InputLabel,\n// // // // // // // //   MenuItem,\n// // // // // // // //   Select,\n// // // // // // // // } from \"@mui/material\";\n// // // // // // // // import apiService from './services/api.service';  // Make sure this path is correct\n\n// // // // // // // // function AddMovie() {\n// // // // // // // //   const navigate = useNavigate();\n// // // // // // // //   const [actors, setActors] = useState([]);\n// // // // // // // //   const [producer, setProducer] = useState('');\n// // // // // // // //   const [producerArr, setProducerArr] = useState([]);\n// // // // // // // //   const [actorNames, setActorNames] = useState([]);\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     getData();\n// // // // // // // //   }, []);\n\n// // // // // // // //   const getData = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const producerResponse = await apiService.get('/producers');\n// // // // // // // //       const actorResponse = await apiService.get('/actors');\n// // // // // // // //       setProducerArr(producerResponse.data);\n// // // // // // // //       setActorNames(actorResponse.data);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error fetching data:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const handleProducerChange = (e) => {\n// // // // // // // //     const { value } = e.target;\n// // // // // // // //     setProducer(value);\n// // // // // // // //   };\n\n// // // // // // // //   const handleActorsChange = (e) => {\n// // // // // // // //     const { value } = e.target;\n// // // // // // // //     setActors(typeof value === \"string\" ? value.split(\",\") : value);\n// // // // // // // //   };\n\n// // // // // // // //   const movieValidationSchema = yup.object({\n// // // // // // // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // // // // // // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // // // // // // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // // // // // // //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// // // // // // // //     yearOfRelease: yup\n// // // // // // // //       .number()\n// // // // // // // //       .required(\"*Year of release field is mandatory\")\n// // // // // // // //       .min(1900)\n// // // // // // // //       .max(new Date().getFullYear()),\n// // // // // // // //   });\n\n// // // // // // // //   const formik = useFormik({\n// // // // // // // //     initialValues: {\n// // // // // // // //       name: \"\",\n// // // // // // // //       desc: \"\",\n// // // // // // // //       director: \"\",\n// // // // // // // //       poster: \"\",\n// // // // // // // //       yearOfRelease: \"\",\n// // // // // // // //     },\n// // // // // // // //     validationSchema: movieValidationSchema,\n// // // // // // // //     onSubmit: async (newMovie) => {\n// // // // // // // //       try {\n// // // // // // // //         const movieData = { ...newMovie, actors, producer };\n// // // // // // // //         await apiService.post('/movies/add-movie', movieData);\n// // // // // // // //         navigate(\"/\");\n// // // // // // // //       } catch (error) {\n// // // // // // // //         console.error('Error adding movie:', error);\n// // // // // // // //       }\n// // // // // // // //     },\n// // // // // // // //   });\n\n// // // // // // // //   return (\n// // // // // // // //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the name\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"name\"\n// // // // // // // //         name=\"name\"\n// // // // // // // //         value={formik.values.name}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.name && formik.errors.name}\n// // // // // // // //         helperText={formik.touched.name && formik.errors.name ? formik.errors.name : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the movie Description\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"desc\"\n// // // // // // // //         name=\"desc\"\n// // // // // // // //         value={formik.values.desc}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.desc && formik.errors.desc}\n// // // // // // // //         helperText={formik.touched.desc && formik.errors.desc ? formik.errors.desc : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the poster link\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"poster\"\n// // // // // // // //         name=\"poster\"\n// // // // // // // //         value={formik.values.poster}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.poster && formik.errors.poster}\n// // // // // // // //         helperText={formik.touched.poster && formik.errors.poster ? formik.errors.poster : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the director name\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"director\"\n// // // // // // // //         name=\"director\"\n// // // // // // // //         value={formik.values.director}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.director && formik.errors.director}\n// // // // // // // //         helperText={formik.touched.director && formik.errors.director ? formik.errors.director : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the year of release\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"yearOfRelease\"\n// // // // // // // //         name=\"yearOfRelease\"\n// // // // // // // //         type=\"number\"\n// // // // // // // //         value={formik.values.yearOfRelease}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // // // // // //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease ? formik.errors.yearOfRelease : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <FormControl fullWidth>\n// // // // // // // //         <InputLabel id=\"producer\">Producer Name</InputLabel>\n// // // // // // // //         <Select\n// // // // // // // //           labelId=\"producer\"\n// // // // // // // //           id=\"producer\"\n// // // // // // // //           value={producer}\n// // // // // // // //           label=\"Producer Name\"\n// // // // // // // //           onChange={handleProducerChange}\n// // // // // // // //         >\n// // // // // // // //           {producerArr.map((prodName) => (\n// // // // // // // //             <MenuItem key={prodName._id} value={prodName._id}>\n// // // // // // // //               {prodName.name}\n// // // // // // // //             </MenuItem>\n// // // // // // // //           ))}\n// // // // // // // //         </Select>\n// // // // // // // //       </FormControl>\n// // // // // // // //       <FormControl fullWidth>\n// // // // // // // //         <InputLabel id=\"actor\">Select the Actor names</InputLabel>\n// // // // // // // //         <Select\n// // // // // // // //           labelId=\"actor\"\n// // // // // // // //           id=\"actor\"\n// // // // // // // //           multiple\n// // // // // // // //           value={actors}\n// // // // // // // //           label=\"Select the Actor names\"\n// // // // // // // //           onChange={handleActorsChange}\n// // // // // // // //         >\n// // // // // // // //           {actorNames.map((actor) => (\n// // // // // // // //             <MenuItem key={actor._id} value={actor._id}>\n// // // // // // // //               {actor.name}\n// // // // // // // //             </MenuItem>\n// // // // // // // //           ))}\n// // // // // // // //         </Select>\n// // // // // // // //       </FormControl>\n// // // // // // // //       <Button variant=\"contained\" type=\"submit\">\n// // // // // // // //         Add Movie\n// // // // // // // //       </Button>\n// // // // // // // //     </form>\n// // // // // // // //   );\n// // // // // // // // }\n\n// // // // // // // // export default AddMovie;\n// // // // // // // // src/components/AddMovie.js\n// // // // // // // import React, { useEffect, useState } from \"react\";\n// // // // // // // import { useNavigate } from \"react-router-dom\";\n// // // // // // // import { useFormik } from \"formik\";\n// // // // // // // import * as yup from \"yup\";\n// // // // // // // import {\n// // // // // // //   Button,\n// // // // // // //   TextField,\n// // // // // // //   FormControl,\n// // // // // // //   InputLabel,\n// // // // // // //   MenuItem,\n// // // // // // //   Select,\n// // // // // // //   Box,\n// // // // // // //   Typography\n// // // // // // // } from \"@mui/material\";\n// // // // // // // import apiService from './services/api.service';\n\n// // // // // // // const validationSchema = yup.object({\n// // // // // // //   name: yup.string().required(\"Name field is mandatory\").min(3),\n// // // // // // //   desc: yup.string().required(\"Description is mandatory\").min(1),\n// // // // // // //   director: yup.string().required(\"Director field is mandatory\").min(5),\n// // // // // // //   poster: yup.string().required(\"Poster is mandatory\").min(5),\n// // // // // // //   yearOfRelease: yup\n// // // // // // //     .number()\n// // // // // // //     .required(\"Year of release field is mandatory\")\n// // // // // // //     .min(1900)\n// // // // // // //     .max(new Date().getFullYear()),\n// // // // // // // });\n\n// // // // // // // function AddMovie() {\n// // // // // // //   const navigate = useNavigate();\n// // // // // // //   const [actors, setActors] = useState([]);\n// // // // // // //   const [producer, setProducer] = useState('');\n// // // // // // //   const [producerList, setProducerList] = useState([]);\n// // // // // // //   const [actorList, setActorList] = useState([]);\n// // // // // // //   const [error, setError] = useState(\"\");\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     const fetchData = async () => {\n// // // // // // //       try {\n// // // // // // //         const [producerData, actorData] = await Promise.all([\n// // // // // // //           apiService.get('/producers'),\n// // // // // // //           apiService.get('/actors')\n// // // // // // //         ]);\n// // // // // // //         setProducerList(producerData);\n// // // // // // //         setActorList(actorData);\n// // // // // // //       } catch (err) {\n// // // // // // //         setError(\"Failed to fetch required data\");\n// // // // // // //       }\n// // // // // // //     };\n// // // // // // //     fetchData();\n// // // // // // //   }, []);\n\n// // // // // // //   const formik = useFormik({\n// // // // // // //     initialValues: {\n// // // // // // //       name: \"\",\n// // // // // // //       desc: \"\",\n// // // // // // //       director: \"\",\n// // // // // // //       poster: \"\",\n// // // // // // //       yearOfRelease: \"\",\n// // // // // // //     },\n// // // // // // //     validationSchema,\n// // // // // // //     onSubmit: async (values) => {\n// // // // // // //       try {\n// // // // // // //         await apiService.post('/movies/add-movie', {\n// // // // // // //           ...values,\n// // // // // // //           actors,\n// // // // // // //           producer\n// // // // // // //         });\n// // // // // // //         navigate(\"/\");\n// // // // // // //       } catch (err) {\n// // // // // // //         setError(err.message || \"Failed to add movie\");\n// // // // // // //       }\n// // // // // // //     },\n// // // // // // //   });\n\n// // // // // // //   return (\n// // // // // // //     <Box sx={{ maxWidth: 600, mx: 'auto', mt: 4 }}>\n// // // // // // //       <Typography variant=\"h4\" gutterBottom>\n// // // // // // //         Add Movie\n// // // // // // //       </Typography>\n\n// // // // // // //       <form onSubmit={formik.handleSubmit}>\n// // // // // // //         {error && (\n// // // // // // //           <Typography color=\"error\" sx={{ mb: 2 }}>\n// // // // // // //             {error}\n// // // // // // //           </Typography>\n// // // // // // //         )}\n\n// // // // // // //         <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Movie Name\"\n// // // // // // //             {...formik.getFieldProps('name')}\n// // // // // // //             error={formik.touched.name && Boolean(formik.errors.name)}\n// // // // // // //             helperText={formik.touched.name && formik.errors.name}\n// // // // // // //           />\n\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Description\"\n// // // // // // //             multiline\n// // // // // // //             rows={4}\n// // // // // // //             {...formik.getFieldProps('desc')}\n// // // // // // //             error={formik.touched.desc && Boolean(formik.errors.desc)}\n// // // // // // //             helperText={formik.touched.desc && formik.errors.desc}\n// // // // // // //           />\n\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Director\"\n// // // // // // //             {...formik.getFieldProps('director')}\n// // // // // // //             error={formik.touched.director && Boolean(formik.errors.director)}\n// // // // // // //             helperText={formik.touched.director && formik.errors.director}\n// // // // // // //           />\n\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Poster URL\"\n// // // // // // //             {...formik.getFieldProps('poster')}\n// // // // // // //             error={formik.touched.poster && Boolean(formik.errors.poster)}\n// // // // // // //             helperText={formik.touched.poster && formik.errors.poster}\n// // // // // // //           />\n\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Year of Release\"\n// // // // // // //             type=\"number\"\n// // // // // // //             {...formik.getFieldProps('yearOfRelease')}\n// // // // // // //             error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// // // // // // //             helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // // // // //           />\n\n// // // // // // //           <FormControl fullWidth>\n// // // // // // //             <InputLabel>Producer</InputLabel>\n// // // // // // //             <Select\n// // // // // // //               value={producer}\n// // // // // // //               label=\"Producer\"\n// // // // // // //               onChange={(e) => setProducer(e.target.value)}\n// // // // // // //             >\n// // // // // // //               {producerList.map((prod) => (\n// // // // // // //                 <MenuItem key={prod._id} value={prod._id}>\n// // // // // // //                   {prod.name}\n// // // // // // //                 </MenuItem>\n// // // // // // //               ))}\n// // // // // // //             </Select>\n// // // // // // //           </FormControl>\n\n// // // // // // //           <FormControl fullWidth>\n// // // // // // //             <InputLabel>Actors</InputLabel>\n// // // // // // //             <Select\n// // // // // // //               multiple\n// // // // // // //               value={actors}\n// // // // // // //               label=\"Actors\"\n// // // // // // //               onChange={(e) => setActors(e.target.value)}\n// // // // // // //             >\n// // // // // // //               {actorList.map((actor) => (\n// // // // // // //                 <MenuItem key={actor._id} value={actor._id}>\n// // // // // // //                   {actor.name}\n// // // // // // //                 </MenuItem>\n// // // // // // //               ))}\n// // // // // // //             </Select>\n// // // // // // //           </FormControl>\n\n// // // // // // //           <Button\n// // // // // // //             variant=\"contained\"\n// // // // // // //             type=\"submit\"\n// // // // // // //             size=\"large\"\n// // // // // // //             sx={{ mt: 2 }}\n// // // // // // //           >\n// // // // // // //             Add Movie\n// // // // // // //           </Button>\n// // // // // // //         </Box>\n// // // // // // //       </form>\n// // // // // // //     </Box>\n// // // // // // //   );\n// // // // // // // }\n\n// // // // // // // export default AddMovie;\n// // // // // // import React, { useEffect, useState } from \"react\";\n// // // // // // import { useNavigate } from \"react-router-dom\";\n// // // // // // import { useFormik } from \"formik\";\n// // // // // // import * as yup from \"yup\";\n// // // // // // import {\n// // // // // //   Button,\n// // // // // //   TextField,\n// // // // // //   FormControl,\n// // // // // //   InputLabel,\n// // // // // //   MenuItem,\n// // // // // //   Select,\n// // // // // //   Box,\n// // // // // //   Typography\n// // // // // // } from \"@mui/material\";\n// // // // // // import apiService from \"./services/api.service\";\n\n// // // // // // const validationSchema = yup.object({\n// // // // // //   name: yup.string().required(\"Name field is mandatory\").min(3),\n// // // // // //   desc: yup.string().required(\"Description is mandatory\").min(1),\n// // // // // //   director: yup.string().required(\"Director field is mandatory\").min(5),\n// // // // // //   poster: yup.string().required(\"Poster is mandatory\").min(5),\n// // // // // //   yearOfRelease: yup\n// // // // // //     .number()\n// // // // // //     .required(\"Year of release field is mandatory\")\n// // // // // //     .min(1900)\n// // // // // //     .max(new Date().getFullYear()),\n// // // // // // });\n\n// // // // // // function AddMovie() {\n// // // // // //   const navigate = useNavigate();\n// // // // // //   const [actors, setActors] = useState([]);\n// // // // // //   const [producer, setProducer] = useState(\"\");\n// // // // // //   const [producerList, setProducerList] = useState([]);\n// // // // // //   const [actorList, setActorList] = useState([]);\n// // // // // //   const [error, setError] = useState(\"\");\n\n// // // // // //   useEffect(() => {\n// // // // // //     const fetchData = async () => {\n// // // // // //       try {\n// // // // // //         const [producerData, actorData] = await Promise.all([\n// // // // // //           apiService.get(\"/producers\"),\n// // // // // //           apiService.get(\"/actors\"),\n// // // // // //         ]);\n// // // // // //         setProducerList(producerData.data);\n// // // // // //         setActorList(actorData.data);\n// // // // // //       } catch (err) {\n// // // // // //         setError(\"Failed to fetch required data\");\n// // // // // //       }\n// // // // // //     };\n// // // // // //     fetchData();\n// // // // // //   }, []);\n\n// // // // // //   const formik = useFormik({\n// // // // // //     initialValues: {\n// // // // // //       name: \"\",\n// // // // // //       desc: \"\",\n// // // // // //       director: \"\",\n// // // // // //       poster: \"\",\n// // // // // //       yearOfRelease: \"\",\n// // // // // //     },\n// // // // // //     validationSchema,\n// // // // // //     onSubmit: async (values) => {\n// // // // // //       try {\n// // // // // //         await apiService.post(\"/movies/add-movie\", {\n// // // // // //           ...values,\n// // // // // //           actors,\n// // // // // //           producer,\n// // // // // //         });\n// // // // // //         navigate(\"/\");\n// // // // // //       } catch (err) {\n// // // // // //         setError(err.response?.data?.message || \"Failed to add movie\");\n// // // // // //       }\n// // // // // //     },\n// // // // // //   });\n\n// // // // // //   return (\n// // // // // //     <Box sx={{ maxWidth: 600, mx: \"auto\", mt: 4 }}>\n// // // // // //       <Typography variant=\"h4\" gutterBottom>\n// // // // // //         Add Movie\n// // // // // //       </Typography>\n// // // // // //       <form onSubmit={formik.handleSubmit}>\n// // // // // //         {error && <Typography color=\"error\">{error}</Typography>}\n// // // // // //         <TextField label=\"Movie Name\" {...formik.getFieldProps(\"name\")} fullWidth />\n// // // // // //         <TextField label=\"Description\" {...formik.getFieldProps(\"desc\")} fullWidth multiline rows={4} />\n// // // // // //         <TextField label=\"Director\" {...formik.getFieldProps(\"director\")} fullWidth />\n// // // // // //         <TextField label=\"Poster URL\" {...formik.getFieldProps(\"poster\")} fullWidth />\n// // // // // //         <TextField label=\"Year of Release\" type=\"number\" {...formik.getFieldProps(\"yearOfRelease\")} fullWidth />\n// // // // // //         <FormControl fullWidth>\n// // // // // //           <InputLabel>Producer</InputLabel>\n// // // // // //           <Select value={producer} onChange={(e) => setProducer(e.target.value)}>\n// // // // // //             {producerList.map((prod) => (\n// // // // // //               <MenuItem key={prod._id} value={prod._id}>{prod.name}</MenuItem>\n// // // // // //             ))}\n// // // // // //           </Select>\n// // // // // //         </FormControl>\n// // // // // //         <FormControl fullWidth>\n// // // // // //           <InputLabel>Actors</InputLabel>\n// // // // // //           <Select multiple value={actors} onChange={(e) => setActors(e.target.value)}>\n// // // // // //             {actorList.map((actor) => (\n// // // // // //               <MenuItem key={actor._id} value={actor._id}>{actor.name}</MenuItem>\n// // // // // //             ))}\n// // // // // //           </Select>\n// // // // // //         </FormControl>\n// // // // // //         <Button variant=\"contained\" type=\"submit\" fullWidth>\n// // // // // //           Add Movie\n// // // // // //         </Button>\n// // // // // //       </form>\n// // // // // //     </Box>\n// // // // // //   );\n// // // // // // }\n\n// // // // // // export default AddMovie;\n// // // // // import React, { useEffect, useState } from \"react\";\n// // // // // import { useFormik } from \"formik\";\n// // // // // import * as yup from \"yup\";\n// // // // // import {\n// // // // //   TextField,\n// // // // //   Button,\n// // // // //   FormControl,\n// // // // //   InputLabel,\n// // // // //   Select,\n// // // // //   MenuItem,\n// // // // //   CircularProgress,\n// // // // //   Box,\n// // // // // } from \"@mui/material\";\n// // // // // import apiService from \"./services/api.service\"; // Import apiService\n\n// // // // // function AddMovie() {\n// // // // //   const [actors, setActors] = useState([]);\n// // // // //   const [producers, setProducers] = useState([]);\n// // // // //   const [isLoading, setIsLoading] = useState(true); // Add loading state\n\n// // // // //   useEffect(() => {\n// // // // //     fetchData();\n// // // // //   }, []);\n\n// // // // //   const fetchData = async () => {\n// // // // //     try {\n// // // // //       const actorsData = await apiService.getActors(); // Fetch actors\n// // // // //       const producersData = await apiService.getProducers(); // Fetch producers\n// // // // //       setActors(actorsData);\n// // // // //       setProducers(producersData);\n// // // // //     } catch (error) {\n// // // // //       console.error(\"Error fetching data:\", error);\n// // // // //     } finally {\n// // // // //       setIsLoading(false); // Set loading to false after fetching\n// // // // //     }\n// // // // //   };\n\n// // // // //   const movieValidationSchema = yup.object({\n// // // // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // // // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // // // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // // // //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// // // // //     yearOfRelease: yup\n// // // // //       .number()\n// // // // //       .required(\"*Year of release field is mandatory\")\n// // // // //       .min(1900, \"*Year must be after 1900\"),\n// // // // //   });\n\n// // // // //   const formik = useFormik({\n// // // // //     initialValues: {\n// // // // //       name: \"\",\n// // // // //       desc: \"\",\n// // // // //       director: \"\",\n// // // // //       poster: \"\",\n// // // // //       yearOfRelease: \"\",\n// // // // //       producer: \"\",\n// // // // //       actors: [],\n// // // // //     },\n// // // // //     validationSchema: movieValidationSchema,\n// // // // //     onSubmit: async (values) => {\n// // // // //       try {\n// // // // //         await apiService.addMovie(values); // Add movie using apiService\n// // // // //         alert(\"Movie added successfully!\");\n// // // // //         formik.resetForm();\n// // // // //       } catch (error) {\n// // // // //         console.error(\"Error adding movie:\", error);\n// // // // //         alert(\"Failed to add movie. Please try again.\");\n// // // // //       }\n// // // // //     },\n// // // // //   });\n\n// // // // //   if (isLoading) {\n// // // // //     return (\n// // // // //       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n// // // // //         <CircularProgress />\n// // // // //       </Box>\n// // // // //     );\n// // // // //   }\n\n// // // // //   return (\n// // // // //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // // // //       <TextField\n// // // // //         label=\"Enter the name\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"name\"\n// // // // //         name=\"name\"\n// // // // //         value={formik.values.name}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.name && Boolean(formik.errors.name)}\n// // // // //         helperText={formik.touched.name && formik.errors.name}\n// // // // //       />\n// // // // //       <TextField\n// // // // //         label=\"Enter the movie Description\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"desc\"\n// // // // //         name=\"desc\"\n// // // // //         value={formik.values.desc}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.desc && Boolean(formik.errors.desc)}\n// // // // //         helperText={formik.touched.desc && formik.errors.desc}\n// // // // //       />\n// // // // //       <TextField\n// // // // //         label=\"Enter the poster link\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"poster\"\n// // // // //         name=\"poster\"\n// // // // //         value={formik.values.poster}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.poster && Boolean(formik.errors.poster)}\n// // // // //         helperText={formik.touched.poster && formik.errors.poster}\n// // // // //       />\n// // // // //       <TextField\n// // // // //         label=\"Enter the director name\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"director\"\n// // // // //         name=\"director\"\n// // // // //         value={formik.values.director}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.director && Boolean(formik.errors.director)}\n// // // // //         helperText={formik.touched.director && formik.errors.director}\n// // // // //       />\n// // // // //       <TextField\n// // // // //         label=\"Enter the year of release\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"yearOfRelease\"\n// // // // //         name=\"yearOfRelease\"\n// // // // //         value={formik.values.yearOfRelease}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// // // // //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // // //       />\n// // // // //       <FormControl fullWidth>\n// // // // //         <InputLabel id=\"producer\">Producer</InputLabel>\n// // // // //         <Select\n// // // // //           labelId=\"producer\"\n// // // // //           id=\"producer\"\n// // // // //           name=\"producer\"\n// // // // //           value={formik.values.producer}\n// // // // //           onChange={formik.handleChange}\n// // // // //           onBlur={formik.handleBlur}\n// // // // //           error={formik.touched.producer && Boolean(formik.errors.producer)}\n// // // // //         >\n// // // // //           {producers.map((producer) => (\n// // // // //             <MenuItem key={producer._id} value={producer._id}>\n// // // // //               {producer.name}\n// // // // //             </MenuItem>\n// // // // //           ))}\n// // // // //         </Select>\n// // // // //       </FormControl>\n// // // // //       <FormControl fullWidth>\n// // // // //         <InputLabel id=\"actors\">Actors</InputLabel>\n// // // // //         <Select\n// // // // //           labelId=\"actors\"\n// // // // //           id=\"actors\"\n// // // // //           name=\"actors\"\n// // // // //           multiple\n// // // // //           value={formik.values.actors}\n// // // // //           onChange={formik.handleChange}\n// // // // //           onBlur={formik.handleBlur}\n// // // // //           error={formik.touched.actors && Boolean(formik.errors.actors)}\n// // // // //         >\n// // // // //           {actors.map((actor) => (\n// // // // //             <MenuItem key={actor._id} value={actor._id}>\n// // // // //               {actor.name}\n// // // // //             </MenuItem>\n// // // // //           ))}\n// // // // //         </Select>\n// // // // //       </FormControl>\n// // // // //       <Button variant=\"contained\" type=\"submit\">\n// // // // //         Add Movie\n// // // // //       </Button>\n// // // // //     </form>\n// // // // //   );\n// // // // // }\n\n// // // // // export default AddMovie;\n// // // // import React, { useEffect, useState } from \"react\";\n// // // // import { useFormik } from \"formik\";\n// // // // import * as yup from \"yup\";\n// // // // import {\n// // // //   TextField,\n// // // //   Button,\n// // // //   FormControl,\n// // // //   InputLabel,\n// // // //   Select,\n// // // //   MenuItem,\n// // // //   CircularProgress,\n// // // //   Box,\n// // // // } from \"@mui/material\";\n// // // // import apiService from \"./services/api.service\"; // Import apiService\n\n// // // // function AddMovie() {\n// // // //   const [actors, setActors] = useState([]);\n// // // //   const [producers, setProducers] = useState([]);\n// // // //   const [isLoading, setIsLoading] = useState(true); // Add loading state\n\n// // // //   useEffect(() => {\n// // // //     fetchData();\n// // // //   }, []);\n\n// // // //   const fetchData = async () => {\n// // // //     try {\n// // // //       const actorsData = await apiService.getActors(); // Fetch actors\n// // // //       const producersData = await apiService.getProducers(); // Fetch producers\n// // // //       setActors(actorsData);\n// // // //       setProducers(producersData);\n// // // //     } catch (error) {\n// // // //       console.error(\"Error fetching data:\", error);\n// // // //     } finally {\n// // // //       setIsLoading(false); // Set loading to false after fetching\n// // // //     }\n// // // //   };\n\n// // // //   const movieValidationSchema = yup.object({\n// // // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // // //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// // // //     yearOfRelease: yup\n// // // //       .number()\n// // // //       .required(\"*Year of release field is mandatory\")\n// // // //       .min(1900, \"*Year must be after 1900\"),\n// // // //   });\n\n// // // //   const formik = useFormik({\n// // // //     initialValues: {\n// // // //       name: \"\",\n// // // //       desc: \"\",\n// // // //       director: \"\",\n// // // //       poster: \"\",\n// // // //       yearOfRelease: \"\",\n// // // //       producer: \"\",\n// // // //       actors: [],\n// // // //     },\n// // // //     validationSchema: movieValidationSchema,\n// // // //     onSubmit: async (values) => {\n// // // //       try {\n// // // //         await apiService.addMovie(values); // Add movie using apiService\n// // // //         alert(\"Movie added successfully!\");\n// // // //         formik.resetForm();\n// // // //       } catch (error) {\n// // // //         console.error(\"Error adding movie:\", error);\n// // // //         alert(\"Failed to add movie. Please try again.\");\n// // // //       }\n// // // //     },\n// // // //   });\n\n// // // //   if (isLoading) {\n// // // //     return (\n// // // //       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n// // // //         <CircularProgress />\n// // // //       </Box>\n// // // //     );\n// // // //   }\n\n// // // //   return (\n// // // //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // // //       <TextField\n// // // //         label=\"Enter the name\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"name\"\n// // // //         name=\"name\"\n// // // //         value={formik.values.name}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.name && Boolean(formik.errors.name)}\n// // // //         helperText={formik.touched.name && formik.errors.name}\n// // // //       />\n// // // //       <TextField\n// // // //         label=\"Enter the movie Description\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"desc\"\n// // // //         name=\"desc\"\n// // // //         value={formik.values.desc}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.desc && Boolean(formik.errors.desc)}\n// // // //         helperText={formik.touched.desc && formik.errors.desc}\n// // // //       />\n// // // //       <TextField\n// // // //         label=\"Enter the poster link\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"poster\"\n// // // //         name=\"poster\"\n// // // //         value={formik.values.poster}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.poster && Boolean(formik.errors.poster)}\n// // // //         helperText={formik.touched.poster && formik.errors.poster}\n// // // //       />\n// // // //       <TextField\n// // // //         label=\"Enter the director name\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"director\"\n// // // //         name=\"director\"\n// // // //         value={formik.values.director}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.director && Boolean(formik.errors.director)}\n// // // //         helperText={formik.touched.director && formik.errors.director}\n// // // //       />\n// // // //       <TextField\n// // // //         label=\"Enter the year of release\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"yearOfRelease\"\n// // // //         name=\"yearOfRelease\"\n// // // //         value={formik.values.yearOfRelease}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// // // //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // //       />\n// // // //       <FormControl fullWidth>\n// // // //         <InputLabel id=\"producer\">Producer</InputLabel>\n// // // //         <Select\n// // // //           labelId=\"producer\"\n// // // //           id=\"producer\"\n// // // //           name=\"producer\"\n// // // //           value={formik.values.producer}\n// // // //           onChange={formik.handleChange}\n// // // //           onBlur={formik.handleBlur}\n// // // //           error={formik.touched.producer && Boolean(formik.errors.producer)}\n// // // //         >\n// // // //           {producers.map((producer) => (\n// // // //             <MenuItem key={producer._id} value={producer._id}>\n// // // //               {producer.name}\n// // // //             </MenuItem>\n// // // //           ))}\n// // // //         </Select>\n// // // //       </FormControl>\n// // // //       <FormControl fullWidth>\n// // // //         <InputLabel id=\"actors\">Actors</InputLabel>\n// // // //         <Select\n// // // //           labelId=\"actors\"\n// // // //           id=\"actors\"\n// // // //           name=\"actors\"\n// // // //           multiple\n// // // //           value={formik.values.actors}\n// // // //           onChange={formik.handleChange}\n// // // //           onBlur={formik.handleBlur}\n// // // //           error={formik.touched.actors && Boolean(formik.errors.actors)}\n// // // //         >\n// // // //           {actors.map((actor) => (\n// // // //             <MenuItem key={actor._id} value={actor._id}>\n// // // //               {actor.name}\n// // // //             </MenuItem>\n// // // //           ))}\n// // // //         </Select>\n// // // //       </FormControl>\n// // // //       <Button variant=\"contained\" type=\"submit\">\n// // // //         Add Movie\n// // // //       </Button>\n// // // //     </form>\n// // // //   );\n// // // // }\n\n// // // // export default AddMovie;\n// // // import React, { useEffect, useState } from \"react\";\n// // // import { useFormik } from \"formik\";\n// // // import * as yup from \"yup\";\n// // // import {\n// // //   TextField,\n// // //   Button,\n// // //   FormControl,\n// // //   InputLabel,\n// // //   Select,\n// // //   MenuItem,\n// // //   CircularProgress,\n// // //   Box,\n// // // } from \"@mui/material\";\n// // // import apiService from \"./services/api.service\"; // Import apiService\n\n// // // function AddMovie() {\n// // //   const [actors, setActors] = useState([]);\n// // //   const [producers, setProducers] = useState([]);\n// // //   const [isLoading, setIsLoading] = useState(true); // Add loading state\n\n// // //   useEffect(() => {\n// // //     fetchData();\n// // //   }, []);\n\n// // //   const fetchData = async () => {\n// // //     try {\n// // //       const actorsData = await apiService.getActors(); // Fetch actors\n// // //       const producersData = await apiService.getProducers(); // Fetch producers\n// // //       setActors(actorsData);\n// // //       setProducers(producersData);\n// // //     } catch (error) {\n// // //       console.error(\"Error fetching data:\", error);\n// // //     } finally {\n// // //       setIsLoading(false); // Set loading to false after fetching\n// // //     }\n// // //   };\n\n// // //   const movieValidationSchema = yup.object({\n// // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// // //     yearOfRelease: yup\n// // //       .number()\n// // //       .required(\"*Year of release field is mandatory\")\n// // //       .min(1900, \"*Year must be after 1900\"),\n// // //   });\n\n// // //   const formik = useFormik({\n// // //     initialValues: {\n// // //       name: \"\",\n// // //       desc: \"\",\n// // //       director: \"\",\n// // //       poster: \"\",\n// // //       yearOfRelease: \"\",\n// // //       producer: \"\",\n// // //       actors: [],\n// // //     },\n// // //     validationSchema: movieValidationSchema,\n// // //     onSubmit: async (values) => {\n// // //       try {\n// // //         await apiService.addMovie(values); // Add movie using apiService\n// // //         alert(\"Movie added successfully!\");\n// // //         formik.resetForm();\n// // //       } catch (error) {\n// // //         console.error(\"Error adding movie:\", error);\n// // //         alert(\"Failed to add movie. Please try again.\");\n// // //       }\n// // //     },\n// // //   });\n\n// // //   if (isLoading) {\n// // //     return (\n// // //       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n// // //         <CircularProgress />\n// // //       </Box>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // //       <TextField\n// // //         label=\"Enter the name\"\n// // //         variant=\"outlined\"\n// // //         id=\"name\"\n// // //         name=\"name\"\n// // //         value={formik.values.name}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.name && Boolean(formik.errors.name)}\n// // //         helperText={formik.touched.name && formik.errors.name}\n// // //       />\n// // //       <TextField\n// // //         label=\"Enter the movie Description\"\n// // //         variant=\"outlined\"\n// // //         id=\"desc\"\n// // //         name=\"desc\"\n// // //         value={formik.values.desc}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.desc && Boolean(formik.errors.desc)}\n// // //         helperText={formik.touched.desc && formik.errors.desc}\n// // //       />\n// // //       <TextField\n// // //         label=\"Enter the poster link\"\n// // //         variant=\"outlined\"\n// // //         id=\"poster\"\n// // //         name=\"poster\"\n// // //         value={formik.values.poster}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.poster && Boolean(formik.errors.poster)}\n// // //         helperText={formik.touched.poster && formik.errors.poster}\n// // //       />\n// // //       <TextField\n// // //         label=\"Enter the director name\"\n// // //         variant=\"outlined\"\n// // //         id=\"director\"\n// // //         name=\"director\"\n// // //         value={formik.values.director}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.director && Boolean(formik.errors.director)}\n// // //         helperText={formik.touched.director && formik.errors.director}\n// // //       />\n// // //       <TextField\n// // //         label=\"Enter the year of release\"\n// // //         variant=\"outlined\"\n// // //         id=\"yearOfRelease\"\n// // //         name=\"yearOfRelease\"\n// // //         value={formik.values.yearOfRelease}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// // //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // //       />\n// // //       <FormControl fullWidth>\n// // //         <InputLabel id=\"producer\">Producer</InputLabel>\n// // //         <Select\n// // //           labelId=\"producer\"\n// // //           id=\"producer\"\n// // //           name=\"producer\"\n// // //           value={formik.values.producer}\n// // //           onChange={formik.handleChange}\n// // //           onBlur={formik.handleBlur}\n// // //           error={formik.touched.producer && Boolean(formik.errors.producer)}\n// // //         >\n// // //           {producers.map((producer) => (\n// // //             <MenuItem key={producer._id} value={producer._id}>\n// // //               {producer.name}\n// // //             </MenuItem>\n// // //           ))}\n// // //         </Select>\n// // //       </FormControl>\n// // //       <FormControl fullWidth>\n// // //         <InputLabel id=\"actors\">Actors</InputLabel>\n// // //         <Select\n// // //           labelId=\"actors\"\n// // //           id=\"actors\"\n// // //           name=\"actors\"\n// // //           multiple\n// // //           value={formik.values.actors}\n// // //           onChange={formik.handleChange}\n// // //           onBlur={formik.handleBlur}\n// // //           error={formik.touched.actors && Boolean(formik.errors.actors)}\n// // //         >\n// // //           {actors.map((actor) => (\n// // //             <MenuItem key={actor._id} value={actor._id}>\n// // //               {actor.name}\n// // //             </MenuItem>\n// // //           ))}\n// // //         </Select>\n// // //       </FormControl>\n// // //       <Button variant=\"contained\" type=\"submit\">\n// // //         Add Movie\n// // //       </Button>\n// // //     </form>\n// // //   );\n// // // }\n\n// // // export default AddMovie;\n// // import React, { useEffect, useState } from \"react\";\n// // import { useFormik } from \"formik\";\n// // import * as yup from \"yup\";\n// // import {\n// //   TextField,\n// //   Button,\n// //   FormControl,\n// //   InputLabel,\n// //   Select,\n// //   MenuItem,\n// //   CircularProgress,\n// //   Box,\n// // } from \"@mui/material\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import apiService from \"./services/api.service\"; // Import apiService\n\n// // function AddMovie() {\n// //   const navigate = useNavigate();\n// //   const [actors, setActors] = useState([]);\n// //   const [producers, setProducers] = useState([]);\n// //   const [isLoading, setIsLoading] = useState(true);\n\n// //   // Fetch actors and producers on component mount\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       try {\n// //         const actorsData = await apiService.getActors();\n// //         const producersData = await apiService.getProducers();\n// //         setActors(actorsData);\n// //         setProducers(producersData);\n// //       } catch (error) {\n// //         console.error(\"Error fetching data:\", error);\n// //       } finally {\n// //         setIsLoading(false);\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, []);\n\n// //   // Form validation schema\n// //   const movieValidationSchema = yup.object({\n// //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// //     yearOfRelease: yup\n// //       .number()\n// //       .required(\"*Year of release field is mandatory\")\n// //       .min(1900, \"*Year must be after 1900\"),\n// //   });\n\n// //   // Formik form handling\n// //   const formik = useFormik({\n// //     initialValues: {\n// //       name: \"\",\n// //       desc: \"\",\n// //       director: \"\",\n// //       poster: \"\",\n// //       yearOfRelease: \"\",\n// //       producer: \"\",\n// //       actors: [],\n// //     },\n// //     validationSchema: movieValidationSchema,\n// //     onSubmit: async (values) => {\n// //       try {\n// //         await apiService.addMovie(values);\n// //         alert(\"Movie added successfully!\");\n// //         navigate(\"/\");\n// //       } catch (error) {\n// //         console.error(\"Error adding movie:\", error);\n// //         alert(\"Failed to add movie. Please try again.\");\n// //       }\n// //     },\n// //   });\n\n// //   // Show loading spinner while fetching data\n// //   if (isLoading) {\n// //     return (\n// //       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n// //         <CircularProgress />\n// //       </Box>\n// //     );\n// //   }\n\n// //   return (\n// //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// //       <TextField\n// //         label=\"Enter the name\"\n// //         variant=\"outlined\"\n// //         id=\"name\"\n// //         name=\"name\"\n// //         value={formik.values.name}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.name && Boolean(formik.errors.name)}\n// //         helperText={formik.touched.name && formik.errors.name}\n// //       />\n// //       <TextField\n// //         label=\"Enter the movie Description\"\n// //         variant=\"outlined\"\n// //         id=\"desc\"\n// //         name=\"desc\"\n// //         value={formik.values.desc}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.desc && Boolean(formik.errors.desc)}\n// //         helperText={formik.touched.desc && formik.errors.desc}\n// //       />\n// //       <TextField\n// //         label=\"Enter the poster link\"\n// //         variant=\"outlined\"\n// //         id=\"poster\"\n// //         name=\"poster\"\n// //         value={formik.values.poster}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.poster && Boolean(formik.errors.poster)}\n// //         helperText={formik.touched.poster && formik.errors.poster}\n// //       />\n// //       <TextField\n// //         label=\"Enter the director name\"\n// //         variant=\"outlined\"\n// //         id=\"director\"\n// //         name=\"director\"\n// //         value={formik.values.director}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.director && Boolean(formik.errors.director)}\n// //         helperText={formik.touched.director && formik.errors.director}\n// //       />\n// //       <TextField\n// //         label=\"Enter the year of release\"\n// //         variant=\"outlined\"\n// //         id=\"yearOfRelease\"\n// //         name=\"yearOfRelease\"\n// //         value={formik.values.yearOfRelease}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// //       />\n// //       <FormControl fullWidth>\n// //         <InputLabel id=\"producer\">Producer</InputLabel>\n// //         <Select\n// //           labelId=\"producer\"\n// //           id=\"producer\"\n// //           name=\"producer\"\n// //           value={formik.values.producer}\n// //           onChange={formik.handleChange}\n// //           onBlur={formik.handleBlur}\n// //           error={formik.touched.producer && Boolean(formik.errors.producer)}\n// //         >\n// //           {producers.map((producer) => (\n// //             <MenuItem key={producer._id} value={producer._id}>\n// //               {producer.name}\n// //             </MenuItem>\n// //           ))}\n// //         </Select>\n// //       </FormControl>\n// //       <FormControl fullWidth>\n// //         <InputLabel id=\"actors\">Actors</InputLabel>\n// //         <Select\n// //           labelId=\"actors\"\n// //           id=\"actors\"\n// //           name=\"actors\"\n// //           multiple\n// //           value={formik.values.actors}\n// //           onChange={formik.handleChange}\n// //           onBlur={formik.handleBlur}\n// //           error={formik.touched.actors && Boolean(formik.errors.actors)}\n// //         >\n// //           {actors.map((actor) => (\n// //             <MenuItem key={actor._id} value={actor._id}>\n// //               {actor.name}\n// //             </MenuItem>\n// //           ))}\n// //         </Select>\n// //       </FormControl>\n// //       <Button variant=\"contained\" type=\"submit\">\n// //         Add Movie\n// //       </Button>\n// //     </form>\n// //   );\n// // }\n\n// // export default AddMovie;\n// import React, { useEffect, useState } from \"react\";\n// import { useFormik } from \"formik\";\n// import * as yup from \"yup\";\n// import {\n//   TextField,\n//   Button,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   MenuItem,\n//   CircularProgress,\n//   Box,\n// } from \"@mui/material\";\n// import { useNavigate } from \"react-router-dom\";\n// import apiService from \"./services/api.service\";\n\n// function AddMovie() {\n//   const navigate = useNavigate();\n//   const [actors, setActors] = useState([]);\n//   const [producers, setProducers] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const actorsData = await apiService.getActors();\n//         const producersData = await apiService.getProducers();\n//         setActors(actorsData);\n//         setProducers(producersData);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const movieValidationSchema = yup.object({\n//     name: yup.string().required(\"*Name field is mandatory\").min(3),\n//     desc: yup.string().required(\"*Description is mandatory\").min(1),\n//     director: yup.string().required(\"*Director field is mandatory\").min(5),\n//     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n//     yearOfRelease: yup\n//       .number()\n//       .required(\"*Year of release field is mandatory\")\n//       .min(1900, \"*Year must be after 1900\"),\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       name: \"\",\n//       desc: \"\",\n//       director: \"\",\n//       poster: \"\",\n//       yearOfRelease: \"\",\n//       producer: \"\",\n//       actors: [],\n//     },\n//     validationSchema: movieValidationSchema,\n//     onSubmit: async (values) => {\n//       try {\n//         await apiService.addMovie(values);\n//         alert(\"Movie added successfully!\");\n//         navigate(\"/\");\n//       } catch (error) {\n//         console.error(\"Error adding movie:\", error);\n//         alert(\"Failed to add movie. Please try again.\");\n//       }\n//     },\n//   });\n\n//   if (isLoading) {\n//     return (\n//       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n//         <CircularProgress />\n//       </Box>\n//     );\n//   }\n\n//   return (\n//     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n//       <TextField\n//         label=\"Enter the name\"\n//         variant=\"outlined\"\n//         id=\"name\"\n//         name=\"name\"\n//         value={formik.values.name}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.name && Boolean(formik.errors.name)}\n//         helperText={formik.touched.name && formik.errors.name}\n//       />\n//       <TextField\n//         label=\"Enter the movie Description\"\n//         variant=\"outlined\"\n//         id=\"desc\"\n//         name=\"desc\"\n//         value={formik.values.desc}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.desc && Boolean(formik.errors.desc)}\n//         helperText={formik.touched.desc && formik.errors.desc}\n//       />\n//       <TextField\n//         label=\"Enter the poster link\"\n//         variant=\"outlined\"\n//         id=\"poster\"\n//         name=\"poster\"\n//         value={formik.values.poster}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.poster && Boolean(formik.errors.poster)}\n//         helperText={formik.touched.poster && formik.errors.poster}\n//       />\n//       <TextField\n//         label=\"Enter the director name\"\n//         variant=\"outlined\"\n//         id=\"director\"\n//         name=\"director\"\n//         value={formik.values.director}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.director && Boolean(formik.errors.director)}\n//         helperText={formik.touched.director && formik.errors.director}\n//       />\n//       <TextField\n//         label=\"Enter the year of release\"\n//         variant=\"outlined\"\n//         id=\"yearOfRelease\"\n//         name=\"yearOfRelease\"\n//         value={formik.values.yearOfRelease}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n//         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n//       />\n//       <FormControl fullWidth>\n//         <InputLabel id=\"producer\">Producer</InputLabel>\n//         <Select\n//           labelId=\"producer\"\n//           id=\"producer\"\n//           name=\"producer\"\n//           value={formik.values.producer}\n//           onChange={formik.handleChange}\n//           onBlur={formik.handleBlur}\n//           error={formik.touched.producer && Boolean(formik.errors.producer)}\n//         >\n//           {producers.map((producer) => (\n//             <MenuItem key={producer._id} value={producer._id}>\n//               {producer.name}\n//             </MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//       <FormControl fullWidth>\n//         <InputLabel id=\"actors\">Actors</InputLabel>\n//         <Select\n//           labelId=\"actors\"\n//           id=\"actors\"\n//           name=\"actors\"\n//           multiple\n//           value={formik.values.actors}\n//           onChange={formik.handleChange}\n//           onBlur={formik.handleBlur}\n//           error={formik.touched.actors && Boolean(formik.errors.actors)}\n//         >\n//           {actors.map((actor) => (\n//             <MenuItem key={actor._id} value={actor._id}>\n//               {actor.name}\n//             </MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//       <Button variant=\"contained\" type=\"submit\">\n//         Add Movie\n//       </Button>\n//     </form>\n//   );\n// }\n\n// export default AddMovie;\n// src/components/AddMovie.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Button, TextField, FormControl, InputLabel, MenuItem, Select, Box, Typography } from \"@mui/material\";\nimport apiService from '../services/api.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  name: yup.string().required(\"Name field is mandatory\").min(3),\n  desc: yup.string().required(\"Description is mandatory\").min(1),\n  director: yup.string().required(\"Director field is mandatory\").min(5),\n  poster: yup.string().required(\"Poster is mandatory\").min(5),\n  yearOfRelease: yup.number().required(\"Year of release field is mandatory\").min(1900).max(new Date().getFullYear())\n});\nfunction AddMovie() {\n  _s();\n  const navigate = useNavigate();\n  const [actors, setActors] = useState([]);\n  const [producer, setProducer] = useState('');\n  const [producerList, setProducerList] = useState([]);\n  const [actorList, setActorList] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [producerData, actorData] = await Promise.all([apiService.get('/producers'), apiService.get('/actors')]);\n        setProducerList(producerData);\n        setActorList(actorData);\n      } catch (err) {\n        setError(\"Failed to fetch required data\");\n      }\n    };\n    fetchData();\n  }, []);\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      desc: \"\",\n      director: \"\",\n      poster: \"\",\n      yearOfRelease: \"\"\n    },\n    validationSchema,\n    onSubmit: async values => {\n      try {\n        await apiService.post('/movies/add-movie', {\n          ...values,\n          actors,\n          producer\n        });\n        navigate(\"/\");\n      } catch (err) {\n        setError(err.message || \"Failed to add movie\");\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 600,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1654,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1660,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Movie Name\",\n          ...formik.getFieldProps('name'),\n          error: formik.touched.name && Boolean(formik.errors.name),\n          helperText: formik.touched.name && formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1666,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Description\",\n          multiline: true,\n          rows: 4,\n          ...formik.getFieldProps('desc'),\n          error: formik.touched.desc && Boolean(formik.errors.desc),\n          helperText: formik.touched.desc && formik.errors.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1674,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Director\",\n          ...formik.getFieldProps('director'),\n          error: formik.touched.director && Boolean(formik.errors.director),\n          helperText: formik.touched.director && formik.errors.director\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1684,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Poster URL\",\n          ...formik.getFieldProps('poster'),\n          error: formik.touched.poster && Boolean(formik.errors.poster),\n          helperText: formik.touched.poster && formik.errors.poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1692,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Year of Release\",\n          type: \"number\",\n          ...formik.getFieldProps('yearOfRelease'),\n          error: formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease),\n          helperText: formik.touched.yearOfRelease && formik.errors.yearOfRelease\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Producer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1710,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: producer,\n            label: \"Producer\",\n            onChange: e => setProducer(e.target.value),\n            children: producerList.map(prod => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: prod._id,\n              children: prod.name\n            }, prod._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1717,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1711,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1709,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Actors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: actors,\n            label: \"Actors\",\n            onChange: e => setActors(e.target.value),\n            children: actorList.map(actor => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: actor._id,\n              children: actor.name\n            }, actor._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1733,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1726,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1724,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          size: \"large\",\n          sx: {\n            mt: 2\n          },\n          children: \"Add Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1740,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1665,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1658,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1653,\n    columnNumber: 5\n  }, this);\n}\n_s(AddMovie, \"QgJQVsaI6qdP2G2fy6ELknkQn80=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = AddMovie;\nexport default AddMovie;\nvar _c;\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useFormik","yup","Button","TextField","FormControl","InputLabel","MenuItem","Select","Box","Typography","apiService","jsxDEV","_jsxDEV","validationSchema","object","name","string","required","min","desc","director","poster","yearOfRelease","number","max","Date","getFullYear","AddMovie","_s","navigate","actors","setActors","producer","setProducer","producerList","setProducerList","actorList","setActorList","error","setError","fetchData","producerData","actorData","Promise","all","get","err","formik","initialValues","onSubmit","values","post","message","sx","maxWidth","mx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","color","mb","display","flexDirection","gap","fullWidth","label","getFieldProps","touched","Boolean","errors","helperText","multiline","rows","type","value","onChange","e","target","map","prod","_id","multiple","actor","size","_c","$RefreshReg$"],"sources":["/Users/jayachandran/new-imdb/imdb-clone-client/src/AddMovie.js"],"sourcesContent":["// // // // // // // // // //addmvoies.js\n\n// // // // // // // // // import React, { useEffect, useState } from \"react\";\n// // // // // // // // // import Button from \"@mui/material/Button\";\n// // // // // // // // // import TextField from \"@mui/material/TextField\";\n// // // // // // // // // import { useNavigate } from \"react-router-dom\";\n// // // // // // // // // import apiService from './services/api.service';  // Add this import\n// // // // // // // // // import { useFormik } from \"formik\";\n// // // // // // // // // import * as yup from \"yup\";\n// // // // // // // // // import {\n// // // // // // // // //   FormControl,\n// // // // // // // // //   InputLabel,\n// // // // // // // // //   MenuItem,\n// // // // // // // // //   Select,\n// // // // // // // // // } from \"@mui/material\";\n// // // // // // // // // import axios from \"axios\";\n\n\n// // // // // // // // // function AddMovie() {\n// // // // // // // // //   const navigate = useNavigate();\n// // // // // // // // //   const [actors, setactors] = useState([]);\n// // // // // // // // //   const [producer, setProducer] = useState('');\n// // // // // // // // //   const [producerArr,setProducerArr] = useState([]);\n// // // // // // // // //   const [actorNames,setActorNames] = useState([]);\n\n\n// // // // // // // // //   useEffect(()=>{\n// // // // // // // // //     getData();\n// // // // // // // // //   },[])\n\n// // // // // // // // //   const getData = async() => {\n// // // // // // // // //     const res = await axios.get(`${api.service}/producers`);\n// // // // // // // // //     const actorData = await axios.get(`${api.service}/actors`);\n// // // // // // // // //     setProducerArr(res.data);\n// // // // // // // // //     setActorNames(actorData.data);\n// // // // // // // // //   }\n\n// // // // // // // // //   const handleAgeChange = (e) => {\n// // // // // // // // //     const {value} = e.target;\n// // // // // // // // //     setProducer(value);\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleChange = (e) => {\n// // // // // // // // //     const { value } = e.target;\n// // // // // // // // //     setactors(\n// // // // // // // // //       typeof value === \"string\" ? value.split(\",\") : value\n// // // // // // // // //     );\n// // // // // // // // //   };\n\n// // // // // // // // //   const movieValidationSchema = yup.object({\n// // // // // // // // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // // // // // // // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // // // // // // // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // // // // // // // //     poster: yup.string().required(\"*Poster  is mandatory\").min(5),\n// // // // // // // // //     yearOfRelease: yup\n// // // // // // // // //       .number()\n// // // // // // // // //       .required(\"*Year of release field is mandatory\")\n// // // // // // // // //       .min(5),\n// // // // // // // // //   });\n\n// // // // // // // // //   const formik = useFormik({\n// // // // // // // // //     initialValues: {\n// // // // // // // // //       name: \"\",\n// // // // // // // // //       desc: \"\",\n// // // // // // // // //       director: \"\",\n// // // // // // // // //       poster: \"\",\n// // // // // // // // //       yearOfRelease: \"\",\n      \n// // // // // // // // //     },\n// // // // // // // // //     validationSchema: movieValidationSchema,\n// // // // // // // // //     onSubmit: async(newMovie) => {\n// // // // // // // // //       console.log(\"onSubmit : \", {...newMovie,actors,producer});\n// // // // // // // // //       await axios.post(`${api.service}/movies/add-movie`,{...newMovie,actors,producer});\n// // // // // // // // //       navigate(\"/\");\n// // // // // // // // //     },\n// // // // // // // // //   });\n\n// // // // // // // // //   return (\n// // // // // // // // //     <>\n// // // // // // // // //       <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the name\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"name\"\n// // // // // // // // //           name=\"name\"\n// // // // // // // // //           value={formik.values.name}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.name && formik.errors.name}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.name && formik.errors.name ? formik.errors.name : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the movie Description\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"desc\"\n// // // // // // // // //           name=\"desc\"\n// // // // // // // // //           value={formik.values.desc}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.desc && formik.errors.desc}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.desc && formik.errors.desc ? formik.errors.desc : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the poster link\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"poster\"\n// // // // // // // // //           name=\"poster\"\n// // // // // // // // //           value={formik.values.poster}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.poster && formik.errors.poster}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.poster && formik.errors.name\n// // // // // // // // //               ? formik.errors.poster\n// // // // // // // // //               : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the director name\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"director\"\n// // // // // // // // //           name=\"director\"\n// // // // // // // // //           value={formik.values.director}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.director && formik.errors.director}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.director && formik.errors.director\n// // // // // // // // //               ? formik.errors.director\n// // // // // // // // //               : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <TextField\n// // // // // // // // //           label=\"Enter the year of release\"\n// // // // // // // // //           variant=\"outlined\"\n// // // // // // // // //           id=\"yearOfRelease\"\n// // // // // // // // //           name=\"yearOfRelease\"\n// // // // // // // // //           value={formik.values.yearOfRelease}\n// // // // // // // // //           onChange={formik.handleChange}\n// // // // // // // // //           onBlur={formik.handleBlur}\n// // // // // // // // //           error={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // // // // // // //           helperText={\n// // // // // // // // //             formik.touched.yearOfRelease && formik.errors.yearOfRelease\n// // // // // // // // //               ? formik.errors.yearOfRelease\n// // // // // // // // //               : \"\"\n// // // // // // // // //           }\n// // // // // // // // //         />\n// // // // // // // // //         <FormControl fullWidth>\n// // // // // // // // //           <InputLabel id=\"producer\">Producer Name</InputLabel>\n// // // // // // // // //           <Select\n// // // // // // // // //             labelId=\"producer\"\n// // // // // // // // //             id=\"producer\"\n// // // // // // // // //             value={producer}\n// // // // // // // // //             label=\"producer\"\n// // // // // // // // //             onChange={handleAgeChange}\n// // // // // // // // //           >\n// // // // // // // // //             {\n// // // // // // // // //               producerArr.map((prodName)=>{\n// // // // // // // // //                 return <MenuItem value={prodName._id}>{prodName.name}</MenuItem>\n// // // // // // // // //               })\n// // // // // // // // //             }\n            \n// // // // // // // // //           </Select>\n// // // // // // // // //         </FormControl>\n// // // // // // // // //         <FormControl fullWidth >\n// // // // // // // // //           <InputLabel id=\"actor\">Select the Actor names</InputLabel>\n// // // // // // // // //           <Select\n// // // // // // // // //             labelId=\"actor\"\n// // // // // // // // //             id=\"actor\"\n// // // // // // // // //             multiple\n// // // // // // // // //             value={actors}\n// // // // // // // // //             onChange={handleChange}\n// // // // // // // // //           >\n// // // // // // // // //             {actorNames.map((actor) => (\n// // // // // // // // //               <MenuItem key={actor._id} value={actor._id}>\n// // // // // // // // //                 {actor.name}\n// // // // // // // // //               </MenuItem>\n// // // // // // // // //             ))}\n// // // // // // // // //           </Select>\n// // // // // // // // //         </FormControl>\n// // // // // // // // //         <Button variant=\"contained\" type=\"submit\">\n// // // // // // // // //           Add Movie\n// // // // // // // // //         </Button>\n// // // // // // // // //       </form>\n// // // // // // // // //     </>\n// // // // // // // // //   );\n// // // // // // // // // }\n\n// // // // // // // // // export default AddMovie;\n// // // // // // // // //addmovie.js\n// // // // // // // // import React, { useEffect, useState } from \"react\";\n// // // // // // // // import Button from \"@mui/material/Button\";\n// // // // // // // // import TextField from \"@mui/material/TextField\";\n// // // // // // // // import { useNavigate } from \"react-router-dom\";\n// // // // // // // // import { useFormik } from \"formik\";\n// // // // // // // // import * as yup from \"yup\";\n// // // // // // // // import {\n// // // // // // // //   FormControl,\n// // // // // // // //   InputLabel,\n// // // // // // // //   MenuItem,\n// // // // // // // //   Select,\n// // // // // // // // } from \"@mui/material\";\n// // // // // // // // import apiService from './services/api.service';  // Make sure this path is correct\n\n// // // // // // // // function AddMovie() {\n// // // // // // // //   const navigate = useNavigate();\n// // // // // // // //   const [actors, setActors] = useState([]);\n// // // // // // // //   const [producer, setProducer] = useState('');\n// // // // // // // //   const [producerArr, setProducerArr] = useState([]);\n// // // // // // // //   const [actorNames, setActorNames] = useState([]);\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     getData();\n// // // // // // // //   }, []);\n\n// // // // // // // //   const getData = async () => {\n// // // // // // // //     try {\n// // // // // // // //       const producerResponse = await apiService.get('/producers');\n// // // // // // // //       const actorResponse = await apiService.get('/actors');\n// // // // // // // //       setProducerArr(producerResponse.data);\n// // // // // // // //       setActorNames(actorResponse.data);\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('Error fetching data:', error);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const handleProducerChange = (e) => {\n// // // // // // // //     const { value } = e.target;\n// // // // // // // //     setProducer(value);\n// // // // // // // //   };\n\n// // // // // // // //   const handleActorsChange = (e) => {\n// // // // // // // //     const { value } = e.target;\n// // // // // // // //     setActors(typeof value === \"string\" ? value.split(\",\") : value);\n// // // // // // // //   };\n\n// // // // // // // //   const movieValidationSchema = yup.object({\n// // // // // // // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // // // // // // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // // // // // // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // // // // // // //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// // // // // // // //     yearOfRelease: yup\n// // // // // // // //       .number()\n// // // // // // // //       .required(\"*Year of release field is mandatory\")\n// // // // // // // //       .min(1900)\n// // // // // // // //       .max(new Date().getFullYear()),\n// // // // // // // //   });\n\n// // // // // // // //   const formik = useFormik({\n// // // // // // // //     initialValues: {\n// // // // // // // //       name: \"\",\n// // // // // // // //       desc: \"\",\n// // // // // // // //       director: \"\",\n// // // // // // // //       poster: \"\",\n// // // // // // // //       yearOfRelease: \"\",\n// // // // // // // //     },\n// // // // // // // //     validationSchema: movieValidationSchema,\n// // // // // // // //     onSubmit: async (newMovie) => {\n// // // // // // // //       try {\n// // // // // // // //         const movieData = { ...newMovie, actors, producer };\n// // // // // // // //         await apiService.post('/movies/add-movie', movieData);\n// // // // // // // //         navigate(\"/\");\n// // // // // // // //       } catch (error) {\n// // // // // // // //         console.error('Error adding movie:', error);\n// // // // // // // //       }\n// // // // // // // //     },\n// // // // // // // //   });\n\n// // // // // // // //   return (\n// // // // // // // //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the name\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"name\"\n// // // // // // // //         name=\"name\"\n// // // // // // // //         value={formik.values.name}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.name && formik.errors.name}\n// // // // // // // //         helperText={formik.touched.name && formik.errors.name ? formik.errors.name : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the movie Description\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"desc\"\n// // // // // // // //         name=\"desc\"\n// // // // // // // //         value={formik.values.desc}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.desc && formik.errors.desc}\n// // // // // // // //         helperText={formik.touched.desc && formik.errors.desc ? formik.errors.desc : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the poster link\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"poster\"\n// // // // // // // //         name=\"poster\"\n// // // // // // // //         value={formik.values.poster}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.poster && formik.errors.poster}\n// // // // // // // //         helperText={formik.touched.poster && formik.errors.poster ? formik.errors.poster : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the director name\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"director\"\n// // // // // // // //         name=\"director\"\n// // // // // // // //         value={formik.values.director}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.director && formik.errors.director}\n// // // // // // // //         helperText={formik.touched.director && formik.errors.director ? formik.errors.director : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <TextField\n// // // // // // // //         label=\"Enter the year of release\"\n// // // // // // // //         variant=\"outlined\"\n// // // // // // // //         id=\"yearOfRelease\"\n// // // // // // // //         name=\"yearOfRelease\"\n// // // // // // // //         type=\"number\"\n// // // // // // // //         value={formik.values.yearOfRelease}\n// // // // // // // //         onChange={formik.handleChange}\n// // // // // // // //         onBlur={formik.handleBlur}\n// // // // // // // //         error={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // // // // // //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease ? formik.errors.yearOfRelease : \"\"}\n// // // // // // // //       />\n// // // // // // // //       <FormControl fullWidth>\n// // // // // // // //         <InputLabel id=\"producer\">Producer Name</InputLabel>\n// // // // // // // //         <Select\n// // // // // // // //           labelId=\"producer\"\n// // // // // // // //           id=\"producer\"\n// // // // // // // //           value={producer}\n// // // // // // // //           label=\"Producer Name\"\n// // // // // // // //           onChange={handleProducerChange}\n// // // // // // // //         >\n// // // // // // // //           {producerArr.map((prodName) => (\n// // // // // // // //             <MenuItem key={prodName._id} value={prodName._id}>\n// // // // // // // //               {prodName.name}\n// // // // // // // //             </MenuItem>\n// // // // // // // //           ))}\n// // // // // // // //         </Select>\n// // // // // // // //       </FormControl>\n// // // // // // // //       <FormControl fullWidth>\n// // // // // // // //         <InputLabel id=\"actor\">Select the Actor names</InputLabel>\n// // // // // // // //         <Select\n// // // // // // // //           labelId=\"actor\"\n// // // // // // // //           id=\"actor\"\n// // // // // // // //           multiple\n// // // // // // // //           value={actors}\n// // // // // // // //           label=\"Select the Actor names\"\n// // // // // // // //           onChange={handleActorsChange}\n// // // // // // // //         >\n// // // // // // // //           {actorNames.map((actor) => (\n// // // // // // // //             <MenuItem key={actor._id} value={actor._id}>\n// // // // // // // //               {actor.name}\n// // // // // // // //             </MenuItem>\n// // // // // // // //           ))}\n// // // // // // // //         </Select>\n// // // // // // // //       </FormControl>\n// // // // // // // //       <Button variant=\"contained\" type=\"submit\">\n// // // // // // // //         Add Movie\n// // // // // // // //       </Button>\n// // // // // // // //     </form>\n// // // // // // // //   );\n// // // // // // // // }\n\n// // // // // // // // export default AddMovie;\n// // // // // // // // src/components/AddMovie.js\n// // // // // // // import React, { useEffect, useState } from \"react\";\n// // // // // // // import { useNavigate } from \"react-router-dom\";\n// // // // // // // import { useFormik } from \"formik\";\n// // // // // // // import * as yup from \"yup\";\n// // // // // // // import {\n// // // // // // //   Button,\n// // // // // // //   TextField,\n// // // // // // //   FormControl,\n// // // // // // //   InputLabel,\n// // // // // // //   MenuItem,\n// // // // // // //   Select,\n// // // // // // //   Box,\n// // // // // // //   Typography\n// // // // // // // } from \"@mui/material\";\n// // // // // // // import apiService from './services/api.service';\n\n// // // // // // // const validationSchema = yup.object({\n// // // // // // //   name: yup.string().required(\"Name field is mandatory\").min(3),\n// // // // // // //   desc: yup.string().required(\"Description is mandatory\").min(1),\n// // // // // // //   director: yup.string().required(\"Director field is mandatory\").min(5),\n// // // // // // //   poster: yup.string().required(\"Poster is mandatory\").min(5),\n// // // // // // //   yearOfRelease: yup\n// // // // // // //     .number()\n// // // // // // //     .required(\"Year of release field is mandatory\")\n// // // // // // //     .min(1900)\n// // // // // // //     .max(new Date().getFullYear()),\n// // // // // // // });\n\n// // // // // // // function AddMovie() {\n// // // // // // //   const navigate = useNavigate();\n// // // // // // //   const [actors, setActors] = useState([]);\n// // // // // // //   const [producer, setProducer] = useState('');\n// // // // // // //   const [producerList, setProducerList] = useState([]);\n// // // // // // //   const [actorList, setActorList] = useState([]);\n// // // // // // //   const [error, setError] = useState(\"\");\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     const fetchData = async () => {\n// // // // // // //       try {\n// // // // // // //         const [producerData, actorData] = await Promise.all([\n// // // // // // //           apiService.get('/producers'),\n// // // // // // //           apiService.get('/actors')\n// // // // // // //         ]);\n// // // // // // //         setProducerList(producerData);\n// // // // // // //         setActorList(actorData);\n// // // // // // //       } catch (err) {\n// // // // // // //         setError(\"Failed to fetch required data\");\n// // // // // // //       }\n// // // // // // //     };\n// // // // // // //     fetchData();\n// // // // // // //   }, []);\n\n// // // // // // //   const formik = useFormik({\n// // // // // // //     initialValues: {\n// // // // // // //       name: \"\",\n// // // // // // //       desc: \"\",\n// // // // // // //       director: \"\",\n// // // // // // //       poster: \"\",\n// // // // // // //       yearOfRelease: \"\",\n// // // // // // //     },\n// // // // // // //     validationSchema,\n// // // // // // //     onSubmit: async (values) => {\n// // // // // // //       try {\n// // // // // // //         await apiService.post('/movies/add-movie', {\n// // // // // // //           ...values,\n// // // // // // //           actors,\n// // // // // // //           producer\n// // // // // // //         });\n// // // // // // //         navigate(\"/\");\n// // // // // // //       } catch (err) {\n// // // // // // //         setError(err.message || \"Failed to add movie\");\n// // // // // // //       }\n// // // // // // //     },\n// // // // // // //   });\n\n// // // // // // //   return (\n// // // // // // //     <Box sx={{ maxWidth: 600, mx: 'auto', mt: 4 }}>\n// // // // // // //       <Typography variant=\"h4\" gutterBottom>\n// // // // // // //         Add Movie\n// // // // // // //       </Typography>\n\n// // // // // // //       <form onSubmit={formik.handleSubmit}>\n// // // // // // //         {error && (\n// // // // // // //           <Typography color=\"error\" sx={{ mb: 2 }}>\n// // // // // // //             {error}\n// // // // // // //           </Typography>\n// // // // // // //         )}\n\n// // // // // // //         <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Movie Name\"\n// // // // // // //             {...formik.getFieldProps('name')}\n// // // // // // //             error={formik.touched.name && Boolean(formik.errors.name)}\n// // // // // // //             helperText={formik.touched.name && formik.errors.name}\n// // // // // // //           />\n\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Description\"\n// // // // // // //             multiline\n// // // // // // //             rows={4}\n// // // // // // //             {...formik.getFieldProps('desc')}\n// // // // // // //             error={formik.touched.desc && Boolean(formik.errors.desc)}\n// // // // // // //             helperText={formik.touched.desc && formik.errors.desc}\n// // // // // // //           />\n\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Director\"\n// // // // // // //             {...formik.getFieldProps('director')}\n// // // // // // //             error={formik.touched.director && Boolean(formik.errors.director)}\n// // // // // // //             helperText={formik.touched.director && formik.errors.director}\n// // // // // // //           />\n\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Poster URL\"\n// // // // // // //             {...formik.getFieldProps('poster')}\n// // // // // // //             error={formik.touched.poster && Boolean(formik.errors.poster)}\n// // // // // // //             helperText={formik.touched.poster && formik.errors.poster}\n// // // // // // //           />\n\n// // // // // // //           <TextField\n// // // // // // //             fullWidth\n// // // // // // //             label=\"Year of Release\"\n// // // // // // //             type=\"number\"\n// // // // // // //             {...formik.getFieldProps('yearOfRelease')}\n// // // // // // //             error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// // // // // // //             helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // // // // //           />\n\n// // // // // // //           <FormControl fullWidth>\n// // // // // // //             <InputLabel>Producer</InputLabel>\n// // // // // // //             <Select\n// // // // // // //               value={producer}\n// // // // // // //               label=\"Producer\"\n// // // // // // //               onChange={(e) => setProducer(e.target.value)}\n// // // // // // //             >\n// // // // // // //               {producerList.map((prod) => (\n// // // // // // //                 <MenuItem key={prod._id} value={prod._id}>\n// // // // // // //                   {prod.name}\n// // // // // // //                 </MenuItem>\n// // // // // // //               ))}\n// // // // // // //             </Select>\n// // // // // // //           </FormControl>\n\n// // // // // // //           <FormControl fullWidth>\n// // // // // // //             <InputLabel>Actors</InputLabel>\n// // // // // // //             <Select\n// // // // // // //               multiple\n// // // // // // //               value={actors}\n// // // // // // //               label=\"Actors\"\n// // // // // // //               onChange={(e) => setActors(e.target.value)}\n// // // // // // //             >\n// // // // // // //               {actorList.map((actor) => (\n// // // // // // //                 <MenuItem key={actor._id} value={actor._id}>\n// // // // // // //                   {actor.name}\n// // // // // // //                 </MenuItem>\n// // // // // // //               ))}\n// // // // // // //             </Select>\n// // // // // // //           </FormControl>\n\n// // // // // // //           <Button\n// // // // // // //             variant=\"contained\"\n// // // // // // //             type=\"submit\"\n// // // // // // //             size=\"large\"\n// // // // // // //             sx={{ mt: 2 }}\n// // // // // // //           >\n// // // // // // //             Add Movie\n// // // // // // //           </Button>\n// // // // // // //         </Box>\n// // // // // // //       </form>\n// // // // // // //     </Box>\n// // // // // // //   );\n// // // // // // // }\n\n// // // // // // // export default AddMovie;\n// // // // // // import React, { useEffect, useState } from \"react\";\n// // // // // // import { useNavigate } from \"react-router-dom\";\n// // // // // // import { useFormik } from \"formik\";\n// // // // // // import * as yup from \"yup\";\n// // // // // // import {\n// // // // // //   Button,\n// // // // // //   TextField,\n// // // // // //   FormControl,\n// // // // // //   InputLabel,\n// // // // // //   MenuItem,\n// // // // // //   Select,\n// // // // // //   Box,\n// // // // // //   Typography\n// // // // // // } from \"@mui/material\";\n// // // // // // import apiService from \"./services/api.service\";\n\n// // // // // // const validationSchema = yup.object({\n// // // // // //   name: yup.string().required(\"Name field is mandatory\").min(3),\n// // // // // //   desc: yup.string().required(\"Description is mandatory\").min(1),\n// // // // // //   director: yup.string().required(\"Director field is mandatory\").min(5),\n// // // // // //   poster: yup.string().required(\"Poster is mandatory\").min(5),\n// // // // // //   yearOfRelease: yup\n// // // // // //     .number()\n// // // // // //     .required(\"Year of release field is mandatory\")\n// // // // // //     .min(1900)\n// // // // // //     .max(new Date().getFullYear()),\n// // // // // // });\n\n// // // // // // function AddMovie() {\n// // // // // //   const navigate = useNavigate();\n// // // // // //   const [actors, setActors] = useState([]);\n// // // // // //   const [producer, setProducer] = useState(\"\");\n// // // // // //   const [producerList, setProducerList] = useState([]);\n// // // // // //   const [actorList, setActorList] = useState([]);\n// // // // // //   const [error, setError] = useState(\"\");\n\n// // // // // //   useEffect(() => {\n// // // // // //     const fetchData = async () => {\n// // // // // //       try {\n// // // // // //         const [producerData, actorData] = await Promise.all([\n// // // // // //           apiService.get(\"/producers\"),\n// // // // // //           apiService.get(\"/actors\"),\n// // // // // //         ]);\n// // // // // //         setProducerList(producerData.data);\n// // // // // //         setActorList(actorData.data);\n// // // // // //       } catch (err) {\n// // // // // //         setError(\"Failed to fetch required data\");\n// // // // // //       }\n// // // // // //     };\n// // // // // //     fetchData();\n// // // // // //   }, []);\n\n// // // // // //   const formik = useFormik({\n// // // // // //     initialValues: {\n// // // // // //       name: \"\",\n// // // // // //       desc: \"\",\n// // // // // //       director: \"\",\n// // // // // //       poster: \"\",\n// // // // // //       yearOfRelease: \"\",\n// // // // // //     },\n// // // // // //     validationSchema,\n// // // // // //     onSubmit: async (values) => {\n// // // // // //       try {\n// // // // // //         await apiService.post(\"/movies/add-movie\", {\n// // // // // //           ...values,\n// // // // // //           actors,\n// // // // // //           producer,\n// // // // // //         });\n// // // // // //         navigate(\"/\");\n// // // // // //       } catch (err) {\n// // // // // //         setError(err.response?.data?.message || \"Failed to add movie\");\n// // // // // //       }\n// // // // // //     },\n// // // // // //   });\n\n// // // // // //   return (\n// // // // // //     <Box sx={{ maxWidth: 600, mx: \"auto\", mt: 4 }}>\n// // // // // //       <Typography variant=\"h4\" gutterBottom>\n// // // // // //         Add Movie\n// // // // // //       </Typography>\n// // // // // //       <form onSubmit={formik.handleSubmit}>\n// // // // // //         {error && <Typography color=\"error\">{error}</Typography>}\n// // // // // //         <TextField label=\"Movie Name\" {...formik.getFieldProps(\"name\")} fullWidth />\n// // // // // //         <TextField label=\"Description\" {...formik.getFieldProps(\"desc\")} fullWidth multiline rows={4} />\n// // // // // //         <TextField label=\"Director\" {...formik.getFieldProps(\"director\")} fullWidth />\n// // // // // //         <TextField label=\"Poster URL\" {...formik.getFieldProps(\"poster\")} fullWidth />\n// // // // // //         <TextField label=\"Year of Release\" type=\"number\" {...formik.getFieldProps(\"yearOfRelease\")} fullWidth />\n// // // // // //         <FormControl fullWidth>\n// // // // // //           <InputLabel>Producer</InputLabel>\n// // // // // //           <Select value={producer} onChange={(e) => setProducer(e.target.value)}>\n// // // // // //             {producerList.map((prod) => (\n// // // // // //               <MenuItem key={prod._id} value={prod._id}>{prod.name}</MenuItem>\n// // // // // //             ))}\n// // // // // //           </Select>\n// // // // // //         </FormControl>\n// // // // // //         <FormControl fullWidth>\n// // // // // //           <InputLabel>Actors</InputLabel>\n// // // // // //           <Select multiple value={actors} onChange={(e) => setActors(e.target.value)}>\n// // // // // //             {actorList.map((actor) => (\n// // // // // //               <MenuItem key={actor._id} value={actor._id}>{actor.name}</MenuItem>\n// // // // // //             ))}\n// // // // // //           </Select>\n// // // // // //         </FormControl>\n// // // // // //         <Button variant=\"contained\" type=\"submit\" fullWidth>\n// // // // // //           Add Movie\n// // // // // //         </Button>\n// // // // // //       </form>\n// // // // // //     </Box>\n// // // // // //   );\n// // // // // // }\n\n// // // // // // export default AddMovie;\n// // // // // import React, { useEffect, useState } from \"react\";\n// // // // // import { useFormik } from \"formik\";\n// // // // // import * as yup from \"yup\";\n// // // // // import {\n// // // // //   TextField,\n// // // // //   Button,\n// // // // //   FormControl,\n// // // // //   InputLabel,\n// // // // //   Select,\n// // // // //   MenuItem,\n// // // // //   CircularProgress,\n// // // // //   Box,\n// // // // // } from \"@mui/material\";\n// // // // // import apiService from \"./services/api.service\"; // Import apiService\n\n// // // // // function AddMovie() {\n// // // // //   const [actors, setActors] = useState([]);\n// // // // //   const [producers, setProducers] = useState([]);\n// // // // //   const [isLoading, setIsLoading] = useState(true); // Add loading state\n\n// // // // //   useEffect(() => {\n// // // // //     fetchData();\n// // // // //   }, []);\n\n// // // // //   const fetchData = async () => {\n// // // // //     try {\n// // // // //       const actorsData = await apiService.getActors(); // Fetch actors\n// // // // //       const producersData = await apiService.getProducers(); // Fetch producers\n// // // // //       setActors(actorsData);\n// // // // //       setProducers(producersData);\n// // // // //     } catch (error) {\n// // // // //       console.error(\"Error fetching data:\", error);\n// // // // //     } finally {\n// // // // //       setIsLoading(false); // Set loading to false after fetching\n// // // // //     }\n// // // // //   };\n\n// // // // //   const movieValidationSchema = yup.object({\n// // // // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // // // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // // // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // // // //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// // // // //     yearOfRelease: yup\n// // // // //       .number()\n// // // // //       .required(\"*Year of release field is mandatory\")\n// // // // //       .min(1900, \"*Year must be after 1900\"),\n// // // // //   });\n\n// // // // //   const formik = useFormik({\n// // // // //     initialValues: {\n// // // // //       name: \"\",\n// // // // //       desc: \"\",\n// // // // //       director: \"\",\n// // // // //       poster: \"\",\n// // // // //       yearOfRelease: \"\",\n// // // // //       producer: \"\",\n// // // // //       actors: [],\n// // // // //     },\n// // // // //     validationSchema: movieValidationSchema,\n// // // // //     onSubmit: async (values) => {\n// // // // //       try {\n// // // // //         await apiService.addMovie(values); // Add movie using apiService\n// // // // //         alert(\"Movie added successfully!\");\n// // // // //         formik.resetForm();\n// // // // //       } catch (error) {\n// // // // //         console.error(\"Error adding movie:\", error);\n// // // // //         alert(\"Failed to add movie. Please try again.\");\n// // // // //       }\n// // // // //     },\n// // // // //   });\n\n// // // // //   if (isLoading) {\n// // // // //     return (\n// // // // //       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n// // // // //         <CircularProgress />\n// // // // //       </Box>\n// // // // //     );\n// // // // //   }\n\n// // // // //   return (\n// // // // //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // // // //       <TextField\n// // // // //         label=\"Enter the name\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"name\"\n// // // // //         name=\"name\"\n// // // // //         value={formik.values.name}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.name && Boolean(formik.errors.name)}\n// // // // //         helperText={formik.touched.name && formik.errors.name}\n// // // // //       />\n// // // // //       <TextField\n// // // // //         label=\"Enter the movie Description\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"desc\"\n// // // // //         name=\"desc\"\n// // // // //         value={formik.values.desc}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.desc && Boolean(formik.errors.desc)}\n// // // // //         helperText={formik.touched.desc && formik.errors.desc}\n// // // // //       />\n// // // // //       <TextField\n// // // // //         label=\"Enter the poster link\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"poster\"\n// // // // //         name=\"poster\"\n// // // // //         value={formik.values.poster}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.poster && Boolean(formik.errors.poster)}\n// // // // //         helperText={formik.touched.poster && formik.errors.poster}\n// // // // //       />\n// // // // //       <TextField\n// // // // //         label=\"Enter the director name\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"director\"\n// // // // //         name=\"director\"\n// // // // //         value={formik.values.director}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.director && Boolean(formik.errors.director)}\n// // // // //         helperText={formik.touched.director && formik.errors.director}\n// // // // //       />\n// // // // //       <TextField\n// // // // //         label=\"Enter the year of release\"\n// // // // //         variant=\"outlined\"\n// // // // //         id=\"yearOfRelease\"\n// // // // //         name=\"yearOfRelease\"\n// // // // //         value={formik.values.yearOfRelease}\n// // // // //         onChange={formik.handleChange}\n// // // // //         onBlur={formik.handleBlur}\n// // // // //         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// // // // //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // // //       />\n// // // // //       <FormControl fullWidth>\n// // // // //         <InputLabel id=\"producer\">Producer</InputLabel>\n// // // // //         <Select\n// // // // //           labelId=\"producer\"\n// // // // //           id=\"producer\"\n// // // // //           name=\"producer\"\n// // // // //           value={formik.values.producer}\n// // // // //           onChange={formik.handleChange}\n// // // // //           onBlur={formik.handleBlur}\n// // // // //           error={formik.touched.producer && Boolean(formik.errors.producer)}\n// // // // //         >\n// // // // //           {producers.map((producer) => (\n// // // // //             <MenuItem key={producer._id} value={producer._id}>\n// // // // //               {producer.name}\n// // // // //             </MenuItem>\n// // // // //           ))}\n// // // // //         </Select>\n// // // // //       </FormControl>\n// // // // //       <FormControl fullWidth>\n// // // // //         <InputLabel id=\"actors\">Actors</InputLabel>\n// // // // //         <Select\n// // // // //           labelId=\"actors\"\n// // // // //           id=\"actors\"\n// // // // //           name=\"actors\"\n// // // // //           multiple\n// // // // //           value={formik.values.actors}\n// // // // //           onChange={formik.handleChange}\n// // // // //           onBlur={formik.handleBlur}\n// // // // //           error={formik.touched.actors && Boolean(formik.errors.actors)}\n// // // // //         >\n// // // // //           {actors.map((actor) => (\n// // // // //             <MenuItem key={actor._id} value={actor._id}>\n// // // // //               {actor.name}\n// // // // //             </MenuItem>\n// // // // //           ))}\n// // // // //         </Select>\n// // // // //       </FormControl>\n// // // // //       <Button variant=\"contained\" type=\"submit\">\n// // // // //         Add Movie\n// // // // //       </Button>\n// // // // //     </form>\n// // // // //   );\n// // // // // }\n\n// // // // // export default AddMovie;\n// // // // import React, { useEffect, useState } from \"react\";\n// // // // import { useFormik } from \"formik\";\n// // // // import * as yup from \"yup\";\n// // // // import {\n// // // //   TextField,\n// // // //   Button,\n// // // //   FormControl,\n// // // //   InputLabel,\n// // // //   Select,\n// // // //   MenuItem,\n// // // //   CircularProgress,\n// // // //   Box,\n// // // // } from \"@mui/material\";\n// // // // import apiService from \"./services/api.service\"; // Import apiService\n\n// // // // function AddMovie() {\n// // // //   const [actors, setActors] = useState([]);\n// // // //   const [producers, setProducers] = useState([]);\n// // // //   const [isLoading, setIsLoading] = useState(true); // Add loading state\n\n// // // //   useEffect(() => {\n// // // //     fetchData();\n// // // //   }, []);\n\n// // // //   const fetchData = async () => {\n// // // //     try {\n// // // //       const actorsData = await apiService.getActors(); // Fetch actors\n// // // //       const producersData = await apiService.getProducers(); // Fetch producers\n// // // //       setActors(actorsData);\n// // // //       setProducers(producersData);\n// // // //     } catch (error) {\n// // // //       console.error(\"Error fetching data:\", error);\n// // // //     } finally {\n// // // //       setIsLoading(false); // Set loading to false after fetching\n// // // //     }\n// // // //   };\n\n// // // //   const movieValidationSchema = yup.object({\n// // // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // // //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// // // //     yearOfRelease: yup\n// // // //       .number()\n// // // //       .required(\"*Year of release field is mandatory\")\n// // // //       .min(1900, \"*Year must be after 1900\"),\n// // // //   });\n\n// // // //   const formik = useFormik({\n// // // //     initialValues: {\n// // // //       name: \"\",\n// // // //       desc: \"\",\n// // // //       director: \"\",\n// // // //       poster: \"\",\n// // // //       yearOfRelease: \"\",\n// // // //       producer: \"\",\n// // // //       actors: [],\n// // // //     },\n// // // //     validationSchema: movieValidationSchema,\n// // // //     onSubmit: async (values) => {\n// // // //       try {\n// // // //         await apiService.addMovie(values); // Add movie using apiService\n// // // //         alert(\"Movie added successfully!\");\n// // // //         formik.resetForm();\n// // // //       } catch (error) {\n// // // //         console.error(\"Error adding movie:\", error);\n// // // //         alert(\"Failed to add movie. Please try again.\");\n// // // //       }\n// // // //     },\n// // // //   });\n\n// // // //   if (isLoading) {\n// // // //     return (\n// // // //       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n// // // //         <CircularProgress />\n// // // //       </Box>\n// // // //     );\n// // // //   }\n\n// // // //   return (\n// // // //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // // //       <TextField\n// // // //         label=\"Enter the name\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"name\"\n// // // //         name=\"name\"\n// // // //         value={formik.values.name}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.name && Boolean(formik.errors.name)}\n// // // //         helperText={formik.touched.name && formik.errors.name}\n// // // //       />\n// // // //       <TextField\n// // // //         label=\"Enter the movie Description\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"desc\"\n// // // //         name=\"desc\"\n// // // //         value={formik.values.desc}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.desc && Boolean(formik.errors.desc)}\n// // // //         helperText={formik.touched.desc && formik.errors.desc}\n// // // //       />\n// // // //       <TextField\n// // // //         label=\"Enter the poster link\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"poster\"\n// // // //         name=\"poster\"\n// // // //         value={formik.values.poster}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.poster && Boolean(formik.errors.poster)}\n// // // //         helperText={formik.touched.poster && formik.errors.poster}\n// // // //       />\n// // // //       <TextField\n// // // //         label=\"Enter the director name\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"director\"\n// // // //         name=\"director\"\n// // // //         value={formik.values.director}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.director && Boolean(formik.errors.director)}\n// // // //         helperText={formik.touched.director && formik.errors.director}\n// // // //       />\n// // // //       <TextField\n// // // //         label=\"Enter the year of release\"\n// // // //         variant=\"outlined\"\n// // // //         id=\"yearOfRelease\"\n// // // //         name=\"yearOfRelease\"\n// // // //         value={formik.values.yearOfRelease}\n// // // //         onChange={formik.handleChange}\n// // // //         onBlur={formik.handleBlur}\n// // // //         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// // // //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // // //       />\n// // // //       <FormControl fullWidth>\n// // // //         <InputLabel id=\"producer\">Producer</InputLabel>\n// // // //         <Select\n// // // //           labelId=\"producer\"\n// // // //           id=\"producer\"\n// // // //           name=\"producer\"\n// // // //           value={formik.values.producer}\n// // // //           onChange={formik.handleChange}\n// // // //           onBlur={formik.handleBlur}\n// // // //           error={formik.touched.producer && Boolean(formik.errors.producer)}\n// // // //         >\n// // // //           {producers.map((producer) => (\n// // // //             <MenuItem key={producer._id} value={producer._id}>\n// // // //               {producer.name}\n// // // //             </MenuItem>\n// // // //           ))}\n// // // //         </Select>\n// // // //       </FormControl>\n// // // //       <FormControl fullWidth>\n// // // //         <InputLabel id=\"actors\">Actors</InputLabel>\n// // // //         <Select\n// // // //           labelId=\"actors\"\n// // // //           id=\"actors\"\n// // // //           name=\"actors\"\n// // // //           multiple\n// // // //           value={formik.values.actors}\n// // // //           onChange={formik.handleChange}\n// // // //           onBlur={formik.handleBlur}\n// // // //           error={formik.touched.actors && Boolean(formik.errors.actors)}\n// // // //         >\n// // // //           {actors.map((actor) => (\n// // // //             <MenuItem key={actor._id} value={actor._id}>\n// // // //               {actor.name}\n// // // //             </MenuItem>\n// // // //           ))}\n// // // //         </Select>\n// // // //       </FormControl>\n// // // //       <Button variant=\"contained\" type=\"submit\">\n// // // //         Add Movie\n// // // //       </Button>\n// // // //     </form>\n// // // //   );\n// // // // }\n\n// // // // export default AddMovie;\n// // // import React, { useEffect, useState } from \"react\";\n// // // import { useFormik } from \"formik\";\n// // // import * as yup from \"yup\";\n// // // import {\n// // //   TextField,\n// // //   Button,\n// // //   FormControl,\n// // //   InputLabel,\n// // //   Select,\n// // //   MenuItem,\n// // //   CircularProgress,\n// // //   Box,\n// // // } from \"@mui/material\";\n// // // import apiService from \"./services/api.service\"; // Import apiService\n\n// // // function AddMovie() {\n// // //   const [actors, setActors] = useState([]);\n// // //   const [producers, setProducers] = useState([]);\n// // //   const [isLoading, setIsLoading] = useState(true); // Add loading state\n\n// // //   useEffect(() => {\n// // //     fetchData();\n// // //   }, []);\n\n// // //   const fetchData = async () => {\n// // //     try {\n// // //       const actorsData = await apiService.getActors(); // Fetch actors\n// // //       const producersData = await apiService.getProducers(); // Fetch producers\n// // //       setActors(actorsData);\n// // //       setProducers(producersData);\n// // //     } catch (error) {\n// // //       console.error(\"Error fetching data:\", error);\n// // //     } finally {\n// // //       setIsLoading(false); // Set loading to false after fetching\n// // //     }\n// // //   };\n\n// // //   const movieValidationSchema = yup.object({\n// // //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// // //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// // //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// // //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// // //     yearOfRelease: yup\n// // //       .number()\n// // //       .required(\"*Year of release field is mandatory\")\n// // //       .min(1900, \"*Year must be after 1900\"),\n// // //   });\n\n// // //   const formik = useFormik({\n// // //     initialValues: {\n// // //       name: \"\",\n// // //       desc: \"\",\n// // //       director: \"\",\n// // //       poster: \"\",\n// // //       yearOfRelease: \"\",\n// // //       producer: \"\",\n// // //       actors: [],\n// // //     },\n// // //     validationSchema: movieValidationSchema,\n// // //     onSubmit: async (values) => {\n// // //       try {\n// // //         await apiService.addMovie(values); // Add movie using apiService\n// // //         alert(\"Movie added successfully!\");\n// // //         formik.resetForm();\n// // //       } catch (error) {\n// // //         console.error(\"Error adding movie:\", error);\n// // //         alert(\"Failed to add movie. Please try again.\");\n// // //       }\n// // //     },\n// // //   });\n\n// // //   if (isLoading) {\n// // //     return (\n// // //       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n// // //         <CircularProgress />\n// // //       </Box>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// // //       <TextField\n// // //         label=\"Enter the name\"\n// // //         variant=\"outlined\"\n// // //         id=\"name\"\n// // //         name=\"name\"\n// // //         value={formik.values.name}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.name && Boolean(formik.errors.name)}\n// // //         helperText={formik.touched.name && formik.errors.name}\n// // //       />\n// // //       <TextField\n// // //         label=\"Enter the movie Description\"\n// // //         variant=\"outlined\"\n// // //         id=\"desc\"\n// // //         name=\"desc\"\n// // //         value={formik.values.desc}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.desc && Boolean(formik.errors.desc)}\n// // //         helperText={formik.touched.desc && formik.errors.desc}\n// // //       />\n// // //       <TextField\n// // //         label=\"Enter the poster link\"\n// // //         variant=\"outlined\"\n// // //         id=\"poster\"\n// // //         name=\"poster\"\n// // //         value={formik.values.poster}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.poster && Boolean(formik.errors.poster)}\n// // //         helperText={formik.touched.poster && formik.errors.poster}\n// // //       />\n// // //       <TextField\n// // //         label=\"Enter the director name\"\n// // //         variant=\"outlined\"\n// // //         id=\"director\"\n// // //         name=\"director\"\n// // //         value={formik.values.director}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.director && Boolean(formik.errors.director)}\n// // //         helperText={formik.touched.director && formik.errors.director}\n// // //       />\n// // //       <TextField\n// // //         label=\"Enter the year of release\"\n// // //         variant=\"outlined\"\n// // //         id=\"yearOfRelease\"\n// // //         name=\"yearOfRelease\"\n// // //         value={formik.values.yearOfRelease}\n// // //         onChange={formik.handleChange}\n// // //         onBlur={formik.handleBlur}\n// // //         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// // //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// // //       />\n// // //       <FormControl fullWidth>\n// // //         <InputLabel id=\"producer\">Producer</InputLabel>\n// // //         <Select\n// // //           labelId=\"producer\"\n// // //           id=\"producer\"\n// // //           name=\"producer\"\n// // //           value={formik.values.producer}\n// // //           onChange={formik.handleChange}\n// // //           onBlur={formik.handleBlur}\n// // //           error={formik.touched.producer && Boolean(formik.errors.producer)}\n// // //         >\n// // //           {producers.map((producer) => (\n// // //             <MenuItem key={producer._id} value={producer._id}>\n// // //               {producer.name}\n// // //             </MenuItem>\n// // //           ))}\n// // //         </Select>\n// // //       </FormControl>\n// // //       <FormControl fullWidth>\n// // //         <InputLabel id=\"actors\">Actors</InputLabel>\n// // //         <Select\n// // //           labelId=\"actors\"\n// // //           id=\"actors\"\n// // //           name=\"actors\"\n// // //           multiple\n// // //           value={formik.values.actors}\n// // //           onChange={formik.handleChange}\n// // //           onBlur={formik.handleBlur}\n// // //           error={formik.touched.actors && Boolean(formik.errors.actors)}\n// // //         >\n// // //           {actors.map((actor) => (\n// // //             <MenuItem key={actor._id} value={actor._id}>\n// // //               {actor.name}\n// // //             </MenuItem>\n// // //           ))}\n// // //         </Select>\n// // //       </FormControl>\n// // //       <Button variant=\"contained\" type=\"submit\">\n// // //         Add Movie\n// // //       </Button>\n// // //     </form>\n// // //   );\n// // // }\n\n// // // export default AddMovie;\n// // import React, { useEffect, useState } from \"react\";\n// // import { useFormik } from \"formik\";\n// // import * as yup from \"yup\";\n// // import {\n// //   TextField,\n// //   Button,\n// //   FormControl,\n// //   InputLabel,\n// //   Select,\n// //   MenuItem,\n// //   CircularProgress,\n// //   Box,\n// // } from \"@mui/material\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import apiService from \"./services/api.service\"; // Import apiService\n\n// // function AddMovie() {\n// //   const navigate = useNavigate();\n// //   const [actors, setActors] = useState([]);\n// //   const [producers, setProducers] = useState([]);\n// //   const [isLoading, setIsLoading] = useState(true);\n\n// //   // Fetch actors and producers on component mount\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       try {\n// //         const actorsData = await apiService.getActors();\n// //         const producersData = await apiService.getProducers();\n// //         setActors(actorsData);\n// //         setProducers(producersData);\n// //       } catch (error) {\n// //         console.error(\"Error fetching data:\", error);\n// //       } finally {\n// //         setIsLoading(false);\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, []);\n\n// //   // Form validation schema\n// //   const movieValidationSchema = yup.object({\n// //     name: yup.string().required(\"*Name field is mandatory\").min(3),\n// //     desc: yup.string().required(\"*Description is mandatory\").min(1),\n// //     director: yup.string().required(\"*Director field is mandatory\").min(5),\n// //     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n// //     yearOfRelease: yup\n// //       .number()\n// //       .required(\"*Year of release field is mandatory\")\n// //       .min(1900, \"*Year must be after 1900\"),\n// //   });\n\n// //   // Formik form handling\n// //   const formik = useFormik({\n// //     initialValues: {\n// //       name: \"\",\n// //       desc: \"\",\n// //       director: \"\",\n// //       poster: \"\",\n// //       yearOfRelease: \"\",\n// //       producer: \"\",\n// //       actors: [],\n// //     },\n// //     validationSchema: movieValidationSchema,\n// //     onSubmit: async (values) => {\n// //       try {\n// //         await apiService.addMovie(values);\n// //         alert(\"Movie added successfully!\");\n// //         navigate(\"/\");\n// //       } catch (error) {\n// //         console.error(\"Error adding movie:\", error);\n// //         alert(\"Failed to add movie. Please try again.\");\n// //       }\n// //     },\n// //   });\n\n// //   // Show loading spinner while fetching data\n// //   if (isLoading) {\n// //     return (\n// //       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n// //         <CircularProgress />\n// //       </Box>\n// //     );\n// //   }\n\n// //   return (\n// //     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n// //       <TextField\n// //         label=\"Enter the name\"\n// //         variant=\"outlined\"\n// //         id=\"name\"\n// //         name=\"name\"\n// //         value={formik.values.name}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.name && Boolean(formik.errors.name)}\n// //         helperText={formik.touched.name && formik.errors.name}\n// //       />\n// //       <TextField\n// //         label=\"Enter the movie Description\"\n// //         variant=\"outlined\"\n// //         id=\"desc\"\n// //         name=\"desc\"\n// //         value={formik.values.desc}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.desc && Boolean(formik.errors.desc)}\n// //         helperText={formik.touched.desc && formik.errors.desc}\n// //       />\n// //       <TextField\n// //         label=\"Enter the poster link\"\n// //         variant=\"outlined\"\n// //         id=\"poster\"\n// //         name=\"poster\"\n// //         value={formik.values.poster}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.poster && Boolean(formik.errors.poster)}\n// //         helperText={formik.touched.poster && formik.errors.poster}\n// //       />\n// //       <TextField\n// //         label=\"Enter the director name\"\n// //         variant=\"outlined\"\n// //         id=\"director\"\n// //         name=\"director\"\n// //         value={formik.values.director}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.director && Boolean(formik.errors.director)}\n// //         helperText={formik.touched.director && formik.errors.director}\n// //       />\n// //       <TextField\n// //         label=\"Enter the year of release\"\n// //         variant=\"outlined\"\n// //         id=\"yearOfRelease\"\n// //         name=\"yearOfRelease\"\n// //         value={formik.values.yearOfRelease}\n// //         onChange={formik.handleChange}\n// //         onBlur={formik.handleBlur}\n// //         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n// //         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n// //       />\n// //       <FormControl fullWidth>\n// //         <InputLabel id=\"producer\">Producer</InputLabel>\n// //         <Select\n// //           labelId=\"producer\"\n// //           id=\"producer\"\n// //           name=\"producer\"\n// //           value={formik.values.producer}\n// //           onChange={formik.handleChange}\n// //           onBlur={formik.handleBlur}\n// //           error={formik.touched.producer && Boolean(formik.errors.producer)}\n// //         >\n// //           {producers.map((producer) => (\n// //             <MenuItem key={producer._id} value={producer._id}>\n// //               {producer.name}\n// //             </MenuItem>\n// //           ))}\n// //         </Select>\n// //       </FormControl>\n// //       <FormControl fullWidth>\n// //         <InputLabel id=\"actors\">Actors</InputLabel>\n// //         <Select\n// //           labelId=\"actors\"\n// //           id=\"actors\"\n// //           name=\"actors\"\n// //           multiple\n// //           value={formik.values.actors}\n// //           onChange={formik.handleChange}\n// //           onBlur={formik.handleBlur}\n// //           error={formik.touched.actors && Boolean(formik.errors.actors)}\n// //         >\n// //           {actors.map((actor) => (\n// //             <MenuItem key={actor._id} value={actor._id}>\n// //               {actor.name}\n// //             </MenuItem>\n// //           ))}\n// //         </Select>\n// //       </FormControl>\n// //       <Button variant=\"contained\" type=\"submit\">\n// //         Add Movie\n// //       </Button>\n// //     </form>\n// //   );\n// // }\n\n// // export default AddMovie;\n// import React, { useEffect, useState } from \"react\";\n// import { useFormik } from \"formik\";\n// import * as yup from \"yup\";\n// import {\n//   TextField,\n//   Button,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   MenuItem,\n//   CircularProgress,\n//   Box,\n// } from \"@mui/material\";\n// import { useNavigate } from \"react-router-dom\";\n// import apiService from \"./services/api.service\";\n\n// function AddMovie() {\n//   const navigate = useNavigate();\n//   const [actors, setActors] = useState([]);\n//   const [producers, setProducers] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const actorsData = await apiService.getActors();\n//         const producersData = await apiService.getProducers();\n//         setActors(actorsData);\n//         setProducers(producersData);\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const movieValidationSchema = yup.object({\n//     name: yup.string().required(\"*Name field is mandatory\").min(3),\n//     desc: yup.string().required(\"*Description is mandatory\").min(1),\n//     director: yup.string().required(\"*Director field is mandatory\").min(5),\n//     poster: yup.string().required(\"*Poster is mandatory\").min(5),\n//     yearOfRelease: yup\n//       .number()\n//       .required(\"*Year of release field is mandatory\")\n//       .min(1900, \"*Year must be after 1900\"),\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       name: \"\",\n//       desc: \"\",\n//       director: \"\",\n//       poster: \"\",\n//       yearOfRelease: \"\",\n//       producer: \"\",\n//       actors: [],\n//     },\n//     validationSchema: movieValidationSchema,\n//     onSubmit: async (values) => {\n//       try {\n//         await apiService.addMovie(values);\n//         alert(\"Movie added successfully!\");\n//         navigate(\"/\");\n//       } catch (error) {\n//         console.error(\"Error adding movie:\", error);\n//         alert(\"Failed to add movie. Please try again.\");\n//       }\n//     },\n//   });\n\n//   if (isLoading) {\n//     return (\n//       <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n//         <CircularProgress />\n//       </Box>\n//     );\n//   }\n\n//   return (\n//     <form onSubmit={formik.handleSubmit} className=\"formGroup\">\n//       <TextField\n//         label=\"Enter the name\"\n//         variant=\"outlined\"\n//         id=\"name\"\n//         name=\"name\"\n//         value={formik.values.name}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.name && Boolean(formik.errors.name)}\n//         helperText={formik.touched.name && formik.errors.name}\n//       />\n//       <TextField\n//         label=\"Enter the movie Description\"\n//         variant=\"outlined\"\n//         id=\"desc\"\n//         name=\"desc\"\n//         value={formik.values.desc}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.desc && Boolean(formik.errors.desc)}\n//         helperText={formik.touched.desc && formik.errors.desc}\n//       />\n//       <TextField\n//         label=\"Enter the poster link\"\n//         variant=\"outlined\"\n//         id=\"poster\"\n//         name=\"poster\"\n//         value={formik.values.poster}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.poster && Boolean(formik.errors.poster)}\n//         helperText={formik.touched.poster && formik.errors.poster}\n//       />\n//       <TextField\n//         label=\"Enter the director name\"\n//         variant=\"outlined\"\n//         id=\"director\"\n//         name=\"director\"\n//         value={formik.values.director}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.director && Boolean(formik.errors.director)}\n//         helperText={formik.touched.director && formik.errors.director}\n//       />\n//       <TextField\n//         label=\"Enter the year of release\"\n//         variant=\"outlined\"\n//         id=\"yearOfRelease\"\n//         name=\"yearOfRelease\"\n//         value={formik.values.yearOfRelease}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n//         helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n//       />\n//       <FormControl fullWidth>\n//         <InputLabel id=\"producer\">Producer</InputLabel>\n//         <Select\n//           labelId=\"producer\"\n//           id=\"producer\"\n//           name=\"producer\"\n//           value={formik.values.producer}\n//           onChange={formik.handleChange}\n//           onBlur={formik.handleBlur}\n//           error={formik.touched.producer && Boolean(formik.errors.producer)}\n//         >\n//           {producers.map((producer) => (\n//             <MenuItem key={producer._id} value={producer._id}>\n//               {producer.name}\n//             </MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//       <FormControl fullWidth>\n//         <InputLabel id=\"actors\">Actors</InputLabel>\n//         <Select\n//           labelId=\"actors\"\n//           id=\"actors\"\n//           name=\"actors\"\n//           multiple\n//           value={formik.values.actors}\n//           onChange={formik.handleChange}\n//           onBlur={formik.handleBlur}\n//           error={formik.touched.actors && Boolean(formik.errors.actors)}\n//         >\n//           {actors.map((actor) => (\n//             <MenuItem key={actor._id} value={actor._id}>\n//               {actor.name}\n//             </MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//       <Button variant=\"contained\" type=\"submit\">\n//         Add Movie\n//       </Button>\n//     </form>\n//   );\n// }\n\n// export default AddMovie;\n// src/components/AddMovie.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport {\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Box,\n  Typography\n} from \"@mui/material\";\nimport apiService from '../services/api.service';\n\nconst validationSchema = yup.object({\n  name: yup.string().required(\"Name field is mandatory\").min(3),\n  desc: yup.string().required(\"Description is mandatory\").min(1),\n  director: yup.string().required(\"Director field is mandatory\").min(5),\n  poster: yup.string().required(\"Poster is mandatory\").min(5),\n  yearOfRelease: yup\n    .number()\n    .required(\"Year of release field is mandatory\")\n    .min(1900)\n    .max(new Date().getFullYear()),\n});\n\nfunction AddMovie() {\n  const navigate = useNavigate();\n  const [actors, setActors] = useState([]);\n  const [producer, setProducer] = useState('');\n  const [producerList, setProducerList] = useState([]);\n  const [actorList, setActorList] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [producerData, actorData] = await Promise.all([\n          apiService.get('/producers'),\n          apiService.get('/actors')\n        ]);\n        setProducerList(producerData);\n        setActorList(actorData);\n      } catch (err) {\n        setError(\"Failed to fetch required data\");\n      }\n    };\n    fetchData();\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      desc: \"\",\n      director: \"\",\n      poster: \"\",\n      yearOfRelease: \"\",\n    },\n    validationSchema,\n    onSubmit: async (values) => {\n      try {\n        await apiService.post('/movies/add-movie', {\n          ...values,\n          actors,\n          producer\n        });\n        navigate(\"/\");\n      } catch (err) {\n        setError(err.message || \"Failed to add movie\");\n      }\n    },\n  });\n\n  return (\n    <Box sx={{ maxWidth: 600, mx: 'auto', mt: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Add Movie\n      </Typography>\n\n      <form onSubmit={formik.handleSubmit}>\n        {error && (\n          <Typography color=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Typography>\n        )}\n\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n          <TextField\n            fullWidth\n            label=\"Movie Name\"\n            {...formik.getFieldProps('name')}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n\n          <TextField\n            fullWidth\n            label=\"Description\"\n            multiline\n            rows={4}\n            {...formik.getFieldProps('desc')}\n            error={formik.touched.desc && Boolean(formik.errors.desc)}\n            helperText={formik.touched.desc && formik.errors.desc}\n          />\n\n          <TextField\n            fullWidth\n            label=\"Director\"\n            {...formik.getFieldProps('director')}\n            error={formik.touched.director && Boolean(formik.errors.director)}\n            helperText={formik.touched.director && formik.errors.director}\n          />\n\n          <TextField\n            fullWidth\n            label=\"Poster URL\"\n            {...formik.getFieldProps('poster')}\n            error={formik.touched.poster && Boolean(formik.errors.poster)}\n            helperText={formik.touched.poster && formik.errors.poster}\n          />\n\n          <TextField\n            fullWidth\n            label=\"Year of Release\"\n            type=\"number\"\n            {...formik.getFieldProps('yearOfRelease')}\n            error={formik.touched.yearOfRelease && Boolean(formik.errors.yearOfRelease)}\n            helperText={formik.touched.yearOfRelease && formik.errors.yearOfRelease}\n          />\n\n          <FormControl fullWidth>\n            <InputLabel>Producer</InputLabel>\n            <Select\n              value={producer}\n              label=\"Producer\"\n              onChange={(e) => setProducer(e.target.value)}\n            >\n              {producerList.map((prod) => (\n                <MenuItem key={prod._id} value={prod._id}>\n                  {prod.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl fullWidth>\n            <InputLabel>Actors</InputLabel>\n            <Select\n              multiple\n              value={actors}\n              label=\"Actors\"\n              onChange={(e) => setActors(e.target.value)}\n            >\n              {actorList.map((actor) => (\n                <MenuItem key={actor._id} value={actor._id}>\n                  {actor.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            size=\"large\"\n            sx={{ mt: 2 }}\n          >\n            Add Movie\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n}\n\nexport default AddMovie;"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SACEC,MAAM,EACNC,SAAS,EACTC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,MAAM,EACNC,GAAG,EACHC,UAAU,QACL,eAAe;AACtB,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,gBAAgB,GAAGZ,GAAG,CAACa,MAAM,CAAC;EAClCC,IAAI,EAAEd,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yBAAyB,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;EAC7DC,IAAI,EAAElB,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,0BAA0B,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;EAC9DE,QAAQ,EAAEnB,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,6BAA6B,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;EACrEG,MAAM,EAAEpB,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,qBAAqB,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;EAC3DI,aAAa,EAAErB,GAAG,CACfsB,MAAM,CAAC,CAAC,CACRN,QAAQ,CAAC,oCAAoC,CAAC,CAC9CC,GAAG,CAAC,IAAI,CAAC,CACTM,GAAG,CAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAG9B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC+B,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwC,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAM2C,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM,CAACC,YAAY,EAAEC,SAAS,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClDlC,UAAU,CAACmC,GAAG,CAAC,YAAY,CAAC,EAC5BnC,UAAU,CAACmC,GAAG,CAAC,SAAS,CAAC,CAC1B,CAAC;QACFV,eAAe,CAACM,YAAY,CAAC;QAC7BJ,YAAY,CAACK,SAAS,CAAC;MACzB,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZP,QAAQ,CAAC,+BAA+B,CAAC;MAC3C;IACF,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,MAAM,GAAG/C,SAAS,CAAC;IACvBgD,aAAa,EAAE;MACbjC,IAAI,EAAE,EAAE;MACRI,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE;IACjB,CAAC;IACDT,gBAAgB;IAChBoC,QAAQ,EAAE,MAAOC,MAAM,IAAK;MAC1B,IAAI;QACF,MAAMxC,UAAU,CAACyC,IAAI,CAAC,mBAAmB,EAAE;UACzC,GAAGD,MAAM;UACTpB,MAAM;UACNE;QACF,CAAC,CAAC;QACFH,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,CAAC,OAAOiB,GAAG,EAAE;QACZP,QAAQ,CAACO,GAAG,CAACM,OAAO,IAAI,qBAAqB,CAAC;MAChD;IACF;EACF,CAAC,CAAC;EAEF,oBACExC,OAAA,CAACJ,GAAG;IAAC6C,EAAE,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,EAAE,EAAE,MAAM;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC5C7C,OAAA,CAACH,UAAU;MAACiD,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbnD,OAAA;MAAMqC,QAAQ,EAAEF,MAAM,CAACiB,YAAa;MAAAP,QAAA,GACjCnB,KAAK,iBACJ1B,OAAA,CAACH,UAAU;QAACwD,KAAK,EAAC,OAAO;QAACZ,EAAE,EAAE;UAAEa,EAAE,EAAE;QAAE,CAAE;QAAAT,QAAA,EACrCnB;MAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CACb,eAEDnD,OAAA,CAACJ,GAAG;QAAC6C,EAAE,EAAE;UAAEc,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAAE,CAAE;QAAAZ,QAAA,gBAC5D7C,OAAA,CAACT,SAAS;UACRmE,SAAS;UACTC,KAAK,EAAC,YAAY;UAAA,GACdxB,MAAM,CAACyB,aAAa,CAAC,MAAM,CAAC;UAChClC,KAAK,EAAES,MAAM,CAAC0B,OAAO,CAAC1D,IAAI,IAAI2D,OAAO,CAAC3B,MAAM,CAAC4B,MAAM,CAAC5D,IAAI,CAAE;UAC1D6D,UAAU,EAAE7B,MAAM,CAAC0B,OAAO,CAAC1D,IAAI,IAAIgC,MAAM,CAAC4B,MAAM,CAAC5D;QAAK;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eAEFnD,OAAA,CAACT,SAAS;UACRmE,SAAS;UACTC,KAAK,EAAC,aAAa;UACnBM,SAAS;UACTC,IAAI,EAAE,CAAE;UAAA,GACJ/B,MAAM,CAACyB,aAAa,CAAC,MAAM,CAAC;UAChClC,KAAK,EAAES,MAAM,CAAC0B,OAAO,CAACtD,IAAI,IAAIuD,OAAO,CAAC3B,MAAM,CAAC4B,MAAM,CAACxD,IAAI,CAAE;UAC1DyD,UAAU,EAAE7B,MAAM,CAAC0B,OAAO,CAACtD,IAAI,IAAI4B,MAAM,CAAC4B,MAAM,CAACxD;QAAK;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eAEFnD,OAAA,CAACT,SAAS;UACRmE,SAAS;UACTC,KAAK,EAAC,UAAU;UAAA,GACZxB,MAAM,CAACyB,aAAa,CAAC,UAAU,CAAC;UACpClC,KAAK,EAAES,MAAM,CAAC0B,OAAO,CAACrD,QAAQ,IAAIsD,OAAO,CAAC3B,MAAM,CAAC4B,MAAM,CAACvD,QAAQ,CAAE;UAClEwD,UAAU,EAAE7B,MAAM,CAAC0B,OAAO,CAACrD,QAAQ,IAAI2B,MAAM,CAAC4B,MAAM,CAACvD;QAAS;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eAEFnD,OAAA,CAACT,SAAS;UACRmE,SAAS;UACTC,KAAK,EAAC,YAAY;UAAA,GACdxB,MAAM,CAACyB,aAAa,CAAC,QAAQ,CAAC;UAClClC,KAAK,EAAES,MAAM,CAAC0B,OAAO,CAACpD,MAAM,IAAIqD,OAAO,CAAC3B,MAAM,CAAC4B,MAAM,CAACtD,MAAM,CAAE;UAC9DuD,UAAU,EAAE7B,MAAM,CAAC0B,OAAO,CAACpD,MAAM,IAAI0B,MAAM,CAAC4B,MAAM,CAACtD;QAAO;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eAEFnD,OAAA,CAACT,SAAS;UACRmE,SAAS;UACTC,KAAK,EAAC,iBAAiB;UACvBQ,IAAI,EAAC,QAAQ;UAAA,GACThC,MAAM,CAACyB,aAAa,CAAC,eAAe,CAAC;UACzClC,KAAK,EAAES,MAAM,CAAC0B,OAAO,CAACnD,aAAa,IAAIoD,OAAO,CAAC3B,MAAM,CAAC4B,MAAM,CAACrD,aAAa,CAAE;UAC5EsD,UAAU,EAAE7B,MAAM,CAAC0B,OAAO,CAACnD,aAAa,IAAIyB,MAAM,CAAC4B,MAAM,CAACrD;QAAc;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eAEFnD,OAAA,CAACR,WAAW;UAACkE,SAAS;UAAAb,QAAA,gBACpB7C,OAAA,CAACP,UAAU;YAAAoD,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjCnD,OAAA,CAACL,MAAM;YACLyE,KAAK,EAAEhD,QAAS;YAChBuC,KAAK,EAAC,UAAU;YAChBU,QAAQ,EAAGC,CAAC,IAAKjD,WAAW,CAACiD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAAAvB,QAAA,EAE5CvB,YAAY,CAACkD,GAAG,CAAEC,IAAI,iBACrBzE,OAAA,CAACN,QAAQ;cAAgB0E,KAAK,EAAEK,IAAI,CAACC,GAAI;cAAA7B,QAAA,EACtC4B,IAAI,CAACtE;YAAI,GADGsE,IAAI,CAACC,GAAG;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEdnD,OAAA,CAACR,WAAW;UAACkE,SAAS;UAAAb,QAAA,gBACpB7C,OAAA,CAACP,UAAU;YAAAoD,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC/BnD,OAAA,CAACL,MAAM;YACLgF,QAAQ;YACRP,KAAK,EAAElD,MAAO;YACdyC,KAAK,EAAC,QAAQ;YACdU,QAAQ,EAAGC,CAAC,IAAKnD,SAAS,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAAAvB,QAAA,EAE1CrB,SAAS,CAACgD,GAAG,CAAEI,KAAK,iBACnB5E,OAAA,CAACN,QAAQ;cAAiB0E,KAAK,EAAEQ,KAAK,CAACF,GAAI;cAAA7B,QAAA,EACxC+B,KAAK,CAACzE;YAAI,GADEyE,KAAK,CAACF,GAAG;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEd,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEdnD,OAAA,CAACV,MAAM;UACLwD,OAAO,EAAC,WAAW;UACnBqB,IAAI,EAAC,QAAQ;UACbU,IAAI,EAAC,OAAO;UACZpC,EAAE,EAAE;YAAEG,EAAE,EAAE;UAAE,CAAE;UAAAC,QAAA,EACf;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnC,EAAA,CAnJQD,QAAQ;EAAA,QACE5B,WAAW,EAuBbC,SAAS;AAAA;AAAA0F,EAAA,GAxBjB/D,QAAQ;AAqJjB,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}