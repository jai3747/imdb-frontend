{"ast":null,"code":"// // // // //App.js\n// // // // import './App.css';\n// // // // import { ThemeProvider } from '@emotion/react';\n// // // // import { AppBar, Button, Paper, Toolbar, createTheme } from '@mui/material';\n// // // // import { useState } from 'react';\n// // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // import AddMovie from './AddMovie';\n// // // // import Movie from './Movie';\n// // // // import AddActor from './AddActor';\n// // // // import AddProducer from './AddProducer';\n// // // // import EditMovies from './EditMovies';\n\n// // // // function App() {\n// // // //   const [mode, setMode] = useState(\"dark\");\n// // // //   const navigate = useNavigate();\n\n// // // //   const theme = createTheme({\n// // // //     palette: {\n// // // //       mode: mode,\n// // // //     },\n// // // //   });\n\n// // // //   return (\n// // // //     <ThemeProvider theme={theme}>\n// // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // //           <Toolbar>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               <span className='logo'>IMDB</span>\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               All Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/add-movies\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               Add Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/add-actor\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               Add Actor\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/add-producer\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               Add Producer\n// // // //             </Button>\n// // // //             <Button\n// // // //               style={{marginLeft : \"auto\"}}\n// // // //               startIcon = {mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // //               onClick={() => {\n// // // //                 setMode(mode === \"light\" ? \"dark\" : \"light\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // //             </Button>\n// // // //           </Toolbar>\n// // // //         </AppBar>\n\n// // // //         <Routes>\n// // // //           <Route\n// // // //            exact\n// // // //             path=\"/\"\n// // // //             element={<Movie  />}\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-movies\"\n// // // //             element={\n// // // //               <AddMovie  />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-actor\"\n// // // //             element={\n// // // //               <AddActor  />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-producer\"\n// // // //             element={\n// // // //               <AddProducer />\n// // // //             }\n// // // //           />\n\n// // // //           <Route\n// // // //             path=\"movies/edit/:id\"\n// // // //             element={\n// // // //               <EditMovies  />\n// // // //             }\n// // // //           />\n// // // //         </Routes>\n\n// // // //       </Paper>\n// // // //     </ThemeProvider>\n// // // //   );\n// // // // }\n\n// // // // export default App;\n// // // // App.js\n// // // import './App.css';\n// // // import { ThemeProvider } from '@emotion/react';\n// // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert } from '@mui/material';\n// // // import { useState, useEffect } from 'react';\n// // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // import AddMovie from './AddMovie';\n// // // import Movie from './Movie';\n// // // import AddActor from './AddActor';\n// // // import AddProducer from './AddProducer';\n// // // import EditMovies from './EditMovies';\n// // // import axios from 'axios';\n\n// // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // function App() {\n// // //   const [mode, setMode] = useState(\"dark\");\n// // //   const navigate = useNavigate();\n// // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // //   const [error, setError] = useState(null);\n\n// // //   const theme = createTheme({\n// // //     palette: {\n// // //       mode: mode,\n// // //     },\n// // //   });\n\n// // //   // Check API connectivity\n// // //   useEffect(() => {\n// // //     const checkApiStatus = async () => {\n// // //       try {\n// // //         const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // //         if (movieResponse.status === 200) {\n// // //           setIsApiConnected(true);\n// // //           setError(null);\n// // //         }\n// // //       } catch (err) {\n// // //         setIsApiConnected(false);\n// // //         setError(\"Unable to connect to the server. Please try again later.\");\n// // //         console.error(\"API Connection Error:\", err);\n// // //       }\n// // //     };\n\n// // //     checkApiStatus();\n// // //     // Check connection every 5 minutes\n// // //     const intervalId = setInterval(checkApiStatus, 300000);\n\n// // //     return () => clearInterval(intervalId);\n// // //   }, []);\n\n// // //   const handleClose = (event, reason) => {\n// // //     if (reason === 'clickaway') {\n// // //       return;\n// // //     }\n// // //     setError(null);\n// // //   };\n\n// // //   return (\n// // //     <ThemeProvider theme={theme}>\n// // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // //           <Toolbar>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               <span className='logo'>IMDB</span>\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               All Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-movies\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-actor\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Actor\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-producer\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Producer\n// // //             </Button>\n// // //             <Button\n// // //               style={{marginLeft: \"auto\"}}\n// // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // //             </Button>\n// // //           </Toolbar>\n// // //         </AppBar>\n\n// // //         {/* API Status Indicator */}\n// // //         <Snackbar open={!isApiConnected} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n// // //           <Alert severity=\"warning\">\n// // //             Backend server is not connected. Some features may be unavailable.\n// // //           </Alert>\n// // //         </Snackbar>\n\n// // //         {/* Error Message */}\n// // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // //           <Alert onClose={handleClose} severity=\"error\">\n// // //             {error}\n// // //           </Alert>\n// // //         </Snackbar>\n\n// // //         <Routes>\n// // //           <Route\n// // //             exact\n// // //             path=\"/\"\n// // //             element={<Movie setError={setError} />}\n// // //           />\n// // //           <Route\n// // //             path=\"/add-movies\"\n// // //             element={\n// // //               <AddMovie setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-actor\"\n// // //             element={\n// // //               <AddActor setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-producer\"\n// // //             element={\n// // //               <AddProducer setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"movies/edit/:id\"\n// // //             element={\n// // //               <EditMovies setError={setError} />\n// // //             }\n// // //           />\n// // //         </Routes>\n// // //       </Paper>\n// // //     </ThemeProvider>\n// // //   );\n// // // }\n\n// // // export default App;\n// // // App.js\n// // import './App.css';\n// // import { ThemeProvider } from '@emotion/react';\n// // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress } from '@mui/material';\n// // import { useState, useEffect } from 'react';\n// // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // import CancelIcon from '@mui/icons-material/Cancel';\n// // import AddMovie from './AddMovie';\n// // import Movie from './Movie';\n// // import AddActor from './AddActor';\n// // import AddProducer from './AddProducer';\n// // import EditMovies from './EditMovies';\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // function App() {\n// //   const [mode, setMode] = useState(\"dark\");\n// //   const navigate = useNavigate();\n// //   const [isApiConnected, setIsApiConnected] = useState(false);\n// //   const [isChecking, setIsChecking] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   const theme = createTheme({\n// //     palette: {\n// //       mode: mode,\n// //     },\n// //   });\n\n// //   // Check API connectivity\n// //   const checkApiStatus = async () => {\n// //     setIsChecking(true);\n// //     try {\n// //       const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// //       if (movieResponse.status === 200) {\n// //         setIsApiConnected(true);\n// //         setError(null);\n// //       }\n// //     } catch (err) {\n// //       setIsApiConnected(false);\n// //       setError(\"Unable to connect to the server. Please try again later.\");\n// //       console.error(\"API Connection Error:\", err);\n// //     } finally {\n// //       setIsChecking(false);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     checkApiStatus();\n// //     const intervalId = setInterval(checkApiStatus, 300000);\n// //     return () => clearInterval(intervalId);\n// //   }, []);\n\n// //   const handleClose = (event, reason) => {\n// //     if (reason === 'clickaway') {\n// //       return;\n// //     }\n// //     setError(null);\n// //   };\n\n// //   return (\n// //     <ThemeProvider theme={theme}>\n// //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// //         <AppBar className=\"nav-bar\" position=\"static\">\n// //           <Toolbar>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               <span className='logo'>IMDB</span>\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               All Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-movies\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-actor\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Actor\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-producer\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Producer\n// //             </Button>\n\n// //             {/* Connection Status Button */}\n// //             <Button\n// //               onClick={checkApiStatus}\n// //               style={{\n// //                 marginLeft: 'auto',\n// //                 marginRight: '10px',\n// //                 backgroundColor: isApiConnected ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// //                 color: isApiConnected ? '#2e7d32' : '#d32f2f'\n// //               }}\n// //               startIcon={\n// //                 isChecking ? (\n// //                   <CircularProgress size={20} color={isApiConnected ? \"success\" : \"error\"} />\n// //                 ) : isApiConnected ? (\n// //                   <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// //                 ) : (\n// //                   <CancelIcon style={{ color: '#d32f2f' }} />\n// //                 )\n// //               }\n// //             >\n// //               {isChecking ? 'Checking...' : isApiConnected ? 'Connected' : 'Disconnected'}\n// //             </Button>\n\n// //             <Button\n// //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// //               color=\"inherit\"\n// //             >\n// //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// //             </Button>\n// //           </Toolbar>\n// //         </AppBar>\n\n// //         {/* Error Message */}\n// //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// //           <Alert onClose={handleClose} severity=\"error\">\n// //             {error}\n// //           </Alert>\n// //         </Snackbar>\n\n// //         <Routes>\n// //           <Route\n// //             exact\n// //             path=\"/\"\n// //             element={<Movie setError={setError} />}\n// //           />\n// //           <Route\n// //             path=\"/add-movies\"\n// //             element={\n// //               <AddMovie setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-actor\"\n// //             element={\n// //               <AddActor setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-producer\"\n// //             element={\n// //               <AddProducer setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"movies/edit/:id\"\n// //             element={\n// //               <EditMovies setError={setError} />\n// //             }\n// //           />\n// //         </Routes>\n// //       </Paper>\n// //     </ThemeProvider>\n// //   );\n// // }\n\n// // export default App;\n// // App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import StorageIcon from '@mui/icons-material/Storage';\n// import CloudIcon from '@mui/icons-material/Cloud';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n// import axios from 'axios';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [healthStatus, setHealthStatus] = useState({\n//     api: { status: false, checking: true },\n//     database: { status: false, checking: true }\n//   });\n//   const [error, setError] = useState(null);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   // Check API and Database health\n//   const checkHealthStatus = async () => {\n//     setHealthStatus(prev => ({\n//       api: { ...prev.api, checking: true },\n//       database: { ...prev.database, checking: true }\n//     }));\n\n//     try {\n//       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n//       setHealthStatus({\n//         api: { status: true, checking: false },\n//         database: { \n//           status: response.data.database.status === \"connected\", \n//           checking: false \n//         }\n//       });\n//       setError(null);\n//     } catch (err) {\n//       setHealthStatus({\n//         api: { status: false, checking: false },\n//         database: { status: false, checking: false }\n//       });\n//       setError(\"System health check failed. Please try again later.\");\n//       console.error(\"Health Check Error:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkHealthStatus();\n//     const intervalId = setInterval(checkHealthStatus, 300000); // Check every 5 minutes\n//     return () => clearInterval(intervalId);\n//   }, []);\n\n//   const handleClose = (event, reason) => {\n//     if (reason === 'clickaway') return;\n//     setError(null);\n//   };\n\n//   // Health Status Indicator Component\n//   const HealthIndicator = ({ type, status, checking }) => {\n//     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n//     const label = type === 'api' ? 'API' : 'Database';\n\n//     return (\n//       <Tooltip title={`${label} Status`}>\n//         <Button\n//           onClick={checkHealthStatus}\n//           style={{\n//             marginLeft: '10px',\n//             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n//             color: status ? '#2e7d32' : '#d32f2f',\n//             minWidth: '120px',\n//           }}\n//           startIcon={\n//             checking ? (\n//               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n//             ) : status ? (\n//               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n//             ) : (\n//               <CancelIcon style={{ color: '#d32f2f' }} />\n//             )\n//           }\n//         >\n//           {checking ? 'Checking...' : `${label} ${status ? 'Healthy' : 'Down'}`}\n//         </Button>\n//       </Tooltip>\n//     );\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               All Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Actor\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Producer\n//             </Button>\n\n//             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n//               <HealthIndicator \n//                 type=\"api\" \n//                 status={healthStatus.api.status} \n//                 checking={healthStatus.api.checking} \n//               />\n//               <HealthIndicator \n//                 type=\"database\" \n//                 status={healthStatus.database.status} \n//                 checking={healthStatus.database.checking} \n//               />\n\n//               <Button\n//                 sx={{ ml: 2 }}\n//                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//                 color=\"inherit\"\n//               >\n//                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n//               </Button>\n//             </Box>\n//           </Toolbar>\n//         </AppBar>\n\n//         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n//           <Alert onClose={handleClose} severity=\"error\">\n//             {error}\n//           </Alert>\n//         </Snackbar>\n\n//         <Routes>\n//           <Route\n//             exact\n//             path=\"/\"\n//             element={<Movie setError={setError} />}\n//           />\n//           <Route\n//             path=\"/add-movies\"\n//             element={\n//               <AddMovie setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-actor\"\n//             element={\n//               <AddActor setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-producer\"\n//             element={\n//               <AddProducer setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"movies/edit/:id\"\n//             element={\n//               <EditMovies setError={setError} />\n//             }\n//           />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/jayachandran/new-imdb/imdb-clone-client/src/App.js"],"sourcesContent":["// // // // //App.js\n// // // // import './App.css';\n// // // // import { ThemeProvider } from '@emotion/react';\n// // // // import { AppBar, Button, Paper, Toolbar, createTheme } from '@mui/material';\n// // // // import { useState } from 'react';\n// // // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // // import AddMovie from './AddMovie';\n// // // // import Movie from './Movie';\n// // // // import AddActor from './AddActor';\n// // // // import AddProducer from './AddProducer';\n// // // // import EditMovies from './EditMovies';\n\n// // // // function App() {\n// // // //   const [mode, setMode] = useState(\"dark\");\n// // // //   const navigate = useNavigate();\n\n// // // //   const theme = createTheme({\n// // // //     palette: {\n// // // //       mode: mode,\n// // // //     },\n// // // //   });\n\n// // // //   return (\n// // // //     <ThemeProvider theme={theme}>\n// // // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // // //           <Toolbar>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               <span className='logo'>IMDB</span>\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               All Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/add-movies\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               Add Movies\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/add-actor\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               Add Actor\n// // // //             </Button>\n// // // //             <Button\n// // // //               onClick={() => {\n// // // //                 navigate(\"/add-producer\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               Add Producer\n// // // //             </Button>\n// // // //             <Button\n// // // //               style={{marginLeft : \"auto\"}}\n// // // //               startIcon = {mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // // //               onClick={() => {\n// // // //                 setMode(mode === \"light\" ? \"dark\" : \"light\");\n// // // //               }}\n// // // //               color=\"inherit\"\n// // // //             >\n// // // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // // //             </Button>\n// // // //           </Toolbar>\n// // // //         </AppBar>\n\n// // // //         <Routes>\n// // // //           <Route\n// // // //            exact\n// // // //             path=\"/\"\n// // // //             element={<Movie  />}\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-movies\"\n// // // //             element={\n// // // //               <AddMovie  />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-actor\"\n// // // //             element={\n// // // //               <AddActor  />\n// // // //             }\n// // // //           />\n// // // //           <Route\n// // // //             path=\"/add-producer\"\n// // // //             element={\n// // // //               <AddProducer />\n// // // //             }\n// // // //           />\n          \n// // // //           <Route\n// // // //             path=\"movies/edit/:id\"\n// // // //             element={\n// // // //               <EditMovies  />\n// // // //             }\n// // // //           />\n// // // //         </Routes>\n\n// // // //       </Paper>\n// // // //     </ThemeProvider>\n// // // //   );\n// // // // }\n\n\n\n// // // // export default App;\n// // // // App.js\n// // // import './App.css';\n// // // import { ThemeProvider } from '@emotion/react';\n// // // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert } from '@mui/material';\n// // // import { useState, useEffect } from 'react';\n// // // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // // import AddMovie from './AddMovie';\n// // // import Movie from './Movie';\n// // // import AddActor from './AddActor';\n// // // import AddProducer from './AddProducer';\n// // // import EditMovies from './EditMovies';\n// // // import axios from 'axios';\n\n// // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // // function App() {\n// // //   const [mode, setMode] = useState(\"dark\");\n// // //   const navigate = useNavigate();\n// // //   const [isApiConnected, setIsApiConnected] = useState(false);\n// // //   const [error, setError] = useState(null);\n\n// // //   const theme = createTheme({\n// // //     palette: {\n// // //       mode: mode,\n// // //     },\n// // //   });\n\n// // //   // Check API connectivity\n// // //   useEffect(() => {\n// // //     const checkApiStatus = async () => {\n// // //       try {\n// // //         const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// // //         if (movieResponse.status === 200) {\n// // //           setIsApiConnected(true);\n// // //           setError(null);\n// // //         }\n// // //       } catch (err) {\n// // //         setIsApiConnected(false);\n// // //         setError(\"Unable to connect to the server. Please try again later.\");\n// // //         console.error(\"API Connection Error:\", err);\n// // //       }\n// // //     };\n\n// // //     checkApiStatus();\n// // //     // Check connection every 5 minutes\n// // //     const intervalId = setInterval(checkApiStatus, 300000);\n\n// // //     return () => clearInterval(intervalId);\n// // //   }, []);\n\n// // //   const handleClose = (event, reason) => {\n// // //     if (reason === 'clickaway') {\n// // //       return;\n// // //     }\n// // //     setError(null);\n// // //   };\n\n// // //   return (\n// // //     <ThemeProvider theme={theme}>\n// // //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// // //         <AppBar className=\"nav-bar\" position=\"static\">\n// // //           <Toolbar>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               <span className='logo'>IMDB</span>\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               All Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-movies\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Movies\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-actor\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Actor\n// // //             </Button>\n// // //             <Button\n// // //               onClick={() => navigate(\"/add-producer\")}\n// // //               color=\"inherit\"\n// // //               disabled={!isApiConnected}\n// // //             >\n// // //               Add Producer\n// // //             </Button>\n// // //             <Button\n// // //               style={{marginLeft: \"auto\"}}\n// // //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// // //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// // //               color=\"inherit\"\n// // //             >\n// // //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// // //             </Button>\n// // //           </Toolbar>\n// // //         </AppBar>\n\n// // //         {/* API Status Indicator */}\n// // //         <Snackbar open={!isApiConnected} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n// // //           <Alert severity=\"warning\">\n// // //             Backend server is not connected. Some features may be unavailable.\n// // //           </Alert>\n// // //         </Snackbar>\n\n// // //         {/* Error Message */}\n// // //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// // //           <Alert onClose={handleClose} severity=\"error\">\n// // //             {error}\n// // //           </Alert>\n// // //         </Snackbar>\n\n// // //         <Routes>\n// // //           <Route\n// // //             exact\n// // //             path=\"/\"\n// // //             element={<Movie setError={setError} />}\n// // //           />\n// // //           <Route\n// // //             path=\"/add-movies\"\n// // //             element={\n// // //               <AddMovie setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-actor\"\n// // //             element={\n// // //               <AddActor setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"/add-producer\"\n// // //             element={\n// // //               <AddProducer setError={setError} />\n// // //             }\n// // //           />\n// // //           <Route\n// // //             path=\"movies/edit/:id\"\n// // //             element={\n// // //               <EditMovies setError={setError} />\n// // //             }\n// // //           />\n// // //         </Routes>\n// // //       </Paper>\n// // //     </ThemeProvider>\n// // //   );\n// // // }\n\n// // // export default App;\n// // // App.js\n// // import './App.css';\n// // import { ThemeProvider } from '@emotion/react';\n// // import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress } from '@mui/material';\n// // import { useState, useEffect } from 'react';\n// // import { Route, Routes, useNavigate } from 'react-router-dom';\n// // import Brightness7Icon from '@mui/icons-material/Brightness7';\n// // import Brightness4Icon from '@mui/icons-material/Brightness4';\n// // import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// // import CancelIcon from '@mui/icons-material/Cancel';\n// // import AddMovie from './AddMovie';\n// // import Movie from './Movie';\n// // import AddActor from './AddActor';\n// // import AddProducer from './AddProducer';\n// // import EditMovies from './EditMovies';\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// // function App() {\n// //   const [mode, setMode] = useState(\"dark\");\n// //   const navigate = useNavigate();\n// //   const [isApiConnected, setIsApiConnected] = useState(false);\n// //   const [isChecking, setIsChecking] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   const theme = createTheme({\n// //     palette: {\n// //       mode: mode,\n// //     },\n// //   });\n\n// //   // Check API connectivity\n// //   const checkApiStatus = async () => {\n// //     setIsChecking(true);\n// //     try {\n// //       const movieResponse = await axios.get(`${API_BASE_URL}/movies/health`);\n// //       if (movieResponse.status === 200) {\n// //         setIsApiConnected(true);\n// //         setError(null);\n// //       }\n// //     } catch (err) {\n// //       setIsApiConnected(false);\n// //       setError(\"Unable to connect to the server. Please try again later.\");\n// //       console.error(\"API Connection Error:\", err);\n// //     } finally {\n// //       setIsChecking(false);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     checkApiStatus();\n// //     const intervalId = setInterval(checkApiStatus, 300000);\n// //     return () => clearInterval(intervalId);\n// //   }, []);\n\n// //   const handleClose = (event, reason) => {\n// //     if (reason === 'clickaway') {\n// //       return;\n// //     }\n// //     setError(null);\n// //   };\n\n// //   return (\n// //     <ThemeProvider theme={theme}>\n// //       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n// //         <AppBar className=\"nav-bar\" position=\"static\">\n// //           <Toolbar>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               <span className='logo'>IMDB</span>\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/\")}\n// //               color=\"inherit\"\n// //             >\n// //               All Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-movies\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Movies\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-actor\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Actor\n// //             </Button>\n// //             <Button\n// //               onClick={() => navigate(\"/add-producer\")}\n// //               color=\"inherit\"\n// //               disabled={!isApiConnected}\n// //             >\n// //               Add Producer\n// //             </Button>\n\n// //             {/* Connection Status Button */}\n// //             <Button\n// //               onClick={checkApiStatus}\n// //               style={{\n// //                 marginLeft: 'auto',\n// //                 marginRight: '10px',\n// //                 backgroundColor: isApiConnected ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n// //                 color: isApiConnected ? '#2e7d32' : '#d32f2f'\n// //               }}\n// //               startIcon={\n// //                 isChecking ? (\n// //                   <CircularProgress size={20} color={isApiConnected ? \"success\" : \"error\"} />\n// //                 ) : isApiConnected ? (\n// //                   <CheckCircleIcon style={{ color: '#2e7d32' }} />\n// //                 ) : (\n// //                   <CancelIcon style={{ color: '#d32f2f' }} />\n// //                 )\n// //               }\n// //             >\n// //               {isChecking ? 'Checking...' : isApiConnected ? 'Connected' : 'Disconnected'}\n// //             </Button>\n\n// //             <Button\n// //               startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n// //               onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n// //               color=\"inherit\"\n// //             >\n// //               {mode === \"light\" ? \"dark\" : \"light\"} mode\n// //             </Button>\n// //           </Toolbar>\n// //         </AppBar>\n\n// //         {/* Error Message */}\n// //         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n// //           <Alert onClose={handleClose} severity=\"error\">\n// //             {error}\n// //           </Alert>\n// //         </Snackbar>\n\n// //         <Routes>\n// //           <Route\n// //             exact\n// //             path=\"/\"\n// //             element={<Movie setError={setError} />}\n// //           />\n// //           <Route\n// //             path=\"/add-movies\"\n// //             element={\n// //               <AddMovie setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-actor\"\n// //             element={\n// //               <AddActor setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"/add-producer\"\n// //             element={\n// //               <AddProducer setError={setError} />\n// //             }\n// //           />\n// //           <Route\n// //             path=\"movies/edit/:id\"\n// //             element={\n// //               <EditMovies setError={setError} />\n// //             }\n// //           />\n// //         </Routes>\n// //       </Paper>\n// //     </ThemeProvider>\n// //   );\n// // }\n\n// // export default App;\n// // App.js\n// import './App.css';\n// import { ThemeProvider } from '@emotion/react';\n// import { AppBar, Button, Paper, Toolbar, createTheme, Snackbar, Alert, Box, CircularProgress, Tooltip } from '@mui/material';\n// import { useState, useEffect } from 'react';\n// import { Route, Routes, useNavigate } from 'react-router-dom';\n// import Brightness7Icon from '@mui/icons-material/Brightness7';\n// import Brightness4Icon from '@mui/icons-material/Brightness4';\n// import CheckCircleIcon from '@mui/icons-material/CheckCircle';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import StorageIcon from '@mui/icons-material/Storage';\n// import CloudIcon from '@mui/icons-material/Cloud';\n// import AddMovie from './AddMovie';\n// import Movie from './Movie';\n// import AddActor from './AddActor';\n// import AddProducer from './AddProducer';\n// import EditMovies from './EditMovies';\n// import axios from 'axios';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// function App() {\n//   const [mode, setMode] = useState(\"dark\");\n//   const navigate = useNavigate();\n//   const [healthStatus, setHealthStatus] = useState({\n//     api: { status: false, checking: true },\n//     database: { status: false, checking: true }\n//   });\n//   const [error, setError] = useState(null);\n\n//   const theme = createTheme({\n//     palette: {\n//       mode: mode,\n//     },\n//   });\n\n//   // Check API and Database health\n//   const checkHealthStatus = async () => {\n//     setHealthStatus(prev => ({\n//       api: { ...prev.api, checking: true },\n//       database: { ...prev.database, checking: true }\n//     }));\n\n//     try {\n//       const response = await axios.get(`${API_BASE_URL}/movies/health`);\n//       setHealthStatus({\n//         api: { status: true, checking: false },\n//         database: { \n//           status: response.data.database.status === \"connected\", \n//           checking: false \n//         }\n//       });\n//       setError(null);\n//     } catch (err) {\n//       setHealthStatus({\n//         api: { status: false, checking: false },\n//         database: { status: false, checking: false }\n//       });\n//       setError(\"System health check failed. Please try again later.\");\n//       console.error(\"Health Check Error:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     checkHealthStatus();\n//     const intervalId = setInterval(checkHealthStatus, 300000); // Check every 5 minutes\n//     return () => clearInterval(intervalId);\n//   }, []);\n\n//   const handleClose = (event, reason) => {\n//     if (reason === 'clickaway') return;\n//     setError(null);\n//   };\n\n//   // Health Status Indicator Component\n//   const HealthIndicator = ({ type, status, checking }) => {\n//     const icon = type === 'api' ? <CloudIcon /> : <StorageIcon />;\n//     const label = type === 'api' ? 'API' : 'Database';\n    \n//     return (\n//       <Tooltip title={`${label} Status`}>\n//         <Button\n//           onClick={checkHealthStatus}\n//           style={{\n//             marginLeft: '10px',\n//             backgroundColor: status ? 'rgba(46, 125, 50, 0.2)' : 'rgba(211, 47, 47, 0.2)',\n//             color: status ? '#2e7d32' : '#d32f2f',\n//             minWidth: '120px',\n//           }}\n//           startIcon={\n//             checking ? (\n//               <CircularProgress size={20} color={status ? \"success\" : \"error\"} />\n//             ) : status ? (\n//               <CheckCircleIcon style={{ color: '#2e7d32' }} />\n//             ) : (\n//               <CancelIcon style={{ color: '#d32f2f' }} />\n//             )\n//           }\n//         >\n//           {checking ? 'Checking...' : `${label} ${status ? 'Healthy' : 'Down'}`}\n//         </Button>\n//       </Tooltip>\n//     );\n//   };\n\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <Paper className=\"paper\" elevation={5} style={{ borderRadius: \"0px\", minHeight: \"100vh\" }}>\n//         <AppBar className=\"nav-bar\" position=\"static\">\n//           <Toolbar>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               <span className='logo'>IMDB</span>\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/\")}\n//               color=\"inherit\"\n//             >\n//               All Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-movies\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Movies\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-actor\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Actor\n//             </Button>\n//             <Button\n//               onClick={() => navigate(\"/add-producer\")}\n//               color=\"inherit\"\n//               disabled={!healthStatus.api.status || !healthStatus.database.status}\n//             >\n//               Add Producer\n//             </Button>\n\n//             <Box sx={{ marginLeft: 'auto', display: 'flex', alignItems: 'center' }}>\n//               <HealthIndicator \n//                 type=\"api\" \n//                 status={healthStatus.api.status} \n//                 checking={healthStatus.api.checking} \n//               />\n//               <HealthIndicator \n//                 type=\"database\" \n//                 status={healthStatus.database.status} \n//                 checking={healthStatus.database.checking} \n//               />\n              \n//               <Button\n//                 sx={{ ml: 2 }}\n//                 startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n//                 onClick={() => setMode(mode === \"light\" ? \"dark\" : \"light\")}\n//                 color=\"inherit\"\n//               >\n//                 {mode === \"light\" ? \"dark\" : \"light\"} mode\n//               </Button>\n//             </Box>\n//           </Toolbar>\n//         </AppBar>\n\n//         <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\n//           <Alert onClose={handleClose} severity=\"error\">\n//             {error}\n//           </Alert>\n//         </Snackbar>\n\n//         <Routes>\n//           <Route\n//             exact\n//             path=\"/\"\n//             element={<Movie setError={setError} />}\n//           />\n//           <Route\n//             path=\"/add-movies\"\n//             element={\n//               <AddMovie setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-actor\"\n//             element={\n//               <AddActor setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"/add-producer\"\n//             element={\n//               <AddProducer setError={setError} />\n//             }\n//           />\n//           <Route\n//             path=\"movies/edit/:id\"\n//             element={\n//               <EditMovies setError={setError} />\n//             }\n//           />\n//         </Routes>\n//       </Paper>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default App;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}