# Frontend ConfigMap
{{- if .Values.frontend.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: {{ .Values.global.namespace }}
  labels:
    app: imdb-clone
    component: frontend
    {{- include "imdb-clone.labels" . | nindent 4 }}
data:
  REACT_APP_BACKEND_API: "http://{{ .Values.ingress.host }}{{ .Values.frontend.config.backendApiPath }}"
  REACT_APP_API_URL: "http://{{ .Values.ingress.host }}{{ .Values.frontend.config.backendApiPath }}"
---
{{- end }}

# Backend ConfigMap
{{- if .Values.backend.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: {{ .Values.global.namespace }}
  labels:
    app: imdb-clone
    component: backend
    {{- include "imdb-clone.labels" . | nindent 4 }}
data:
  NODE_ENV: {{ .Values.global.environment | quote }}
  PORT: "{{ .Values.backend.service.targetPort }}"
  FRONTEND_URL: "http://{{ .Values.ingress.host }}"
  {{- if .Values.mongodb.enabled }}
  MONGODB_HOST: "mongodb-service"
  MONGODB_PORT: "{{ .Values.mongodb.port }}"
  MONGODB_DATABASE: "{{ .Values.mongodb.database }}"
  {{- end }}
---
{{- end }}

# MongoDB ConfigMap (only if local MongoDB is enabled)
{{- if .Values.mongodb.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: {{ .Values.global.namespace }}
  labels:
    app: mongodb
    component: database
    {{- include "imdb-clone.labels" . | nindent 4 }}
data:
  MONGODB_INITDB_DATABASE: {{ .Values.mongodb.database }}
  mongodb.conf: |
    storage:
      dbPath: {{ .Values.mongodb.persistence.mountPath }}
      journal:
        enabled: true
    
    systemLog:
      destination: file
      logAppend: true
      path: /tmp/mongodb.log
      verbosity: 0
    
    net:
      port: {{ .Values.mongodb.port }}
      bindIp: 0.0.0.0
    
    processManagement:
      timeZoneInfo: /usr/share/zoneinfo
    
    {{- if .Values.mongodb.auth.enabled }}
    security:
      authorization: enabled
    {{- end }}
{{- end }}