name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Updated repository names with correct format (owner/repo)
  FRONTEND_REPO: jai3747/imdb-frontend
  BACKEND_REPO: jai3747/imdb-backend
  FRONTEND_IMAGE: jai3747/imdb-clone-frontend-prod
  BACKEND_IMAGE: jai3747/imdb-clone-backend-prod

jobs:
  frontend-build:
    name: ðŸš€ Frontend Build & Push
    runs-on: ubuntu-latest
    steps:
    - name: Clean environment
      run: |
        rm -rf $HOME/fresh-workspace || true
        mkdir -p $HOME/fresh-workspace/frontend
      
    - name: Checkout Latest Frontend Code
      uses: actions/checkout@v4
      with:
        repository: ${{ env.FRONTEND_REPO }}
        token: ${{ secrets.GH_PAT }}
        path: $HOME/fresh-workspace/frontend
        fetch-depth: 1
        ref: main

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"
        
    - name: Clean npm cache and node_modules
      run: |
        npm cache clean --force
        rm -rf $HOME/fresh-workspace/frontend/node_modules || true
      
    - name: Install Frontend Dependencies
      working-directory: $HOME/fresh-workspace/frontend
      run: |
        npm ci --no-cache --legacy-peer-deps
    
    - name: Configure Environment
      working-directory: $HOME/fresh-workspace/frontend
      run: |
        echo "REACT_APP_API_URL=${{ env.BACKEND_API_URL }}" > .env
        echo "REACT_APP_API_TIMEOUT=30000" >> .env
        echo "NODE_ENV=production" >> .env
        
        # Also ensure env is passed to Docker build
        if [ -f "src/config.js" ]; then
          sed -i "s|http://.*|${{ env.BACKEND_API_URL }}'|g" src/config.js
        fi
        
        if [ -f "src/services/api.service.js" ]; then
          sed -i "s|http://.*|${{ env.BACKEND_API_URL }}|g" src/services/api.service.js
        fi
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Generate build timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: Build and Push Frontend Image
      uses: docker/build-push-action@v5
      with:
        context: $HOME/fresh-workspace/frontend
        push: true
        tags: |
          ${{ env.FRONTEND_IMAGE }}:latest
          ${{ env.FRONTEND_IMAGE }}:${{ steps.timestamp.outputs.timestamp }}
        build-args: |
          NODE_ENV=production
          REACT_APP_API_URL=${{ env.BACKEND_API_URL }}
          REACT_APP_API_TIMEOUT=30000
        cache-from: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache
        cache-to: type=inline
        no-cache: true
        pull: true

  backend-build:
    name: ðŸš€ Backend Build & Push
    runs-on: ubuntu-latest
    steps:
    - name: Clean environment
      run: |
        rm -rf $HOME/fresh-workspace || true
        mkdir -p $HOME/fresh-workspace/backend
    
    - name: Checkout Latest Backend Code
      uses: actions/checkout@v4
      with:
        repository: ${{ env.BACKEND_REPO }}
        token: ${{ secrets.GH_PAT }}
        path: $HOME/fresh-workspace/backend
        fetch-depth: 1
        ref: main

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"
        
    - name: Clean npm cache and node_modules
      run: |
        npm cache clean --force
        rm -rf $HOME/fresh-workspace/backend/node_modules || true
      
    - name: Install Backend Dependencies
      working-directory: $HOME/fresh-workspace/backend
      run: |
        npm ci --no-cache
    
    - name: Configure Backend Environment
      working-directory: $HOME/fresh-workspace/backend
      run: |
        echo "NODE_ENV=production" > .env
        echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
        echo "PORT=5000" >> .env
        echo "CORS_ORIGIN=*" >> .env
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Generate build timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: Build and Push Backend Image
      uses: docker/build-push-action@v5
      with:
        context: $HOME/fresh-workspace/backend
        push: true
        tags: |
          ${{ env.BACKEND_IMAGE }}:latest
          ${{ env.BACKEND_IMAGE }}:${{ steps.timestamp.outputs.timestamp }}
        build-args: |
          NODE_ENV=production
          MONGO_URL=${{ secrets.MONGO_URL }}
          PORT=5000
          CORS_ORIGIN=*
        cache-from: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache
        cache-to: type=inline
        no-cache: true
        pull: true
